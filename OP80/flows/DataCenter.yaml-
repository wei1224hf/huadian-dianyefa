- id: a6632bb9eb46a176
  type: tab
  label: DataCenter
  disabled: false
  info: ''
  env: []
- id: decb630c2a227768
  type: file
  z: a6632bb9eb46a176
  name: 重写文件
  filename: /home/gene/nodejs/userDir3/flows/DataToDevice.json
  filenameType: str
  appendNewline: false
  createDir: false
  overwriteFile: 'true'
  encoding: none
  x: 2200
  'y': 220
  wires:
    - []
- id: 67da85378cb7cf04
  type: json
  z: a6632bb9eb46a176
  name: ''
  property: payload
  action: str
  pretty: false
  x: 2050
  'y': 220
  wires:
    - - decb630c2a227768
- id: 63d80612e660d136
  type: inject
  z: a6632bb9eb46a176
  name: ''
  props:
    - p: payload
    - p: topic
      vt: str
  repeat: ''
  crontab: ''
  once: false
  onceDelay: 0.1
  topic: ''
  payload: ''
  payloadType: date
  x: 170
  'y': 240
  wires:
    - - a20724385b2bb116
- id: a20724385b2bb116
  type: change
  z: a6632bb9eb46a176
  name: ''
  rules:
    - t: set
      p: initDataFlow
      pt: global
      to: 'true'
      tot: bool
  action: ''
  property: ''
  from: ''
  to: ''
  reg: false
  x: 370
  'y': 240
  wires:
    - []
- id: 24d7a37c3478a504
  type: function
  z: a6632bb9eb46a176
  name: 自动配置设备监听
  func: >-
    var arr = [];


    var arr_display = [];

    var tab = {
        id:"66ef82508844a0be",
        "type": "tab",
        "label": "DataToDevice",
        "disabled": false,
        "info": "",
        "env": []
    };


    var nodeX = 
        {
            "id": "6bef479b0810c7fd",
            "type": "link out",
            "z": "66ef82508844a0be",
            "name": "onDataChange",
            "mode": "link",
            "links": [
                "9f079691ddfa9681","6b4c49db67d0f57e"
            ],
        "x": 500,
        "y": 200,
            "wires": []
        }
    ;


    var g_fs = global.get("g_fs");

    const onS7Chage =
    g_fs.readFileSync("/home/gene/nodejs/jsFunctions/onS7Chage.js", 'utf8');


    var functionNode = {
        "id": "node_s7_function" ,
        "type": "function",
        "z": tab.id,
        "name": "node_s7_function",
        "func": onS7Chage,
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300 ,
        "y": 200,
        "wires": [
            ["6bef479b0810c7fd"]
        ]
    };


    arr_display.push(tab);

    arr_display.push(nodeX);

    arr_display.push(functionNode);


    var masterNode = {};

    var _connect_address = "";

    var modbusFunctionNodeId = 0;

    var data = global.get("monitors");

    var nodeIdx = 0;

    var pointIdx = 0;

    for(var i=0;i<data.length;i++){
        var item = data[i];
        pointIdx ++;
        if(item.connect_type=="S1200"){
            if(_connect_address!=item.connect_address){
                nodeIdx ++;            
                _connect_address = item.connect_address;
                var clone = JSON.parse(JSON.stringify(masterNode));
                clone = {
                    "id": "node_"+nodeIdx,
                    "isDataCenter": 1,
                    "type": "s7 endpoint",
                    "transport": "iso-on-tcp",
                    "address": _connect_address,
                    "port": "102",
                    "rack": "0",
                    "slot": "1",
                    "localtsaphi": "01",
                    "localtsaplo": "00",
                    "remotetsaphi": "01",
                    "remotetsaplo": "00",
                    "connmode": "rack-slot",
                    "adapter": "",
                    "busaddr": "2",
                    "cycletime": "1000",
                    "timeout": "2000",
                    "name": item.device+"_s7_endpoint",
                    "vartable": [
                        {
                            "addr": item.address,
                            "name": item.device+"|"+item.code,
                        }
                    ]                
                }
                masterNode = clone;
                arr.push(masterNode);            
                nodeIdx ++; 


                var slaveNode = {
                    "id": "node_" + nodeIdx,
                    "type": "s7 in",
                    "z": tab.id,
                    "endpoint": "node_" + (nodeIdx - 1),
                    "mode": "all-split",
                    "variable": "",
                    "diff": true,
                    "name": item.device + "_s7in",
                    "x": 250,
                    "y": Math.floor(nodeIdx / 2) * 80 + 80,
                    "wires": [
                        [
                            "node_s7_function"
                        ]
                    ]
                };
                arr_display.push(slaveNode);

              
            }
            else{
                masterNode.vartable.push({
                        "addr": item.address,
                    "name": item.device+"|"+item.code,
                    }
                );
            }
        }
        
    }


    node.send( {dataCenter:arr, type: 'server'});

    node.send({ payload: arr_display, type: 'display' });
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 1770
  'y': 260
  wires:
    - - 9ad453e537e0752f
- id: 9ad453e537e0752f
  type: switch
  z: a6632bb9eb46a176
  name: ''
  property: type
  propertyType: msg
  rules:
    - t: eq
      v: server
      vt: str
    - t: eq
      v: display
      vt: str
  checkall: 'true'
  repair: false
  outputs: 2
  x: 1910
  'y': 160
  wires:
    - []
    - - 67da85378cb7cf04
- id: ce7d973bd740adb7
  type: influxdb out
  z: a6632bb9eb46a176
  influxdb: fdb4b3fb6e4144b0
  name: 设备状态变更记录
  measurement: logs_onchage
  precision: ''
  retentionPolicy: ''
  database: database
  precisionV18FluxV20: ms
  retentionPolicyV18Flux: ''
  org: organisation
  bucket: bucket
  x: 310
  'y': 320
  wires: []
- id: 9f079691ddfa9681
  type: link in
  z: a6632bb9eb46a176
  name: onDataChange
  links:
    - 6bef479b0810c7fd
  x: 155
  'y': 320
  wires:
    - - ce7d973bd740adb7
- id: 32ee451cf9375848
  type: function
  z: a6632bb9eb46a176
  name: 点位数据初始化
  func: |
    var data = global.get("monitors");
    for(var i=0;i<data.length;i++){
        var item = data[i];
        node.send({ payload: { "opcuaCommand": "addVariable" }, topic: "ns=1;s="+item.device+"|"+item.code+";datatype=Double"  } );
    }
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 1100
  'y': 700
  wires:
    - []
- id: 6b4c49db67d0f57e
  type: link in
  z: a6632bb9eb46a176
  name: OPCUA_CHANGE
  links:
    - 6bef479b0810c7fd
  x: 155
  'y': 440
  wires:
    - - b3e90d1a8f596783
- id: b3e90d1a8f596783
  type: function
  z: a6632bb9eb46a176
  name: 点位数据变更推送
  func: >-
    msg.payload = { messageType: 'Variable', variableName: msg.payload.device +
    "|" + msg.payload.code, datatype: 'Double', namespace: 1, variableValue
    :msg.payload.value};

    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 310
  'y': 440
  wires:
    - []
- id: c3292f9b5d4b661f
  type: function
  z: a6632bb9eb46a176
  name: 读取所有设备
  func: |-
    msg.topic = "CREATE TABLE device ("+
      "  name              VARCHAR (200) NOT NULL,"+
      "   code              VARCHAR (200),"+
        " request           INT,"+
     "    response          INT,"+
       "  state             INT,"+
         "id                INTEGER       PRIMARY KEY AUTOINCREMENT,"+
     "    type              INT,"+
       "  key_component     VARCHAR (200),"+
         "product_name      VARCHAR (200),"+
     "    product_barcode   VARCHAR (200),"+
       "  takt              FLOAT,"+
         "time_run          DATETIME,"+
     "    connect_address,"+
     "    connect_type,"+
     "    operator          VARCHAR (200),"+
      "   operator_nickname VARCHAR (200),"+
     "    time_created      DATETIME,"+
     "    user_created      VARCHAR (200),"+
     "    time_lastupdated  DATETIME,"+
     "    user_lastupdated  VARCHAR (200) "+
     ");"+
     ""
    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 320
  'y': 540
  wires:
    - []
- id: 9c4f4a239808c056
  type: inject
  z: a6632bb9eb46a176
  name: ''
  props:
    - p: payload
    - p: topic
      vt: str
  repeat: ''
  crontab: ''
  once: false
  onceDelay: 0.1
  topic: ''
  payload: ''
  payloadType: date
  x: 130
  'y': 560
  wires:
    - - c3292f9b5d4b661f
- id: 81b937487430e910
  type: modbus-server
  z: a6632bb9eb46a176
  name: '503'
  logEnabled: false
  hostname: 0.0.0.0
  serverPort: '503'
  responseDelay: 100
  delayUnit: ms
  coilsBufferSize: 10000
  holdingBufferSize: 10000
  inputBufferSize: 10000
  discreteBufferSize: 10000
  showErrors: false
  x: 230
  'y': 800
  wires:
    - []
    - []
    - []
    - []
    - []
- id: 72634f37e27827b1
  type: modbus-server
  z: a6632bb9eb46a176
  name: '504'
  logEnabled: false
  hostname: 0.0.0.0
  serverPort: '504'
  responseDelay: 100
  delayUnit: ms
  coilsBufferSize: 10000
  holdingBufferSize: 10000
  inputBufferSize: 10000
  discreteBufferSize: 10000
  showErrors: false
  x: 230
  'y': 880
  wires:
    - []
    - []
    - []
    - []
    - []
- id: 92f06e626ec8338f
  type: modbus-server
  z: a6632bb9eb46a176
  name: '505'
  logEnabled: false
  hostname: 0.0.0.0
  serverPort: '505'
  responseDelay: 100
  delayUnit: ms
  coilsBufferSize: 10000
  holdingBufferSize: 10000
  inputBufferSize: 10000
  discreteBufferSize: 10000
  showErrors: false
  x: 230
  'y': 960
  wires:
    - []
    - []
    - []
    - []
    - []
- id: 2319622f7bf4c895
  type: modbus-server
  z: a6632bb9eb46a176
  name: '506'
  logEnabled: false
  hostname: 0.0.0.0
  serverPort: '506'
  responseDelay: 100
  delayUnit: ms
  coilsBufferSize: 10000
  holdingBufferSize: 10000
  inputBufferSize: 10000
  discreteBufferSize: 10000
  showErrors: false
  x: 230
  'y': 1040
  wires:
    - []
    - []
    - []
    - []
    - []
- id: 2fc6f3fd6b9c13d3
  type: change
  z: a6632bb9eb46a176
  name: ''
  rules:
    - t: set
      p: rewrite
      pt: global
      to: payload
      tot: msg
  action: ''
  property: ''
  from: ''
  to: ''
  reg: false
  x: 1370
  'y': 440
  wires:
    - []
- id: 6cc27a840456a22a
  type: inject
  z: a6632bb9eb46a176
  name: ''
  props:
    - p: payload
  repeat: ''
  crontab: ''
  once: false
  onceDelay: 0.1
  topic: ''
  payload: 'true'
  payloadType: bool
  x: 1130
  'y': 420
  wires:
    - - 2fc6f3fd6b9c13d3
- id: 488f957f40686289
  type: inject
  z: a6632bb9eb46a176
  name: ''
  props:
    - p: payload
  repeat: ''
  crontab: ''
  once: false
  onceDelay: 0.1
  topic: ''
  payload: 'false'
  payloadType: bool
  x: 1130
  'y': 460
  wires:
    - - 2fc6f3fd6b9c13d3
- id: 770f5e151179e450
  type: change
  z: a6632bb9eb46a176
  name: ''
  rules:
    - t: set
      p: datas.request
      pt: global
      to: '1234'
      tot: num
  action: ''
  property: ''
  from: ''
  to: ''
  reg: false
  x: 1390
  'y': 520
  wires:
    - []
- id: 09f78af5035c2b40
  type: inject
  z: a6632bb9eb46a176
  name: ''
  props:
    - p: payload
  repeat: ''
  crontab: ''
  once: false
  onceDelay: 0.1
  topic: ''
  payload: 'true'
  payloadType: bool
  x: 1130
  'y': 520
  wires:
    - - 770f5e151179e450