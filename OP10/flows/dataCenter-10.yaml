- id: f9ed7ce98dfb48f5
  type: tab
  label: dataCenter-10
  disabled: false
  info: ''
  env: []
- id: 3dba3e8d93abf91f
  type: modbus-server
  z: f9ed7ce98dfb48f5
  name: OP10
  logEnabled: false
  hostname: 0.0.0.0
  serverPort: '10010'
  responseDelay: 100
  delayUnit: ms
  coilsBufferSize: 10000
  holdingBufferSize: 10000
  inputBufferSize: 10000
  discreteBufferSize: 10000
  showErrors: true
  x: 130
  'y': 620
  wires:
    - []
    - []
    - []
    - []
    - []
- id: ae2ec5083c579d8e
  type: modbus-read
  z: f9ed7ce98dfb48f5
  name: DI信号读取
  topic: ''
  showStatusActivities: false
  logIOActivities: false
  showErrors: false
  showWarnings: true
  unitid: '1'
  dataType: HoldingRegister
  adr: '5'
  quantity: '12'
  rate: '200'
  rateUnit: ms
  delayOnStart: false
  startDelayTime: ''
  server: 1a3a610758658ecb
  useIOFile: false
  ioFile: ''
  useIOForPayload: false
  emptyMsgOnFail: false
  x: 140
  'y': 220
  wires:
    - - 7f573a2b4067baa6
      - 05f3f7d57a0dc813
    - []
- id: 7f573a2b4067baa6
  type: function
  z: f9ed7ce98dfb48f5
  name: 写入到本地内存
  func: |-
    var DI_Names = [
        "DO_JiTing",
        "DO_QiDong",
        "DO_ZhiDong_ShouDong",
        "DO_TingZhi",
        "DO_ShiNeng",
        "DOclearError",
        "DOnetwork",
        "DO_PP_to_mian",
        "DO_tuici_ok",
        "DO_chongci_ok",
        "L_DOtuopanyouliao",
        "R_DOtuopanyouliao",
        ];

    var IO_10 = global.get("IO_10");
    const data = msg.payload;
    for(var i=0;i<DI_Names.length;i++){
        if(DI_Names[i]!='-'){
            IO_10.DI[DI_Names[i]] = data[i];
        }
    }
    global.set("IO_10",IO_10);
    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 480
  'y': 200
  wires:
    - []
- id: 5510cac9c6e89b5c
  type: inject
  z: f9ed7ce98dfb48f5
  name: OP10数据初始化
  props:
    - p: payload
    - p: topic
      vt: str
  repeat: ''
  crontab: ''
  once: true
  onceDelay: '1'
  topic: ''
  payload: ''
  payloadType: date
  x: 170
  'y': 40
  wires:
    - - 1ea186152dc1a1ba
- id: d173ea419e8a649d
  type: function
  z: f9ed7ce98dfb48f5
  name: IO初始化
  func: |-
    var IO_10 = {
        DO:{},
        DI:{
            "DO_JiTing": 0,
            "DO_QiDong": 0,
            "DO_ZhiDong_ShouDong": 0,
            "DO_TingZhi": 0,
            "DO_ShiNeng": 0,
            "DOclearError": 0,
            "DOnetwork": 0,
            "DO_PP_to_mian": 0,
            "DO_tuici_ok": 0,
            "DO_chongci_ok": 0,
            "L_DOtuopanyouliao": 0,
            "R_DOtuopanyouliao": 0,
        },
        AI:{//node-red收到来自控制器的逻辑变量
            response: 0,//控制器端动作端的完成信号
            error: 0,//控制器端的故障码
            status: 0,//控制器端的状态

        },
        AO:{//node-red要发送下去的逻辑变量
            request: 0,//下发给控制器的动作号

            index_product: 1,

            work_object: 0, //产品类型

            LCS: 0,
        },    
        AI_LCS:{
            request: 0,
        },
        AO_LCS:{
            response: 0,
        },
        AI_AGV:{
            request: 0,
        },
        AO_AGV:{
            response: 0,
        },    
          
    };

    global.set("IO_10",IO_10);

    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 620
  'y': 40
  wires:
    - - 604d8873ecf1a876
- id: ec1227fef549c0f8
  type: modbus-read
  z: f9ed7ce98dfb48f5
  name: 6轴机械臂modbus-ao-逻辑变量
  topic: ''
  showStatusActivities: false
  logIOActivities: false
  showErrors: false
  showWarnings: true
  unitid: '1'
  dataType: HoldingRegister
  adr: '1'
  quantity: '4'
  rate: '200'
  rateUnit: ms
  delayOnStart: false
  startDelayTime: ''
  server: 1a3a610758658ecb
  useIOFile: false
  ioFile: ''
  useIOForPayload: false
  emptyMsgOnFail: false
  x: 210
  'y': 360
  wires:
    - - 4633ab44f4e2cfef
    - []
- id: 4633ab44f4e2cfef
  type: function
  z: f9ed7ce98dfb48f5
  name: 写入到本地内存
  func: |-
    const data = msg.payload;
    var IO = global.get("IO_10");
    var i = 0;
    IO.AI.error  = data[i]; i++;
    IO.AI.status  = data[i]; i++;
    i++;
    IO.AI.response = data[i]; i++;

    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 480
  'y': 360
  wires:
    - - c3c16df1b59e377a
      - a9e0a9a236c3ce1e
- id: 05f3f7d57a0dc813
  type: modbus-write
  z: f9ed7ce98dfb48f5
  name: DI信号同步
  showStatusActivities: false
  showErrors: false
  showWarnings: true
  unitid: '1'
  dataType: MHoldingRegisters
  adr: '5000'
  quantity: '12'
  server: ebdc7b3b4236640e
  emptyMsgOnFail: false
  keepMsgProperties: false
  delayOnStart: false
  startDelayTime: ''
  x: 470
  'y': 240
  wires:
    - []
    - []
- id: 581258e7ec76ca3f
  type: inject
  z: f9ed7ce98dfb48f5
  name: ''
  props:
    - p: payload
    - p: topic
      vt: str
  repeat: ''
  crontab: ''
  once: true
  onceDelay: '2'
  topic: ''
  payload: ''
  payloadType: date
  x: 140
  'y': 480
  wires:
    - - 992229330d7f0aa0
- id: 992229330d7f0aa0
  type: trigger
  z: f9ed7ce98dfb48f5
  name: ''
  op1: '1'
  op2: '0'
  op1type: str
  op2type: str
  duration: '-250'
  extend: false
  overrideDelay: false
  units: ms
  reset: ''
  bytopic: all
  topic: topic
  outputs: 1
  x: 330
  'y': 480
  wires:
    - - 3f5bb7c3b3a49d19
- id: db2fd7353bc50f2b
  type: modbus-write
  z: f9ed7ce98dfb48f5
  name: 写入到6轴
  showStatusActivities: false
  showErrors: false
  showWarnings: true
  unitid: '1'
  dataType: MHoldingRegisters
  adr: '17'
  quantity: '3'
  server: 1a3a610758658ecb
  emptyMsgOnFail: false
  keepMsgProperties: false
  delayOnStart: false
  startDelayTime: ''
  x: 770
  'y': 540
  wires:
    - []
    - []
- id: 3f5bb7c3b3a49d19
  type: function
  z: f9ed7ce98dfb48f5
  name: 写入到6轴机械臂
  func: |-
    var data = [];
    var IO = global.get("IO_10");
    data.push(IO.AO.work_object);
    data.push(IO.AO.request);
    data.push(IO.AO.LCS);
    msg.payload = data;
    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 530
  'y': 540
  wires:
    - - db2fd7353bc50f2b
      - 26f5dadd28c0e3b4
- id: 357e91fad310949b
  type: modbus-read
  z: f9ed7ce98dfb48f5
  name: LCS 调度命令读取
  topic: ''
  showStatusActivities: false
  logIOActivities: false
  showErrors: false
  showWarnings: true
  unitid: '1'
  dataType: HoldingRegister
  adr: '4010'
  quantity: '1'
  rate: '200'
  rateUnit: ms
  delayOnStart: false
  startDelayTime: ''
  server: ebdc7b3b4236640e
  useIOFile: false
  ioFile: ''
  useIOForPayload: false
  emptyMsgOnFail: false
  x: 170
  'y': 420
  wires:
    - - 0b44f277f7555902
    - []
- id: 0b44f277f7555902
  type: function
  z: f9ed7ce98dfb48f5
  name: 写入到本地内存
  func: |-

    const data = msg.payload;
    var IO = global.get("IO_10");
    var i = 0;
    IO.AI_LCS.request = data[i]; i++;
    msg.payload = IO.AI_LCS.request;


    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 480
  'y': 420
  wires:
    - - 6ff82c9c2e34526f
- id: 05ac1629b6a0b772
  type: function
  z: f9ed7ce98dfb48f5
  name: 发送给LCS呼叫AGV
  func: |-
    var data = [];
    var IO = global.get("IO_100");
    data.push(IO.AO_LCS.Pos_In);
    data.push(IO.AO_LCS.Pos_Out);

    msg.payload = data;
    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 540
  'y': 600
  wires:
    - - a065307aaef40619
- id: a065307aaef40619
  type: modbus-write
  z: f9ed7ce98dfb48f5
  name: 写入到虚拟modbus
  showStatusActivities: false
  showErrors: false
  showWarnings: true
  unitid: '1'
  dataType: MHoldingRegisters
  adr: '0'
  quantity: '100'
  server: ebdc7b3b4236640e
  emptyMsgOnFail: false
  keepMsgProperties: false
  delayOnStart: false
  startDelayTime: ''
  x: 750
  'y': 600
  wires:
    - []
    - []
- id: 604d8873ecf1a876
  type: function
  z: f9ed7ce98dfb48f5
  name: 物料-视觉-工单 初始化
  func: |-

    var Vision_10 = {
        sessin: "",
        v1: {//第一层料盘上的物料,总计20个坐标,由视觉计算反馈
            request: "",
            response: "",
            positions: [ [0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0] ],
            result: 0,
            step: 0,
        },
    };
    var ErrorMap_10 = [
        "视觉通信故障",
        "螺丝刀通信故障",
        "伺服1故障",
        "伺服2故障",
        "伺服3故障",
        "伺服4故障",   
        "伺服5故障",
        "伺服6故障",
        "伺服7故障",
        ];
        
    global.set("StationTask_10",{
        BillCode: "-",
        ProductCode: "-",
        ProductName:"-",
        ProcessDetail: [{
            ProcessCode: "OP10",
            ProcessName: "-",
            EquipmentCode: "OP10",
            ProgramNumer: 1,
            Num: 0,
            MaterialDetails: [
               
          
            ]
        }]
    });

    global.set("Vision_10",Vision_10);
    global.set("ErrorMap_10", ErrorMap_10);
    const t = (new Date()).toISOString();
    global.set("Request_10", {
        StartTime: t,
        EndTime: t,
        RequestID: "-",
        RequestID_: "-",
        barcode: "",
    });
    global.set("LCS","http://192.168.110.200:9006/openApiUbiquitous/");
    global.set("tray1",[1,1,1]);

    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 840
  'y': 40
  wires:
    - []
- id: 1ea186152dc1a1ba
  type: function
  z: f9ed7ce98dfb48f5
  name: 定义变量名
  func: |-
    global.set("ns",{
     
        
        
    });
    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 450
  'y': 40
  wires:
    - - d173ea419e8a649d
- id: 6ff82c9c2e34526f
  type: rbe
  z: f9ed7ce98dfb48f5
  name: ''
  func: rbei
  gap: ''
  start: ''
  inout: out
  septopics: true
  property: payload
  topi: topic
  x: 670
  'y': 420
  wires:
    - - d5341e8da35f31f3
- id: d5341e8da35f31f3
  type: function
  z: f9ed7ce98dfb48f5
  name: 信号转换
  func: |-
    var tray1 = global.get("tray1");

    const IO = global.get("IO_10");
    if (IO.AI_LCS.request==10){
        IO.AO.request = 100;
        tray1[0] = 1
        tray1[1] = 1
        tray1[2] = 1
    }
    else if (IO.AI_LCS.request == 12) {

        if (tray1[0] == 1){
            IO.AO.request = 101;
            tray1[0] = 0;
        }
        else if (tray1[1] == 1) {
            IO.AO.request = 102;
            tray1[1] = 0;
        }
        else if (tray1[2] == 1) {
            IO.AO.request = 103;
            tray1[2] = 0;
        }
        else{
            //TODO
        }
    }
    else{
        IO.AO.request = IO.AI_LCS.request;
    }
    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 820
  'y': 420
  wires:
    - []
- id: c3c16df1b59e377a
  type: change
  z: f9ed7ce98dfb48f5
  name: ''
  rules:
    - t: set
      p: payload
      pt: msg
      to: IO_10.AI.response
      tot: global
  action: ''
  property: ''
  from: ''
  to: ''
  reg: false
  x: 730
  'y': 220
  wires:
    - - 513111e3b2cb9d26
- id: 513111e3b2cb9d26
  type: rbe
  z: f9ed7ce98dfb48f5
  name: ''
  func: rbei
  gap: ''
  start: ''
  inout: out
  septopics: true
  property: payload
  topi: topic
  x: 890
  'y': 220
  wires:
    - - 5f6fb648080e9d6e
      - f865395e272f54cc
      - 1ac6752314ca8383
- id: 5f6fb648080e9d6e
  type: switch
  z: f9ed7ce98dfb48f5
  name: ''
  property: IO_10.AI.response
  propertyType: global
  rules:
    - t: eq
      v: '111'
      vt: num
    - t: eq
      v: '112'
      vt: num
    - t: eq
      v: '113'
      vt: num
  checkall: 'true'
  repair: false
  outputs: 3
  x: 1050
  'y': 120
  wires:
    - - 522303ae3e23f3bd
      - 6950b970710322ca
    - - e03a1004346cf17f
    - - a6f26d549b6f55c3
- id: 522303ae3e23f3bd
  type: function
  z: f9ed7ce98dfb48f5
  name: 函数 5
  func: |-
    var tray1 = global.get("tray1");
    tray1[0] = 0;
    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 1290
  'y': 100
  wires:
    - []
- id: e03a1004346cf17f
  type: function
  z: f9ed7ce98dfb48f5
  name: 函数 6
  func: |-
    var tray1 = global.get("tray1");
    tray1[1] = 0;
    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 1290
  'y': 140
  wires:
    - []
- id: a6f26d549b6f55c3
  type: function
  z: f9ed7ce98dfb48f5
  name: 函数 7
  func: |-
    var tray1 = global.get("tray1");
    tray1[2] = 0;
    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 1290
  'y': 180
  wires:
    - []
- id: 92571880ef3ebb40
  type: file
  z: f9ed7ce98dfb48f5
  name: ''
  filename: 'C:/tmp/robot_response.txt'
  filenameType: str
  appendNewline: true
  createDir: false
  overwriteFile: 'false'
  encoding: none
  x: 1170
  'y': 220
  wires:
    - []
- id: a9e0a9a236c3ce1e
  type: change
  z: f9ed7ce98dfb48f5
  name: ''
  rules:
    - t: set
      p: payload
      pt: msg
      to: IO_10.AI.status
      tot: global
  action: ''
  property: ''
  from: ''
  to: ''
  reg: false
  x: 730
  'y': 300
  wires:
    - - 6798e3dd21597dbf
- id: 6798e3dd21597dbf
  type: rbe
  z: f9ed7ce98dfb48f5
  name: ''
  func: rbei
  gap: ''
  start: ''
  inout: out
  septopics: true
  property: payload
  topi: topic
  x: 890
  'y': 300
  wires:
    - - a545dc42224e88c2
- id: f645e7dce8794c08
  type: file
  z: f9ed7ce98dfb48f5
  name: ''
  filename: 'C:/tmp/robot_status.txt'
  filenameType: str
  appendNewline: true
  createDir: false
  overwriteFile: 'false'
  encoding: none
  x: 1160
  'y': 300
  wires:
    - []
- id: f865395e272f54cc
  type: debug
  z: f9ed7ce98dfb48f5
  name: 调试 18
  active: true
  tosidebar: true
  console: false
  tostatus: false
  complete: payload
  targetType: msg
  statusVal: ''
  statusType: auto
  x: 1060
  'y': 160
  wires: []
- id: 8a3de4622d704cdd
  type: inject
  z: f9ed7ce98dfb48f5
  name: ''
  props:
    - p: payload
    - p: topic
      vt: str
  repeat: ''
  crontab: ''
  once: false
  onceDelay: 0.1
  topic: ''
  payload: ''
  payloadType: date
  x: 1110
  'y': 60
  wires:
    - - 522303ae3e23f3bd
- id: 6950b970710322ca
  type: debug
  z: f9ed7ce98dfb48f5
  name: 调试 21
  active: true
  tosidebar: true
  console: false
  tostatus: false
  complete: 'false'
  statusVal: ''
  statusType: auto
  x: 1280
  'y': 40
  wires: []
- id: a545dc42224e88c2
  type: function
  z: f9ed7ce98dfb48f5
  name: 函数 8
  func: |-
    var txt = msg.payload;
    var date = (new Date()).toISOString();
    msg.payload = date + " : " + txt;
    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 995
  'y': 300
  wires:
    - - f645e7dce8794c08
  l: false
- id: 1ac6752314ca8383
  type: function
  z: f9ed7ce98dfb48f5
  name: 函数 9
  func: |-
    var txt = msg.payload;
    var date = (new Date()).toISOString();
    msg.payload = date + " : " + txt;
    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 995
  'y': 220
  wires:
    - - 92571880ef3ebb40
  l: false
- id: 26f5dadd28c0e3b4
  type: debug
  z: f9ed7ce98dfb48f5
  name: 调试 25
  active: false
  tosidebar: true
  console: false
  tostatus: false
  complete: 'false'
  statusVal: ''
  statusType: auto
  x: 740
  'y': 500
  wires: []
