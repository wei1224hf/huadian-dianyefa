- id: efd4a3479ccb4ba6
  type: tab
  label: scheduler-10
  disabled: false
  info: ''
  env: []
- id: 4608b52bd0e963be
  type: http in
  z: efd4a3479ccb4ba6
  name: 通用读多个接口
  url: /10/ReadValue
  method: post
  upload: false
  swaggerDoc: ''
  x: 100
  'y': 480
  wires:
    - - 6cdf453a33781e84
      - 2bcb5d2052f1f022
- id: 7bc82b7b8931c0e9
  type: modbus-flex-getter
  z: efd4a3479ccb4ba6
  name: ''
  showStatusActivities: false
  showErrors: false
  showWarnings: true
  logIOActivities: false
  server: ebdc7b3b4236640e
  useIOFile: false
  ioFile: ''
  useIOForPayload: false
  emptyMsgOnFail: false
  keepMsgProperties: false
  delayOnStart: false
  startDelayTime: ''
  x: 810
  'y': 480
  wires:
    - - 09bf2352b623f159
    - - 6e00afefcd1f8d56
- id: 6cdf453a33781e84
  type: change
  z: efd4a3479ccb4ba6
  name: ''
  rules:
    - t: set
      p: ReadValue_10
      pt: global
      to: '[]'
      tot: jsonata
  action: ''
  property: ''
  from: ''
  to: ''
  reg: false
  x: 360
  'y': 480
  wires:
    - - 6f68c83cbeef6995
- id: 6f68c83cbeef6995
  type: function
  z: efd4a3479ccb4ba6
  name: modbus 报文拆分
  func: |-
    var arr = msg.payload;
    for(var i=0;i<arr.length;i++){
        var t = arr[i];
        node.send({payload:{fc:3, address: parseInt(t.Address), quantity:1},temp:parseInt(t.Address)});
    }
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 610
  'y': 480
  wires:
    - - 7bc82b7b8931c0e9
- id: 09bf2352b623f159
  type: function
  z: efd4a3479ccb4ba6
  name: 函数 4
  func: |-
    var arr = global.get("ReadValue_10");
    arr.push({
        Address: msg.modbusRequest.address,
        Value: msg.payload[0],
        ValueType: "int"
    });
    console.debug(arr);
    global.set("ReadValue_10",arr);
    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 990
  'y': 480
  wires:
    - []
- id: f935a45c14451e53
  type: change
  z: efd4a3479ccb4ba6
  name: ''
  rules:
    - t: set
      p: payload.Code
      pt: msg
      to: '0'
      tot: num
    - t: set
      p: payload.Msg
      pt: msg
      to: 操作成功
      tot: str
    - t: set
      p: payload.Data
      pt: msg
      to: ReadValue_10
      tot: global
  action: ''
  property: ''
  from: ''
  to: ''
  reg: false
  x: 640
  'y': 520
  wires:
    - - c1578a5ac1b3e7aa
- id: c1578a5ac1b3e7aa
  type: http response
  z: efd4a3479ccb4ba6
  name: ''
  statusCode: ''
  headers: {}
  x: 790
  'y': 520
  wires: []
- id: 2bcb5d2052f1f022
  type: delay
  z: efd4a3479ccb4ba6
  name: ''
  pauseType: delay
  timeout: '1'
  timeoutUnits: seconds
  rate: '1'
  nbRateUnits: '1'
  rateUnits: second
  randomFirst: '1'
  randomLast: '5'
  randomUnits: seconds
  drop: false
  allowrate: false
  outputs: 1
  x: 280
  'y': 520
  wires:
    - - 773bba15772d7918
- id: 6e00afefcd1f8d56
  type: debug
  z: efd4a3479ccb4ba6
  name: 调试 15
  active: true
  tosidebar: true
  console: false
  tostatus: false
  complete: 'false'
  statusVal: ''
  statusType: auto
  x: 980
  'y': 540
  wires: []
- id: 773bba15772d7918
  type: change
  z: efd4a3479ccb4ba6
  name: ''
  rules:
    - t: set
      p: payload
      pt: msg
      to: '{}'
      tot: jsonata
  action: ''
  property: ''
  from: ''
  to: ''
  reg: false
  x: 450
  'y': 520
  wires:
    - - f935a45c14451e53
- id: f8d1dbf6b0dbfbeb
  type: http response
  z: efd4a3479ccb4ba6
  name: ''
  statusCode: ''
  headers: {}
  x: 1030
  'y': 160
  wires: []
- id: 2d305db09f3358f5
  type: http in
  z: efd4a3479ccb4ba6
  name: 工位任务接收
  url: /10/ReceiveStationTask
  method: post
  upload: false
  swaggerDoc: ''
  x: 90
  'y': 180
  wires:
    - - 8924cb91e4255f67
- id: 069cd12c59655e36
  type: http in
  z: efd4a3479ccb4ba6
  name: 泛在通用写多个接口
  url: /10/WriteValue
  method: post
  upload: false
  swaggerDoc: ''
  x: 110
  'y': 440
  wires:
    - - e650501ef7c8bd5d
- id: e650501ef7c8bd5d
  type: function
  z: efd4a3479ccb4ba6
  name: modbus 报文拆分
  func: |-
    var arr = msg.payload;
    for(var i=0;i<arr.length;i++){
        var t = arr[i];
        msg.payload = { value: parseInt(t.Value), 'fc': 6, 'unitid': 1, 'address': parseInt(t.Address), 'quantity': 1 } 
        node.send(msg);
    }
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 330
  'y': 440
  wires:
    - - bf70b1ac9f63a3ce
- id: bf70b1ac9f63a3ce
  type: modbus-flex-write
  z: efd4a3479ccb4ba6
  name: 批量修改modbus值
  showStatusActivities: false
  showErrors: false
  showWarnings: true
  server: ebdc7b3b4236640e
  emptyMsgOnFail: false
  keepMsgProperties: false
  delayOnStart: false
  startDelayTime: ''
  x: 810
  'y': 440
  wires:
    - []
    - []
- id: deb61c6e5a96a297
  type: change
  z: efd4a3479ccb4ba6
  name: ''
  rules:
    - t: set
      p: StationTask_10
      pt: global
      to: payload
      tot: msg
  action: ''
  property: ''
  from: ''
  to: ''
  reg: false
  x: 620
  'y': 200
  wires:
    - - ad1349edb4a3a7a9
- id: ad1349edb4a3a7a9
  type: function
  z: efd4a3479ccb4ba6
  name: 反馈
  func: |-
    msg.payload = {
        Code: 0,
        Msg:"操作成功"
    };
    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 850
  'y': 200
  wires:
    - - f8d1dbf6b0dbfbeb
- id: 237dec7981d46117
  type: http in
  z: efd4a3479ccb4ba6
  name: ReceiveEndSignal
  url: /10/ReceiveEndSignal
  method: post
  upload: false
  swaggerDoc: ''
  x: 110
  'y': 80
  wires:
    - - 943af9003c75f030
- id: 363625936814d627
  type: http response
  z: efd4a3479ccb4ba6
  name: ''
  statusCode: ''
  headers: {}
  x: 590
  'y': 100
  wires: []
- id: 1dae50e8eeeb5c98
  type: function
  z: efd4a3479ccb4ba6
  name: 反馈
  func: |-
    msg.payload = {
        Code: 0,
        Msg: "操作成功"
    };
    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 450
  'y': 80
  wires:
    - - 363625936814d627
- id: 943af9003c75f030
  type: switch
  z: efd4a3479ccb4ba6
  name: ''
  property: payload.BillCode
  propertyType: msg
  rules:
    - t: eq
      v: StationTask_10.BillCode
      vt: global
    - t: else
  checkall: 'true'
  repair: false
  outputs: 2
  x: 325
  'y': 80
  wires:
    - - 1dae50e8eeeb5c98
      - c4a8d332b6ef6e97
    - - 896b57cae6d989da
  l: false
- id: 896b57cae6d989da
  type: function
  z: efd4a3479ccb4ba6
  name: 反馈
  func: |-
    msg.payload = {
        Code: 1,
        Msg: "操作失败,当前设备执行的工单和下发的结束工单不一致"
    };
    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 450
  'y': 120
  wires:
    - - 363625936814d627
- id: efd3c09feee9ba70
  type: http response
  z: efd4a3479ccb4ba6
  name: ''
  statusCode: ''
  headers: {}
  x: 430
  'y': 240
  wires: []
- id: d3c523395d32e574
  type: http in
  z: efd4a3479ccb4ba6
  name: 工位状态-轮询
  url: /10/GetStationState
  method: post
  upload: false
  swaggerDoc: ''
  x: 90
  'y': 240
  wires:
    - - 5e8425ab74d15c64
- id: 5e8425ab74d15c64
  type: function
  z: efd4a3479ccb4ba6
  name: 反馈
  func: |-
    //ASDF
    var IO = global.get("IO_10");
    msg.payload = {
        Msg: "操作成功",
        Data: [{
            StationCode: "OP_10",
            StationName: "产线下料",
            Status: IO.AI.status
        }]
    }
    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 250
  'y': 240
  wires:
    - - efd3c09feee9ba70
- id: 895ab5888ce9d012
  type: http in
  z: efd4a3479ccb4ba6
  name: 动作执行
  url: /10/DoAction
  method: post
  upload: false
  swaggerDoc: ''
  x: 80
  'y': 320
  wires:
    - - d33fd4644621e60b
      - 619bfafebb0de975
      - 37c372a70ce118c4
- id: 9cad25a40f338606
  type: function
  z: efd4a3479ccb4ba6
  name: modbus 报文拆分
  func: |-
    var t = msg.payload;
    if(t.Value==0 && t.Address==4010){
        t.RequestID = "-";
    }
    var Request = global.get("Request_10");
    Request.RequestID = t.RequestID;
    var t2 = (new Date()).toISOString();
    Request.StartTime = t2;
    Request.EndTime = "";

    var IO = global.get("IO_10");
    IO.AI_LCS.request_ = t.Value;


    if (t.Value == 12 && IO.DI.L_DOtuopanyouliao == 0) {
        msg.payload = { Code: 1, Msg: "没有托盘,不能操作" };
        node.send([, msg]);
    }
    else {
        msg.payload = { Code: 0, Msg: "操作成功" };
        node.send([{ payload: { value: parseInt(t.Value), 'fc': 6, 'unitid': 1, 'address': parseInt(t.Address), 'quantity': 1 } }, 
            msg]);
    }
  outputs: 2
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 470
  'y': 320
  wires:
    - - bf70b1ac9f63a3ce
      - 3894772765d7ffd8
      - c0613c246b3e380f
    - - aaeb451f35e295ca
- id: e759e7cdef9ed3b0
  type: switch
  z: efd4a3479ccb4ba6
  name: ''
  property: Request_10.RequestID
  propertyType: global
  rules:
    - t: eq
      v: '-'
      vt: str
    - t: neq
      v: '-'
      vt: str
  checkall: 'true'
  repair: false
  outputs: 2
  x: 255
  'y': 320
  wires:
    - - 9cad25a40f338606
    - - 49cabd21c330f7f7
  l: false
- id: aaeb451f35e295ca
  type: http response
  z: efd4a3479ccb4ba6
  name: ''
  statusCode: ''
  headers: {}
  x: 570
  'y': 380
  wires: []
- id: 49cabd21c330f7f7
  type: function
  z: efd4a3479ccb4ba6
  name: 失败
  func: |-
    msg.payload = {
        Code: 1,
        Msg: "上一个动作还未完成"
    };
    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 430
  'y': 360
  wires:
    - - aaeb451f35e295ca
- id: 8924cb91e4255f67
  type: function
  z: efd4a3479ccb4ba6
  name: 格式解析
  func: |
    msg.error = 0;

    var task = global.get("StationTask_10");
    if(task.BillCode!='-'){
        msg.error = 1;
        msg.errorMsg = "previese task is on going";
        return msg;
    }

    const data = msg.payload;
    if((typeof(data)!='object')){
        msg.error = 2;
        msg.errorMsg = "format wrong";
        return msg;
    }

    if (!('BillCode' in data)){
        msg.error = 3;
        msg.errorMsg = "no BillCode";
        return msg;
    }
    if (!('ProductCode' in data)){
        msg.error = 4;
        msg.errorMsg = "no ProductCode";
        return msg;
    }

    if (!('ProcessDetail' in data)){
        msg.error = 5;
        msg.errorMsg = "no ProcessDetail";
        return msg;
    }

    if(data.ProcessDetail.length==1){
        const data2 = data.ProcessDetail[0];
        if (!('EquipmentCode' in data2)){
            msg.error = 6;
            msg.errorMsg = "no EquipmentCode";
            return msg;
        }
        if(data2.EquipmentCode!='OP100'){
            msg.error = 7;
            msg.errorMsg = "no OP100";
            return msg;
        }
        if (!('Num' in data2)){
            msg.error = 8;
            msg.errorMsg = "no Num";
            return msg;
        }
    }
    else{
        msg.error = 13;
        msg.errorMsg = "ProcessDetail.length should be 1";
        return msg;
    }



    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 260
  'y': 180
  wires:
    - - 15b4780638b47f24
- id: 15b4780638b47f24
  type: switch
  z: efd4a3479ccb4ba6
  name: ''
  property: error
  propertyType: msg
  rules:
    - t: neq
      v: '0'
      vt: num
    - t: eq
      v: '0'
      vt: num
  checkall: 'true'
  repair: false
  outputs: 2
  x: 395
  'y': 180
  wires:
    - - 28eceff2f21345ee
    - - deb61c6e5a96a297
  l: false
- id: 28eceff2f21345ee
  type: function
  z: efd4a3479ccb4ba6
  name: 反馈
  func: |-
    msg.payload = {
        Code: 1,
        Msg:"失败"+msg.errorMsg
    };
    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 550
  'y': 160
  wires:
    - - f8d1dbf6b0dbfbeb
- id: c4a8d332b6ef6e97
  type: change
  z: efd4a3479ccb4ba6
  name: ''
  rules:
    - t: set
      p: StationTask_10.BillCode
      pt: global
      to: '-'
      tot: str
  action: ''
  property: ''
  from: ''
  to: ''
  reg: false
  x: 550
  'y': 40
  wires:
    - []
- id: fd3afd4f2b7d8287
  type: inject
  z: efd4a3479ccb4ba6
  name: ''
  props:
    - p: payload
    - p: topic
      vt: str
  repeat: ''
  crontab: ''
  once: true
  onceDelay: '2'
  topic: ''
  payload: ''
  payloadType: date
  x: 100
  'y': 640
  wires:
    - - 6f9732e0ad0d5681
- id: 6f9732e0ad0d5681
  type: trigger
  z: efd4a3479ccb4ba6
  name: ''
  op1: '1'
  op2: '0'
  op1type: str
  op2type: str
  duration: '-250'
  extend: false
  overrideDelay: false
  units: ms
  reset: ''
  bytopic: all
  topic: topic
  outputs: 1
  x: 215
  'y': 640
  wires:
    - - ead9fc87ea3d0f27
      - 466602296230bfe9
  l: false
- id: dea945d4f22dc2ce
  type: rbe
  z: efd4a3479ccb4ba6
  name: ''
  func: rbei
  gap: ''
  start: ''
  inout: out
  septopics: false
  property: payload
  topi: topic
  x: 350
  'y': 720
  wires:
    - - 3217afeb1df75b6b
- id: ead9fc87ea3d0f27
  type: change
  z: efd4a3479ccb4ba6
  name: 状态变化监听
  rules:
    - t: set
      p: payload
      pt: msg
      to: IO_10.AI.status
      tot: global
  action: ''
  property: ''
  from: ''
  to: ''
  reg: false
  x: 180
  'y': 720
  wires:
    - - dea945d4f22dc2ce
- id: 3217afeb1df75b6b
  type: switch
  z: efd4a3479ccb4ba6
  name: ''
  property: IO_10.AI.status
  propertyType: global
  rules:
    - t: eq
      v: '4'
      vt: num
  checkall: 'true'
  repair: false
  outputs: 1
  x: 470
  'y': 720
  wires:
    - - d72a99f95f1edb40
- id: 34845c9d97eae208
  type: rbe
  z: efd4a3479ccb4ba6
  name: ''
  func: rbei
  gap: ''
  start: ''
  inout: out
  septopics: false
  property: payload
  topi: topic
  x: 350
  'y': 800
  wires:
    - - c125392c542e73ab
- id: 466602296230bfe9
  type: change
  z: efd4a3479ccb4ba6
  name: 故障信号监听
  rules:
    - t: set
      p: payload
      pt: msg
      to: IO_10.AI.error
      tot: global
  action: ''
  property: ''
  from: ''
  to: ''
  reg: false
  x: 180
  'y': 800
  wires:
    - - 34845c9d97eae208
- id: c125392c542e73ab
  type: switch
  z: efd4a3479ccb4ba6
  name: ''
  property: payload
  propertyType: msg
  rules:
    - t: gt
      v: '0'
      vt: num
  checkall: 'true'
  repair: false
  outputs: 1
  x: 470
  'y': 800
  wires:
    - - 1f79a6b42a7951c4
- id: c5d0d032b5cdf62c
  type: http request
  z: efd4a3479ccb4ba6
  name: ''
  method: POST
  ret: txt
  paytoqs: ignore
  url: ''
  tls: ''
  persist: false
  proxy: ''
  insecureHTTPParser: false
  authType: ''
  senderr: false
  headers:
    - keyType: other
      keyValue: Accept
      valueType: other
      valueValue: application/json
  x: 840
  'y': 800
  wires:
    - - 8ca7421c5b46b4c2
- id: 8ca7421c5b46b4c2
  type: debug
  z: efd4a3479ccb4ba6
  name: 调试 17
  active: false
  tosidebar: true
  console: false
  tostatus: false
  complete: payload
  targetType: msg
  statusVal: ''
  statusType: auto
  x: 1000
  'y': 800
  wires: []
- id: 1f79a6b42a7951c4
  type: function
  z: efd4a3479ccb4ba6
  name: function 34
  func: |-
    var ErrorMap_60 = global.get("ErrorMap_10");
    msg.payload = {
        EquipmentCode: "OP10",
        EquipmentName: "泛在控制器",
        Status: 0,
        WarnContent: ErrorMap_60[msg.payload]
        };
    msg.url = global.get("LCS")+"receiveUbiquitousWarn";
    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 640
  'y': 800
  wires:
    - - c5d0d032b5cdf62c
- id: cd43772a1bfd0652
  type: inject
  z: efd4a3479ccb4ba6
  name: ''
  props:
    - p: payload
    - p: topic
      vt: str
  repeat: ''
  crontab: ''
  once: false
  onceDelay: 0.1
  topic: ''
  payload: ''
  payloadType: date
  x: 490
  'y': 620
  wires:
    - - d72a99f95f1edb40
- id: c5e61641d6e5b189
  type: http request
  z: efd4a3479ccb4ba6
  name: ''
  method: POST
  ret: txt
  paytoqs: ignore
  url: ''
  tls: ''
  persist: false
  proxy: ''
  insecureHTTPParser: false
  authType: ''
  senderr: false
  headers: []
  x: 1020
  'y': 720
  wires:
    - - b3d7c8cfb895d0f3
      - 366db6dd22a1471c
- id: d72a99f95f1edb40
  type: function
  z: efd4a3479ccb4ba6
  name: 生产完成
  func: |-
    const t = (new Date()).toISOString();
    var Request = global.get("Request_10");
    Request.EndTime = t;

    msg.payload = Request;

    msg.url = global.get("LCS") + "actionCompletedSignal";
    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 640
  'y': 720
  wires:
    - - c5e61641d6e5b189
- id: 366db6dd22a1471c
  type: change
  z: efd4a3479ccb4ba6
  name: ''
  rules:
    - t: set
      p: Request_10.RequestID
      pt: global
      to: '-'
      tot: str
    - t: set
      p: Request_10.RequestID_
      pt: global
      to: '-'
      tot: str
  action: ''
  property: ''
  from: ''
  to: ''
  reg: false
  x: 1200
  'y': 720
  wires:
    - []
- id: b3d7c8cfb895d0f3
  type: debug
  z: efd4a3479ccb4ba6
  name: 调试 24
  active: true
  tosidebar: true
  console: false
  tostatus: false
  complete: 'false'
  statusVal: ''
  statusType: auto
  x: 1180
  'y': 680
  wires: []
- id: 3894772765d7ffd8
  type: delay
  z: efd4a3479ccb4ba6
  name: ''
  pauseType: delay
  timeout: '3'
  timeoutUnits: seconds
  rate: '1'
  nbRateUnits: '1'
  rateUnits: second
  randomFirst: '1'
  randomLast: '5'
  randomUnits: seconds
  drop: false
  allowrate: false
  outputs: 1
  x: 685
  'y': 380
  wires:
    - - 9b5fa5f6325f55a4
  l: false
- id: 9b5fa5f6325f55a4
  type: function
  z: efd4a3479ccb4ba6
  name: 动作置位
  func: |-
    msg.payload = { value: 0, fc: 6, unitid: 1, address: 4010, quantity: 1 };
    node.send(msg);
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 780
  'y': 380
  wires:
    - - bf70b1ac9f63a3ce
- id: d33fd4644621e60b
  type: switch
  z: efd4a3479ccb4ba6
  name: ''
  property: IO_10.AI.status
  propertyType: global
  rules:
    - t: eq
      v: '4'
      vt: num
    - t: eq
      v: '21'
      vt: num
    - t: eq
      v: '22'
      vt: num
    - t: else
  checkall: 'true'
  repair: false
  outputs: 4
  x: 195
  'y': 340
  wires:
    - - e759e7cdef9ed3b0
    - - e759e7cdef9ed3b0
    - - e759e7cdef9ed3b0
    - - 3a7dce07ebd7c295
  l: false
- id: 3a7dce07ebd7c295
  type: function
  z: efd4a3479ccb4ba6
  name: 失败
  func: |-
    var IO = global.get("IO_10");
    msg.payload = {
        Code: 1,
        Msg: "当前状态无法接收调度器要求:" + IO.AI.status,
    };
    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 430
  'y': 400
  wires:
    - - aaeb451f35e295ca
- id: c0613c246b3e380f
  type: switch
  z: efd4a3479ccb4ba6
  name: ''
  property: payload.value
  propertyType: msg
  rules:
    - t: eq
      v: '10'
      vt: num
    - t: eq
      v: '21'
      vt: num
    - t: eq
      v: '31'
      vt: num
    - t: eq
      v: '41'
      vt: num
    - t: eq
      v: '51'
      vt: num
  checkall: 'true'
  repair: false
  outputs: 5
  x: 685
  'y': 320
  wires:
    - - 65ace1ef9c22de19
    - []
    - []
    - []
    - []
  l: false
- id: 65ace1ef9c22de19
  type: change
  z: efd4a3479ccb4ba6
  name: ''
  rules:
    - t: set
      p: tray1
      pt: global
      to: '[1,1,1]'
      tot: jsonata
  action: ''
  property: ''
  from: ''
  to: ''
  reg: false
  x: 830
  'y': 280
  wires:
    - []
- id: 619bfafebb0de975
  type: debug
  z: efd4a3479ccb4ba6
  name: 调试 26
  active: true
  tosidebar: true
  console: false
  tostatus: false
  complete: 'false'
  statusVal: ''
  statusType: auto
  x: 200
  'y': 380
  wires: []
- id: 53867554acb76cef
  type: file
  z: efd4a3479ccb4ba6
  name: ''
  filename: 'C:/tmp/request.txt'
  filenameType: str
  appendNewline: true
  createDir: false
  overwriteFile: 'false'
  encoding: none
  x: 230
  'y': 280
  wires:
    - []
- id: 37c372a70ce118c4
  type: function
  z: efd4a3479ccb4ba6
  name: 函数 25
  func: |-
    var txt = msg.payload.Value + "," + msg.payload.RequestID;
    var date = (new Date()).toISOString();
    msg.payload = date + " : " + txt;
    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 105
  'y': 280
  wires:
    - - 53867554acb76cef
  l: false
- id: def7b74dd73c77b9
  type: http in
  z: efd4a3479ccb4ba6
  name: ''
  url: /10/data
  method: get
  upload: false
  swaggerDoc: ''
  x: 130
  'y': 880
  wires:
    - - 9bc3906f868c0782
- id: 1e57f8f96e834f72
  type: http response
  z: efd4a3479ccb4ba6
  name: ''
  statusCode: ''
  headers: {}
  x: 590
  'y': 880
  wires: []
- id: 9bc3906f868c0782
  type: function
  z: efd4a3479ccb4ba6
  name: function 30
  func: |-
    const p = msg.payload.key;
    var arr = p.split(".");
    const obj = global.get(arr[0]);
    eval("var "+arr[0]+" = obj;");
    console.debug(1);
    eval("msg.payload = "+p+";");
    console.debug(2);
    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 350
  'y': 880
  wires:
    - - 1e57f8f96e834f72
