- id: b60c316ff0a6b6c0
  type: tab
  label: scheduler-20
  disabled: false
  info: ''
  env: []
- id: 5b4e21d2e264a3b8
  type: inject
  z: b60c316ff0a6b6c0
  name: ''
  props:
    - p: payload
    - p: topic
      vt: str
  repeat: ''
  crontab: ''
  once: true
  onceDelay: '2'
  topic: ''
  payload: ''
  payloadType: date
  x: 120
  'y': 640
  wires:
    - - 3a2763e16069b1ca
- id: 3a2763e16069b1ca
  type: trigger
  z: b60c316ff0a6b6c0
  name: ''
  op1: '1'
  op2: '0'
  op1type: str
  op2type: str
  duration: '-250'
  extend: false
  overrideDelay: false
  units: ms
  reset: ''
  bytopic: all
  topic: topic
  outputs: 1
  x: 310
  'y': 640
  wires:
    - - b432f21ea8a0c076
      - 6e1662cb6cf9703d
- id: 7bd5064aa60abc6c
  type: http in
  z: b60c316ff0a6b6c0
  name: 通用读多个接口
  url: /20/ReadValue
  method: post
  upload: false
  swaggerDoc: ''
  x: 120
  'y': 520
  wires:
    - - abf419e4087513ea
      - 46cf809cb9daa3a5
- id: 23ed647795da08ac
  type: modbus-flex-getter
  z: b60c316ff0a6b6c0
  name: ''
  showStatusActivities: false
  showErrors: false
  showWarnings: true
  logIOActivities: false
  server: f45c8577844ced46
  useIOFile: false
  ioFile: ''
  useIOForPayload: false
  emptyMsgOnFail: false
  keepMsgProperties: false
  delayOnStart: false
  startDelayTime: ''
  x: 830
  'y': 520
  wires:
    - - 4356d9605954ea3e
    - - 53462c6c5f5c6254
- id: abf419e4087513ea
  type: change
  z: b60c316ff0a6b6c0
  name: ''
  rules:
    - t: set
      p: ReadValue_20
      pt: global
      to: '[]'
      tot: jsonata
  action: ''
  property: ''
  from: ''
  to: ''
  reg: false
  x: 380
  'y': 520
  wires:
    - - 6d2816ce6f58614a
- id: 6d2816ce6f58614a
  type: function
  z: b60c316ff0a6b6c0
  name: modbus 报文拆分
  func: |-
    var arr = msg.payload;
    for(var i=0;i<arr.length;i++){
        var t = arr[i];
        node.send({payload:{fc:3, address: parseInt(t.Address), quantity:1},temp:parseInt(t.Address)});
    }
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 630
  'y': 520
  wires:
    - - 23ed647795da08ac
- id: 4356d9605954ea3e
  type: function
  z: b60c316ff0a6b6c0
  name: 函数 4
  func: |-
    var arr = global.get("ReadValue_90");
    arr.push({
        Address: msg.modbusRequest.address,
        Value: msg.payload[0],
        ValueType: "int"
    });
    console.debug(arr);
    global.set("ReadValue_90",arr);
    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 1010
  'y': 520
  wires:
    - []
- id: bf64874f8de1d1f2
  type: change
  z: b60c316ff0a6b6c0
  name: ''
  rules:
    - t: set
      p: payload.Code
      pt: msg
      to: '0'
      tot: num
    - t: set
      p: payload.Msg
      pt: msg
      to: 操作成功
      tot: str
    - t: set
      p: payload.Data
      pt: msg
      to: ReadValue_20
      tot: global
  action: ''
  property: ''
  from: ''
  to: ''
  reg: false
  x: 660
  'y': 560
  wires:
    - - 8c67c6b28b652f9f
- id: 8c67c6b28b652f9f
  type: http response
  z: b60c316ff0a6b6c0
  name: ''
  statusCode: ''
  headers: {}
  x: 810
  'y': 560
  wires: []
- id: 46cf809cb9daa3a5
  type: delay
  z: b60c316ff0a6b6c0
  name: ''
  pauseType: delay
  timeout: '1'
  timeoutUnits: seconds
  rate: '1'
  nbRateUnits: '1'
  rateUnits: second
  randomFirst: '1'
  randomLast: '5'
  randomUnits: seconds
  drop: false
  allowrate: false
  outputs: 1
  x: 300
  'y': 560
  wires:
    - - e55f366c9e5b8dd4
- id: a7fe531c9b8b9c41
  type: rbe
  z: b60c316ff0a6b6c0
  name: ''
  func: rbei
  gap: ''
  start: ''
  inout: out
  septopics: false
  property: payload
  topi: topic
  x: 370
  'y': 720
  wires:
    - - 1796bf9ffd5535ad
- id: b432f21ea8a0c076
  type: change
  z: b60c316ff0a6b6c0
  name: 状态变化监听
  rules:
    - t: set
      p: payload
      pt: msg
      to: IO_20.AI.work_over
      tot: global
  action: ''
  property: ''
  from: ''
  to: ''
  reg: false
  x: 200
  'y': 720
  wires:
    - - a7fe531c9b8b9c41
- id: 1796bf9ffd5535ad
  type: switch
  z: b60c316ff0a6b6c0
  name: ''
  property: payload
  propertyType: msg
  rules:
    - t: eq
      v: '1'
      vt: num
    - t: else
  checkall: 'true'
  repair: false
  outputs: 2
  x: 490
  'y': 720
  wires:
    - - de27a252b48ff1b5
    - []
- id: 44d4e7db3305d62e
  type: http request
  z: b60c316ff0a6b6c0
  name: ''
  method: POST
  ret: txt
  paytoqs: ignore
  url: ''
  tls: ''
  persist: false
  proxy: ''
  insecureHTTPParser: false
  authType: ''
  senderr: false
  headers: []
  x: 840
  'y': 720
  wires:
    - - b62ca316eb13ad1a
      - d0a1dd65148e46a8
- id: c776a0aa2699059e
  type: rbe
  z: b60c316ff0a6b6c0
  name: ''
  func: rbei
  gap: ''
  start: ''
  inout: out
  septopics: false
  property: payload
  topi: topic
  x: 370
  'y': 800
  wires:
    - - b53c94fcf893ec7d
- id: 6e1662cb6cf9703d
  type: change
  z: b60c316ff0a6b6c0
  name: 故障信号监听
  rules:
    - t: set
      p: payload
      pt: msg
      to: IO_10.AI.error
      tot: global
  action: ''
  property: ''
  from: ''
  to: ''
  reg: false
  x: 200
  'y': 800
  wires:
    - - c776a0aa2699059e
- id: b53c94fcf893ec7d
  type: switch
  z: b60c316ff0a6b6c0
  name: ''
  property: payload
  propertyType: msg
  rules:
    - t: gt
      v: '0'
      vt: num
  checkall: 'true'
  repair: false
  outputs: 1
  x: 490
  'y': 800
  wires:
    - - c494ac7f58b40cf2
- id: f25ba9e302a386fd
  type: http request
  z: b60c316ff0a6b6c0
  name: ''
  method: POST
  ret: txt
  paytoqs: ignore
  url: ''
  tls: ''
  persist: false
  proxy: ''
  insecureHTTPParser: false
  authType: ''
  senderr: false
  headers:
    - keyType: other
      keyValue: Accept
      valueType: other
      valueValue: application/json
  x: 860
  'y': 800
  wires:
    - - f4e4deeed0f9c88a
- id: 53462c6c5f5c6254
  type: debug
  z: b60c316ff0a6b6c0
  name: 调试 15
  active: true
  tosidebar: true
  console: false
  tostatus: false
  complete: 'false'
  statusVal: ''
  statusType: auto
  x: 1000
  'y': 580
  wires: []
- id: e55f366c9e5b8dd4
  type: change
  z: b60c316ff0a6b6c0
  name: ''
  rules:
    - t: set
      p: payload
      pt: msg
      to: '{}'
      tot: jsonata
  action: ''
  property: ''
  from: ''
  to: ''
  reg: false
  x: 470
  'y': 560
  wires:
    - - bf64874f8de1d1f2
- id: b62ca316eb13ad1a
  type: debug
  z: b60c316ff0a6b6c0
  name: 调试 16
  active: true
  tosidebar: true
  console: false
  tostatus: false
  complete: 'false'
  statusVal: ''
  statusType: auto
  x: 1000
  'y': 720
  wires: []
- id: f4e4deeed0f9c88a
  type: debug
  z: b60c316ff0a6b6c0
  name: 调试 17
  active: false
  tosidebar: true
  console: false
  tostatus: false
  complete: payload
  targetType: msg
  statusVal: ''
  statusType: auto
  x: 1020
  'y': 800
  wires: []
- id: c494ac7f58b40cf2
  type: function
  z: b60c316ff0a6b6c0
  name: 读取故障描述
  func: |-
    var ErrorMap = global.get("ErrorMap_20");
    msg.payload ={
    EquipmentCode: "OP20",
    EquipmentName: "泛在控制器",
    Status: 0,
    WarnContent: ErrorMap[msg.payload]
    };
    msg.url = global.get("LCS")+"receiveUbiquitousWarn";

    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 670
  'y': 800
  wires:
    - - f25ba9e302a386fd
- id: de27a252b48ff1b5
  type: function
  z: b60c316ff0a6b6c0
  name: 生产完成
  func: |-
    const t = (new Date()).toISOString();
    var Request_20 = global.get("Request_20");
    Request_20.EndTime = t;
    msg.payload = Request_20;
    msg.url = global.get("LCS") + "actionCompletedSignal";
    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 680
  'y': 720
  wires:
    - - 44d4e7db3305d62e
- id: fbf2750d95e5d960
  type: inject
  z: b60c316ff0a6b6c0
  name: ''
  props:
    - p: payload
    - p: topic
      vt: str
  repeat: ''
  crontab: ''
  once: false
  onceDelay: 0.1
  topic: ''
  payload: ''
  payloadType: date
  x: 490
  'y': 680
  wires:
    - - de27a252b48ff1b5
- id: fb27549faaf4df38
  type: http response
  z: b60c316ff0a6b6c0
  name: ''
  statusCode: ''
  headers: {}
  x: 1090
  'y': 220
  wires: []
- id: 4a2521e0cea6f181
  type: http in
  z: b60c316ff0a6b6c0
  name: 工位任务接收
  url: /20/ReceiveStationTask
  method: post
  upload: false
  swaggerDoc: ''
  x: 110
  'y': 220
  wires:
    - - 249c701a144c7661
- id: 6a4c6646110d08c5
  type: http in
  z: b60c316ff0a6b6c0
  name: 泛在通用写多个接口
  url: /20/WriteValue
  method: post
  upload: false
  swaggerDoc: ''
  x: 130
  'y': 440
  wires:
    - - 728d158acf67d988
      - b672d820b2632e17
- id: 728d158acf67d988
  type: function
  z: b60c316ff0a6b6c0
  name: modbus 报文拆分
  func: |-
    var arr = msg.payload;
    for(var i=0;i<arr.length;i++){
        var t = arr[i];
        msg.payload = { value: parseInt(t.Value), 'fc': 6, 'unitid': 1, 'address': parseInt(t.Address), 'quantity': 1 } 
        node.send(msg);
    }
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 350
  'y': 440
  wires:
    - - f6cce74e561807da
- id: f6cce74e561807da
  type: modbus-flex-write
  z: b60c316ff0a6b6c0
  name: 批量修改modbus值
  showStatusActivities: false
  showErrors: false
  showWarnings: true
  server: f45c8577844ced46
  emptyMsgOnFail: false
  keepMsgProperties: false
  delayOnStart: false
  startDelayTime: ''
  x: 830
  'y': 440
  wires:
    - []
    - []
- id: 4b08f8c03e37af75
  type: change
  z: b60c316ff0a6b6c0
  name: ''
  rules:
    - t: set
      p: StationTask_20
      pt: global
      to: payload
      tot: msg
  action: ''
  property: ''
  from: ''
  to: ''
  reg: false
  x: 680
  'y': 240
  wires:
    - - 5422fe3beb921c6c
- id: 5422fe3beb921c6c
  type: function
  z: b60c316ff0a6b6c0
  name: 反馈
  func: |-
    msg.payload = {
        Code: 0,
        Msg:"操作成功"
    };
    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 930
  'y': 240
  wires:
    - - fb27549faaf4df38
- id: 5f2d50fe11da5433
  type: http in
  z: b60c316ff0a6b6c0
  name: 工单结束
  url: /20/ReceiveEndSignal
  method: post
  upload: false
  swaggerDoc: ''
  x: 100
  'y': 120
  wires:
    - - aa38984a734707e1
- id: 13f19cbb678fecfc
  type: http response
  z: b60c316ff0a6b6c0
  name: ''
  statusCode: ''
  headers: {}
  x: 750
  'y': 140
  wires: []
- id: a87a85b7794a1a6e
  type: function
  z: b60c316ff0a6b6c0
  name: 反馈
  func: |-
    msg.payload = {
        Code: 0,
        Msg: "操作成功"
    };
    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 610
  'y': 120
  wires:
    - - 13f19cbb678fecfc
- id: aa38984a734707e1
  type: switch
  z: b60c316ff0a6b6c0
  name: ''
  property: payload.BillCode
  propertyType: msg
  rules:
    - t: eq
      v: StationTask_20.BillCode
      vt: global
    - t: else
  checkall: 'true'
  repair: false
  outputs: 2
  x: 370
  'y': 120
  wires:
    - - 410e90894f9b82f8
      - a87a85b7794a1a6e
      - 168aa29d0a82a483
    - - 649e5fadeb818fa6
- id: 410e90894f9b82f8
  type: change
  z: b60c316ff0a6b6c0
  name: ''
  rules:
    - t: set
      p: IO_20.AO.production
      pt: global
      to: '0'
      tot: num
  action: ''
  property: ''
  from: ''
  to: ''
  reg: false
  x: 700
  'y': 80
  wires:
    - []
- id: 649e5fadeb818fa6
  type: function
  z: b60c316ff0a6b6c0
  name: 反馈
  func: |-
    msg.payload = {
        Code: 1,
        Msg: "操作失败,当前设备执行的工单和下发的结束工单不一致"
    };
    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 610
  'y': 160
  wires:
    - - 13f19cbb678fecfc
- id: 1d0ee5f6d13974f7
  type: http response
  z: b60c316ff0a6b6c0
  name: ''
  statusCode: ''
  headers: {}
  x: 450
  'y': 260
  wires: []
- id: b24efc27b16de1e8
  type: http in
  z: b60c316ff0a6b6c0
  name: 工位状态-轮询
  url: /20/GetStationState
  method: post
  upload: false
  swaggerDoc: ''
  x: 110
  'y': 260
  wires:
    - - a02d16b74ebe1b1d
- id: a02d16b74ebe1b1d
  type: function
  z: b60c316ff0a6b6c0
  name: 反馈
  func: |-
    var IO = global.get("IO_20");
    msg.payload = {
    "Code": 0,
    "Msg": "操作成功",
    "Data": [{
    "StationCode": "OP_20",
    "StationName": "激光打标",
    "Status": IO.AI.status
    }]
    };
    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 270
  'y': 260
  wires:
    - - 1d0ee5f6d13974f7
- id: a28f18a533722341
  type: http in
  z: b60c316ff0a6b6c0
  name: 动作执行
  url: /20/DoAction
  method: post
  upload: false
  swaggerDoc: ''
  x: 100
  'y': 360
  wires:
    - - c55f99a67e6ac1ba
      - 37c372a70ce118c4
- id: cd601a9f82909663
  type: function
  z: b60c316ff0a6b6c0
  name: modbus 报文拆分
  func: >-
    var t = msg.payload;

    if (t.Value == 0 && t.Address == 4020) {
        t.RequestID = "-";
    }

    var Request = global.get("Request_20");

    Request.RequestID = t.RequestID;

    var t2 = (new Date()).toISOString();

    Request.StartTime = t2;

    Request.EndTime = "";

    msg.payload = { value: parseInt(t.Value), 'fc': 6, 'unitid': 1, 'address':
    parseInt(t.Address), 'quantity': 1 } 

    node.send(msg);
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 490
  'y': 360
  wires:
    - - f6cce74e561807da
      - 3894772765d7ffd8
- id: b3b717bf872f4930
  type: switch
  z: b60c316ff0a6b6c0
  name: ''
  property: Request_20.RequestID
  propertyType: global
  rules:
    - t: eq
      v: '-'
      vt: str
    - t: else
  checkall: 'true'
  repair: false
  outputs: 2
  x: 315
  'y': 360
  wires:
    - - cd601a9f82909663
      - 67c0b81032f7cf6e
    - - d16be92a0471a0e4
  l: false
- id: 67c0b81032f7cf6e
  type: function
  z: b60c316ff0a6b6c0
  name: 反馈
  func: |-
    msg.payload = {
        Code: 0,
        Msg: "操作成功"
    };
    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 450
  'y': 320
  wires:
    - - 2c21729d8f477c36
- id: 2c21729d8f477c36
  type: http response
  z: b60c316ff0a6b6c0
  name: ''
  statusCode: ''
  headers: {}
  x: 610
  'y': 320
  wires: []
- id: d16be92a0471a0e4
  type: function
  z: b60c316ff0a6b6c0
  name: 反馈
  func: |-
    msg.payload = {
        Code: 1,
        Msg: "上一个动作还未完成"
    };
    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 450
  'y': 400
  wires:
    - - 2c21729d8f477c36
- id: 249c701a144c7661
  type: function
  z: b60c316ff0a6b6c0
  name: 格式解析
  func: |
    msg.error = 0;

    var task = global.get("StationTask_20");
    if(task.BillCode!='-'){
        msg.error = 1;
        msg.errorMsg = "previese task is on going";
        return msg;
    }

    const data = msg.payload;
    if((typeof(data)!='object')){
        msg.error = 2;
        msg.errorMsg = "format wrong";
        return msg;
    }

    if (!('BillCode' in data)){
        msg.error = 3;
        msg.errorMsg = "no BillCode";
        return msg;
    }
    if (!('ProductCode' in data)){
        msg.error = 4;
        msg.errorMsg = "no ProductCode";
        return msg;
    }

    if (!('ProcessDetail' in data)){
        msg.error = 5;
        msg.errorMsg = "no ProcessDetail";
        return msg;
    }

    if(data.ProcessDetail.length==1){
        const data2 = data.ProcessDetail[0];
        if (!('EquipmentCode' in data2)){
            msg.error = 6;
            msg.errorMsg = "no EquipmentCode";
            return msg;
        }
        if(data2.EquipmentCode!='OP20'){
            msg.error = 7;
            msg.errorMsg = "no OP20";
            return msg;
        }
        if (!('Num' in data2)){
            msg.error = 8;
            msg.errorMsg = "no Num";
            return msg;
        }
        data2.completed = 0;
    }
    else{
        msg.error = 13;
        msg.errorMsg = "ProcessDetail.length should be 1";
        return msg;
    }



    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 280
  'y': 220
  wires:
    - - 7450e7532a9133c3
- id: 7450e7532a9133c3
  type: switch
  z: b60c316ff0a6b6c0
  name: ''
  property: error
  propertyType: msg
  rules:
    - t: neq
      v: '0'
      vt: str
    - t: eq
      v: '0'
      vt: num
  checkall: 'true'
  repair: false
  outputs: 2
  x: 450
  'y': 220
  wires:
    - - 6b55599cd966446c
    - - 4b08f8c03e37af75
- id: 6b55599cd966446c
  type: function
  z: b60c316ff0a6b6c0
  name: 反馈
  func: |-
    msg.payload = {
        Code: 1,
        Msg:"失败"+msg.errorMsg
    };
    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 610
  'y': 200
  wires:
    - - fb27549faaf4df38
- id: 168aa29d0a82a483
  type: change
  z: b60c316ff0a6b6c0
  name: ''
  rules:
    - t: set
      p: StationTask_20.BillCode
      pt: global
      to: '-'
      tot: str
  action: ''
  property: ''
  from: ''
  to: ''
  reg: false
  x: 710
  'y': 40
  wires:
    - []
- id: b672d820b2632e17
  type: http response
  z: b60c316ff0a6b6c0
  name: ''
  statusCode: ''
  headers: {}
  x: 310
  'y': 480
  wires: []
- id: d0a1dd65148e46a8
  type: delay
  z: b60c316ff0a6b6c0
  name: ''
  pauseType: delay
  timeout: '1'
  timeoutUnits: seconds
  rate: '1'
  nbRateUnits: '1'
  rateUnits: second
  randomFirst: '1'
  randomLast: '5'
  randomUnits: seconds
  drop: false
  allowrate: false
  outputs: 1
  x: 1000
  'y': 760
  wires:
    - - 66d1a8bb9a78f9af
- id: 66d1a8bb9a78f9af
  type: change
  z: b60c316ff0a6b6c0
  name: ''
  rules:
    - t: set
      p: Request_20.RequestID
      pt: global
      to: '-'
      tot: str
    - t: set
      p: Request_20.RequestID_
      pt: global
      to: '-'
      tot: str
  action: ''
  property: ''
  from: ''
  to: ''
  reg: false
  x: 1160
  'y': 760
  wires:
    - []
- id: c55f99a67e6ac1ba
  type: switch
  z: b60c316ff0a6b6c0
  name: ''
  property: IO_20.AI.status
  propertyType: global
  rules:
    - t: eq
      v: '22'
      vt: num
    - t: else
  checkall: 'true'
  repair: false
  outputs: 2
  x: 245
  'y': 360
  wires:
    - - b3b717bf872f4930
    - - 1db433ff02a67902
  l: false
- id: 1db433ff02a67902
  type: function
  z: b60c316ff0a6b6c0
  name: 反馈
  func: |-
    const IO = global.get("IO_20");
    msg.payload = {
        Code: 1,
        Msg: "当前状态无法执行动作:"+IO.AI.status,
    };
    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 310
  'y': 400
  wires:
    - - 2c21729d8f477c36
- id: 3894772765d7ffd8
  type: delay
  z: b60c316ff0a6b6c0
  name: ''
  pauseType: delay
  timeout: '3'
  timeoutUnits: seconds
  rate: '1'
  nbRateUnits: '1'
  rateUnits: second
  randomFirst: '1'
  randomLast: '5'
  randomUnits: seconds
  drop: false
  allowrate: false
  outputs: 1
  x: 685
  'y': 360
  wires:
    - - 9b5fa5f6325f55a4
  l: false
- id: 9b5fa5f6325f55a4
  type: function
  z: b60c316ff0a6b6c0
  name: 动作置位
  func: |-
    msg.payload = { value: 0, fc: 6, unitid: 1, address: 4020, quantity: 1 } 
    node.send(msg);
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 790
  'y': 360
  wires:
    - - f6cce74e561807da
- id: 53867554acb76cef
  type: file
  z: b60c316ff0a6b6c0
  name: ''
  filename: 'C:/tmp/request.txt'
  filenameType: str
  appendNewline: true
  createDir: false
  overwriteFile: 'false'
  encoding: none
  x: 290
  'y': 300
  wires:
    - []
- id: 37c372a70ce118c4
  type: function
  z: b60c316ff0a6b6c0
  name: 函数 25
  func: |-
    var txt = msg.payload.Value + "," + msg.payload.RequestID;
    var date = (new Date()).toISOString();
    msg.payload = date + " : " + txt;
    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 165
  'y': 300
  wires:
    - - 53867554acb76cef
  l: false
