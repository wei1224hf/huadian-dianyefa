[
    {
        "id": "06304d14d9326075",
        "type": "tab",
        "label": "流程 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "6fe602d654619e6d",
        "type": "tab",
        "label": "laser",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "b60c316ff0a6b6c0",
        "type": "tab",
        "label": "scheduler-20",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "8c57d52fe6250639",
        "type": "tab",
        "label": "dataCenter-20",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f9ed7ce98dfb48f5",
        "type": "tab",
        "label": "dataCenter-30",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "efd4a3479ccb4ba6",
        "type": "tab",
        "label": "scheduler-30",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "d8280152e0f21cc5",
        "type": "tab",
        "label": "simulater",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f45c8577844ced46",
        "type": "modbus-client",
        "name": "虚拟modbus-20",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": true,
        "tcpHost": "127.0.0.1",
        "tcpPort": "10020",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true,
        "showWarnings": true,
        "showLogs": true
    },
    {
        "id": "b491bf7158494622",
        "type": "modbus-client",
        "name": "泛在控制器-20",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": true,
        "tcpHost": "192.168.105.232",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true,
        "showErrors": false,
        "showWarnings": true,
        "showLogs": true
    },
    {
        "id": "1a3a610758658ecb",
        "type": "modbus-client",
        "name": "6轴-OP30",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": true,
        "tcpHost": "192.168.110.30",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true,
        "showErrors": false,
        "showWarnings": true,
        "showLogs": true
    },
    {
        "id": "ebdc7b3b4236640e",
        "type": "modbus-client",
        "name": "虚拟modbus-30",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": true,
        "tcpHost": "127.0.0.1",
        "tcpPort": "10030",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true,
        "showErrors": false,
        "showWarnings": true,
        "showLogs": true
    },
    {
        "id": "e0213930665d04af",
        "type": "tcp in",
        "z": "6fe602d654619e6d",
        "name": "",
        "server": "client",
        "host": "192.168.110.21",
        "port": "9001",
        "datamode": "stream",
        "datatype": "utf8",
        "newline": "",
        "topic": "",
        "trim": false,
        "base64": false,
        "tls": "",
        "x": 170,
        "y": 120,
        "wires": [
            [
                "cd86f18069d34ab3",
                "b0455afaec0bcf52"
            ]
        ]
    },
    {
        "id": "e4f0fc7e98856f8f",
        "type": "tcp out",
        "z": "6fe602d654619e6d",
        "name": "",
        "host": "",
        "port": "",
        "beserver": "reply",
        "base64": false,
        "end": false,
        "tls": "",
        "x": 430,
        "y": 240,
        "wires": []
    },
    {
        "id": "74f71fa878447d24",
        "type": "inject",
        "z": "6fe602d654619e6d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 240,
        "wires": [
            [
                "04312d205408944d"
            ]
        ]
    },
    {
        "id": "04312d205408944d",
        "type": "function",
        "z": "6fe602d654619e6d",
        "name": "初始化",
        "func": "msg.payload = \"0x02$Initialize_A0x03\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 240,
        "wires": [
            [
                "e4f0fc7e98856f8f"
            ]
        ]
    },
    {
        "id": "cd86f18069d34ab3",
        "type": "debug",
        "z": "6fe602d654619e6d",
        "name": "调试 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 410,
        "y": 120,
        "wires": []
    },
    {
        "id": "b2946a25cb0143b9",
        "type": "inject",
        "z": "6fe602d654619e6d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 320,
        "wires": [
            [
                "74b4b878f05345a1"
            ]
        ]
    },
    {
        "id": "74b4b878f05345a1",
        "type": "function",
        "z": "6fe602d654619e6d",
        "name": "条码",
        "func": "msg.payload = \"$Data_\"+msg.payload;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 320,
        "wires": [
            [
                "e4f0fc7e98856f8f"
            ]
        ]
    },
    {
        "id": "b24cb198777fadc5",
        "type": "inject",
        "z": "6fe602d654619e6d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 400,
        "wires": [
            [
                "c1d4120cc0a169df"
            ]
        ]
    },
    {
        "id": "c1d4120cc0a169df",
        "type": "function",
        "z": "6fe602d654619e6d",
        "name": "打标执行",
        "func": "msg.payload = \"0x02$MarkStart_0x03\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 400,
        "wires": [
            [
                "e4f0fc7e98856f8f"
            ]
        ]
    },
    {
        "id": "42cc290853d6e3cc",
        "type": "link in",
        "z": "6fe602d654619e6d",
        "name": "打标",
        "links": [
            "40c923436f98382e"
        ],
        "x": 185,
        "y": 460,
        "wires": [
            [
                "c1d4120cc0a169df"
            ]
        ]
    },
    {
        "id": "b0455afaec0bcf52",
        "type": "switch",
        "z": "6fe602d654619e6d",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "$Receive_OK",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "MarkStart_OK",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 430,
        "y": 180,
        "wires": [
            [
                "c0637055082ee743"
            ],
            [
                "d145910c082e9bc2"
            ]
        ]
    },
    {
        "id": "58526866ddd88303",
        "type": "link in",
        "z": "6fe602d654619e6d",
        "name": "条码",
        "links": [
            "194d3c10d5df27e9"
        ],
        "x": 185,
        "y": 280,
        "wires": [
            [
                "74b4b878f05345a1"
            ]
        ]
    },
    {
        "id": "c0637055082ee743",
        "type": "link out",
        "z": "6fe602d654619e6d",
        "name": "条码完成",
        "mode": "link",
        "links": [],
        "x": 575,
        "y": 160,
        "wires": []
    },
    {
        "id": "d145910c082e9bc2",
        "type": "link out",
        "z": "6fe602d654619e6d",
        "name": "打标完成",
        "mode": "link",
        "links": [
            "2f1c3607e18c6e99"
        ],
        "x": 575,
        "y": 200,
        "wires": []
    },
    {
        "id": "5b4e21d2e264a3b8",
        "type": "inject",
        "z": "b60c316ff0a6b6c0",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 640,
        "wires": [
            [
                "3a2763e16069b1ca"
            ]
        ]
    },
    {
        "id": "3a2763e16069b1ca",
        "type": "trigger",
        "z": "b60c316ff0a6b6c0",
        "name": "",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "-250",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 310,
        "y": 640,
        "wires": [
            [
                "b432f21ea8a0c076",
                "6e1662cb6cf9703d"
            ]
        ]
    },
    {
        "id": "7bd5064aa60abc6c",
        "type": "http in",
        "z": "b60c316ff0a6b6c0",
        "name": "通用读多个接口",
        "url": "/20/ReadValue",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 520,
        "wires": [
            [
                "abf419e4087513ea",
                "46cf809cb9daa3a5"
            ]
        ]
    },
    {
        "id": "23ed647795da08ac",
        "type": "modbus-flex-getter",
        "z": "b60c316ff0a6b6c0",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "f45c8577844ced46",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 830,
        "y": 520,
        "wires": [
            [
                "4356d9605954ea3e"
            ],
            [
                "53462c6c5f5c6254"
            ]
        ]
    },
    {
        "id": "abf419e4087513ea",
        "type": "change",
        "z": "b60c316ff0a6b6c0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "ReadValue_20",
                "pt": "global",
                "to": "[]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 520,
        "wires": [
            [
                "6d2816ce6f58614a"
            ]
        ]
    },
    {
        "id": "6d2816ce6f58614a",
        "type": "function",
        "z": "b60c316ff0a6b6c0",
        "name": "modbus 报文拆分",
        "func": "var arr = msg.payload;\nfor(var i=0;i<arr.length;i++){\n    var t = arr[i];\n    node.send({payload:{fc:3, address: parseInt(t.Address), quantity:1},temp:parseInt(t.Address)});\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 520,
        "wires": [
            [
                "23ed647795da08ac"
            ]
        ]
    },
    {
        "id": "4356d9605954ea3e",
        "type": "function",
        "z": "b60c316ff0a6b6c0",
        "name": "函数 4",
        "func": "var arr = global.get(\"ReadValue_90\");\narr.push({\n    Address: msg.modbusRequest.address,\n    Value: msg.payload[0],\n    ValueType: \"int\"\n});\nconsole.debug(arr);\nglobal.set(\"ReadValue_90\",arr);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "bf64874f8de1d1f2",
        "type": "change",
        "z": "b60c316ff0a6b6c0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload.Code",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "payload.Msg",
                "pt": "msg",
                "to": "操作成功",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.Data",
                "pt": "msg",
                "to": "ReadValue_20",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 560,
        "wires": [
            [
                "8c67c6b28b652f9f"
            ]
        ]
    },
    {
        "id": "8c67c6b28b652f9f",
        "type": "http response",
        "z": "b60c316ff0a6b6c0",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 810,
        "y": 560,
        "wires": []
    },
    {
        "id": "46cf809cb9daa3a5",
        "type": "delay",
        "z": "b60c316ff0a6b6c0",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 300,
        "y": 560,
        "wires": [
            [
                "e55f366c9e5b8dd4"
            ]
        ]
    },
    {
        "id": "a7fe531c9b8b9c41",
        "type": "rbe",
        "z": "b60c316ff0a6b6c0",
        "name": "",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 370,
        "y": 720,
        "wires": [
            [
                "1796bf9ffd5535ad"
            ]
        ]
    },
    {
        "id": "b432f21ea8a0c076",
        "type": "change",
        "z": "b60c316ff0a6b6c0",
        "name": "状态变化监听",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "IO_20.AI.work_over",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 200,
        "y": 720,
        "wires": [
            [
                "a7fe531c9b8b9c41"
            ]
        ]
    },
    {
        "id": "1796bf9ffd5535ad",
        "type": "switch",
        "z": "b60c316ff0a6b6c0",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 490,
        "y": 720,
        "wires": [
            [
                "de27a252b48ff1b5"
            ],
            []
        ]
    },
    {
        "id": "44d4e7db3305d62e",
        "type": "http request",
        "z": "b60c316ff0a6b6c0",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 840,
        "y": 720,
        "wires": [
            [
                "b62ca316eb13ad1a",
                "d0a1dd65148e46a8"
            ]
        ]
    },
    {
        "id": "c776a0aa2699059e",
        "type": "rbe",
        "z": "b60c316ff0a6b6c0",
        "name": "",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 370,
        "y": 800,
        "wires": [
            [
                "b53c94fcf893ec7d"
            ]
        ]
    },
    {
        "id": "6e1662cb6cf9703d",
        "type": "change",
        "z": "b60c316ff0a6b6c0",
        "name": "故障信号监听",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "IO_10.AI.error",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 200,
        "y": 800,
        "wires": [
            [
                "c776a0aa2699059e"
            ]
        ]
    },
    {
        "id": "b53c94fcf893ec7d",
        "type": "switch",
        "z": "b60c316ff0a6b6c0",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 490,
        "y": 800,
        "wires": [
            [
                "c494ac7f58b40cf2"
            ]
        ]
    },
    {
        "id": "f25ba9e302a386fd",
        "type": "http request",
        "z": "b60c316ff0a6b6c0",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "other",
                "keyValue": "Accept",
                "valueType": "other",
                "valueValue": "application/json"
            }
        ],
        "x": 860,
        "y": 800,
        "wires": [
            [
                "f4e4deeed0f9c88a"
            ]
        ]
    },
    {
        "id": "53462c6c5f5c6254",
        "type": "debug",
        "z": "b60c316ff0a6b6c0",
        "name": "调试 15",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1000,
        "y": 580,
        "wires": []
    },
    {
        "id": "e55f366c9e5b8dd4",
        "type": "change",
        "z": "b60c316ff0a6b6c0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 560,
        "wires": [
            [
                "bf64874f8de1d1f2"
            ]
        ]
    },
    {
        "id": "b62ca316eb13ad1a",
        "type": "debug",
        "z": "b60c316ff0a6b6c0",
        "name": "调试 16",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1000,
        "y": 720,
        "wires": []
    },
    {
        "id": "f4e4deeed0f9c88a",
        "type": "debug",
        "z": "b60c316ff0a6b6c0",
        "name": "调试 17",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1020,
        "y": 800,
        "wires": []
    },
    {
        "id": "c494ac7f58b40cf2",
        "type": "function",
        "z": "b60c316ff0a6b6c0",
        "name": "读取故障描述",
        "func": "var ErrorMap = global.get(\"ErrorMap_20\");\nmsg.payload ={\nEquipmentCode: \"OP20\",\nEquipmentName: \"泛在控制器\",\nStatus: 0,\nWarnContent: ErrorMap[msg.payload]\n};\nmsg.url = global.get(\"LCS\")+\"receiveUbiquitousWarn\";\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 800,
        "wires": [
            [
                "f25ba9e302a386fd"
            ]
        ]
    },
    {
        "id": "de27a252b48ff1b5",
        "type": "function",
        "z": "b60c316ff0a6b6c0",
        "name": "生产完成",
        "func": "const t = (new Date()).toISOString();\nvar Request_20 = global.get(\"Request_20\");\nRequest_20.EndTime = t;\nmsg.payload = Request_20;\nmsg.url = global.get(\"LCS\") + \"actionCompletedSignal\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 720,
        "wires": [
            [
                "44d4e7db3305d62e"
            ]
        ]
    },
    {
        "id": "fbf2750d95e5d960",
        "type": "inject",
        "z": "b60c316ff0a6b6c0",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 490,
        "y": 680,
        "wires": [
            [
                "de27a252b48ff1b5"
            ]
        ]
    },
    {
        "id": "fb27549faaf4df38",
        "type": "http response",
        "z": "b60c316ff0a6b6c0",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1090,
        "y": 220,
        "wires": []
    },
    {
        "id": "4a2521e0cea6f181",
        "type": "http in",
        "z": "b60c316ff0a6b6c0",
        "name": "工位任务接收",
        "url": "/20/ReceiveStationTask",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 220,
        "wires": [
            [
                "249c701a144c7661"
            ]
        ]
    },
    {
        "id": "6a4c6646110d08c5",
        "type": "http in",
        "z": "b60c316ff0a6b6c0",
        "name": "泛在通用写多个接口",
        "url": "/20/WriteValue",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 440,
        "wires": [
            [
                "728d158acf67d988",
                "b672d820b2632e17"
            ]
        ]
    },
    {
        "id": "728d158acf67d988",
        "type": "function",
        "z": "b60c316ff0a6b6c0",
        "name": "modbus 报文拆分",
        "func": "var arr = msg.payload;\nfor(var i=0;i<arr.length;i++){\n    var t = arr[i];\n    msg.payload = { value: parseInt(t.Value), 'fc': 6, 'unitid': 1, 'address': parseInt(t.Address), 'quantity': 1 } \n    node.send(msg);\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 440,
        "wires": [
            [
                "f6cce74e561807da"
            ]
        ]
    },
    {
        "id": "f6cce74e561807da",
        "type": "modbus-flex-write",
        "z": "b60c316ff0a6b6c0",
        "name": "批量修改modbus值",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "server": "f45c8577844ced46",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 830,
        "y": 440,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "4b08f8c03e37af75",
        "type": "change",
        "z": "b60c316ff0a6b6c0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "StationTask_20",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 240,
        "wires": [
            [
                "5422fe3beb921c6c"
            ]
        ]
    },
    {
        "id": "5422fe3beb921c6c",
        "type": "function",
        "z": "b60c316ff0a6b6c0",
        "name": "反馈",
        "func": "msg.payload = {\n    Code: 0,\n    Msg:\"操作成功\"\n};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 240,
        "wires": [
            [
                "fb27549faaf4df38"
            ]
        ]
    },
    {
        "id": "5f2d50fe11da5433",
        "type": "http in",
        "z": "b60c316ff0a6b6c0",
        "name": "工单结束",
        "url": "/20/ReceiveEndSignal",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 120,
        "wires": [
            [
                "aa38984a734707e1"
            ]
        ]
    },
    {
        "id": "13f19cbb678fecfc",
        "type": "http response",
        "z": "b60c316ff0a6b6c0",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 750,
        "y": 140,
        "wires": []
    },
    {
        "id": "a87a85b7794a1a6e",
        "type": "function",
        "z": "b60c316ff0a6b6c0",
        "name": "反馈",
        "func": "msg.payload = {\n    Code: 0,\n    Msg: \"操作成功\"\n};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 120,
        "wires": [
            [
                "13f19cbb678fecfc"
            ]
        ]
    },
    {
        "id": "aa38984a734707e1",
        "type": "switch",
        "z": "b60c316ff0a6b6c0",
        "name": "",
        "property": "payload.BillCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "StationTask_20.BillCode",
                "vt": "global"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 370,
        "y": 120,
        "wires": [
            [
                "410e90894f9b82f8",
                "a87a85b7794a1a6e",
                "168aa29d0a82a483"
            ],
            [
                "649e5fadeb818fa6"
            ]
        ]
    },
    {
        "id": "410e90894f9b82f8",
        "type": "change",
        "z": "b60c316ff0a6b6c0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "IO_20.AO.production",
                "pt": "global",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "649e5fadeb818fa6",
        "type": "function",
        "z": "b60c316ff0a6b6c0",
        "name": "反馈",
        "func": "msg.payload = {\n    Code: 1,\n    Msg: \"操作失败,当前设备执行的工单和下发的结束工单不一致\"\n};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 160,
        "wires": [
            [
                "13f19cbb678fecfc"
            ]
        ]
    },
    {
        "id": "1d0ee5f6d13974f7",
        "type": "http response",
        "z": "b60c316ff0a6b6c0",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 450,
        "y": 260,
        "wires": []
    },
    {
        "id": "b24efc27b16de1e8",
        "type": "http in",
        "z": "b60c316ff0a6b6c0",
        "name": "工位状态-轮询",
        "url": "/20/GetStationState",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 260,
        "wires": [
            [
                "a02d16b74ebe1b1d"
            ]
        ]
    },
    {
        "id": "a02d16b74ebe1b1d",
        "type": "function",
        "z": "b60c316ff0a6b6c0",
        "name": "反馈",
        "func": "var IO = global.get(\"IO_20\");\nmsg.payload = {\n\"Code\": 0,\n\"Msg\": \"操作成功\",\n\"Data\": [{\n\"StationCode\": \"OP_20\",\n\"StationName\": \"激光打标\",\n\"Status\": IO.AI.status\n}]\n};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 260,
        "wires": [
            [
                "1d0ee5f6d13974f7"
            ]
        ]
    },
    {
        "id": "a28f18a533722341",
        "type": "http in",
        "z": "b60c316ff0a6b6c0",
        "name": "动作执行",
        "url": "/20/DoAction",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 360,
        "wires": [
            [
                "c55f99a67e6ac1ba",
                "37c372a70ce118c4"
            ]
        ]
    },
    {
        "id": "cd601a9f82909663",
        "type": "function",
        "z": "b60c316ff0a6b6c0",
        "name": "modbus 报文拆分",
        "func": "var t = msg.payload;\nif (t.Value == 0 && t.Address == 4020) {\n    t.RequestID = \"-\";\n}\nvar Request = global.get(\"Request_20\");\nRequest.RequestID = t.RequestID;\nvar t2 = (new Date()).toISOString();\nRequest.StartTime = t2;\nRequest.EndTime = \"\";\nmsg.payload = { value: parseInt(t.Value), 'fc': 6, 'unitid': 1, 'address': parseInt(t.Address), 'quantity': 1 } \nnode.send(msg);",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 360,
        "wires": [
            [
                "f6cce74e561807da",
                "3894772765d7ffd8"
            ]
        ]
    },
    {
        "id": "b3b717bf872f4930",
        "type": "switch",
        "z": "b60c316ff0a6b6c0",
        "name": "",
        "property": "Request_20.RequestID",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "-",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 315,
        "y": 360,
        "wires": [
            [
                "cd601a9f82909663",
                "67c0b81032f7cf6e"
            ],
            [
                "d16be92a0471a0e4"
            ]
        ],
        "l": false
    },
    {
        "id": "67c0b81032f7cf6e",
        "type": "function",
        "z": "b60c316ff0a6b6c0",
        "name": "反馈",
        "func": "msg.payload = {\n    Code: 0,\n    Msg: \"操作成功\"\n};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 320,
        "wires": [
            [
                "2c21729d8f477c36"
            ]
        ]
    },
    {
        "id": "2c21729d8f477c36",
        "type": "http response",
        "z": "b60c316ff0a6b6c0",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 610,
        "y": 320,
        "wires": []
    },
    {
        "id": "d16be92a0471a0e4",
        "type": "function",
        "z": "b60c316ff0a6b6c0",
        "name": "反馈",
        "func": "msg.payload = {\n    Code: 1,\n    Msg: \"上一个动作还未完成\"\n};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 400,
        "wires": [
            [
                "2c21729d8f477c36"
            ]
        ]
    },
    {
        "id": "249c701a144c7661",
        "type": "function",
        "z": "b60c316ff0a6b6c0",
        "name": "格式解析",
        "func": "msg.error = 0;\n\nvar task = global.get(\"StationTask_20\");\nif(task.BillCode!='-'){\n    msg.error = 1;\n    msg.errorMsg = \"previese task is on going\";\n    return msg;\n}\n\nconst data = msg.payload;\nif((typeof(data)!='object')){\n    msg.error = 2;\n    msg.errorMsg = \"format wrong\";\n    return msg;\n}\n\nif (!('BillCode' in data)){\n    msg.error = 3;\n    msg.errorMsg = \"no BillCode\";\n    return msg;\n}\nif (!('ProductCode' in data)){\n    msg.error = 4;\n    msg.errorMsg = \"no ProductCode\";\n    return msg;\n}\n\nif (!('ProcessDetail' in data)){\n    msg.error = 5;\n    msg.errorMsg = \"no ProcessDetail\";\n    return msg;\n}\n\nif(data.ProcessDetail.length==1){\n    const data2 = data.ProcessDetail[0];\n    if (!('EquipmentCode' in data2)){\n        msg.error = 6;\n        msg.errorMsg = \"no EquipmentCode\";\n        return msg;\n    }\n    if(data2.EquipmentCode!='OP20'){\n        msg.error = 7;\n        msg.errorMsg = \"no OP20\";\n        return msg;\n    }\n    if (!('Num' in data2)){\n        msg.error = 8;\n        msg.errorMsg = \"no Num\";\n        return msg;\n    }\n    data2.completed = 0;\n}\nelse{\n    msg.error = 13;\n    msg.errorMsg = \"ProcessDetail.length should be 1\";\n    return msg;\n}\n\n\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 220,
        "wires": [
            [
                "7450e7532a9133c3"
            ]
        ]
    },
    {
        "id": "7450e7532a9133c3",
        "type": "switch",
        "z": "b60c316ff0a6b6c0",
        "name": "",
        "property": "error",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 450,
        "y": 220,
        "wires": [
            [
                "6b55599cd966446c"
            ],
            [
                "4b08f8c03e37af75"
            ]
        ]
    },
    {
        "id": "6b55599cd966446c",
        "type": "function",
        "z": "b60c316ff0a6b6c0",
        "name": "反馈",
        "func": "msg.payload = {\n    Code: 1,\n    Msg:\"失败\"+msg.errorMsg\n};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 200,
        "wires": [
            [
                "fb27549faaf4df38"
            ]
        ]
    },
    {
        "id": "168aa29d0a82a483",
        "type": "change",
        "z": "b60c316ff0a6b6c0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "StationTask_20.BillCode",
                "pt": "global",
                "to": "-",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "b672d820b2632e17",
        "type": "http response",
        "z": "b60c316ff0a6b6c0",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 310,
        "y": 480,
        "wires": []
    },
    {
        "id": "d0a1dd65148e46a8",
        "type": "delay",
        "z": "b60c316ff0a6b6c0",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1000,
        "y": 760,
        "wires": [
            [
                "66d1a8bb9a78f9af"
            ]
        ]
    },
    {
        "id": "66d1a8bb9a78f9af",
        "type": "change",
        "z": "b60c316ff0a6b6c0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Request_20.RequestID",
                "pt": "global",
                "to": "-",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "Request_20.RequestID_",
                "pt": "global",
                "to": "-",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1160,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "c55f99a67e6ac1ba",
        "type": "switch",
        "z": "b60c316ff0a6b6c0",
        "name": "",
        "property": "IO_20.AI.status",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "22",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 245,
        "y": 360,
        "wires": [
            [
                "b3b717bf872f4930"
            ],
            [
                "1db433ff02a67902"
            ]
        ],
        "l": false
    },
    {
        "id": "1db433ff02a67902",
        "type": "function",
        "z": "b60c316ff0a6b6c0",
        "name": "反馈",
        "func": "const IO = global.get(\"IO_20\");\nmsg.payload = {\n    Code: 1,\n    Msg: \"当前状态无法执行动作:\"+IO.AI.status,\n};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 400,
        "wires": [
            [
                "2c21729d8f477c36"
            ]
        ]
    },
    {
        "id": "3894772765d7ffd8",
        "type": "delay",
        "z": "b60c316ff0a6b6c0",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 685,
        "y": 360,
        "wires": [
            [
                "9b5fa5f6325f55a4"
            ]
        ],
        "l": false
    },
    {
        "id": "9b5fa5f6325f55a4",
        "type": "function",
        "z": "b60c316ff0a6b6c0",
        "name": "动作置位",
        "func": "msg.payload = { value: 0, fc: 6, unitid: 1, address: 4020, quantity: 1 } \nnode.send(msg);",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 360,
        "wires": [
            [
                "f6cce74e561807da"
            ]
        ]
    },
    {
        "id": "53867554acb76cef",
        "type": "file",
        "z": "b60c316ff0a6b6c0",
        "name": "",
        "filename": "C:/tmp/request.txt",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 290,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "37c372a70ce118c4",
        "type": "function",
        "z": "b60c316ff0a6b6c0",
        "name": "函数 25",
        "func": "var txt = msg.payload.Value + \",\" + msg.payload.RequestID;\nvar date = (new Date()).toISOString();\nmsg.payload = date + \" : \" + txt;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 165,
        "y": 300,
        "wires": [
            [
                "53867554acb76cef"
            ]
        ],
        "l": false
    },
    {
        "id": "2b5ad56c2341e602",
        "type": "modbus-server",
        "z": "8c57d52fe6250639",
        "name": "OP20",
        "logEnabled": false,
        "hostname": "0.0.0.0",
        "serverPort": "10020",
        "responseDelay": 100,
        "delayUnit": "ms",
        "coilsBufferSize": 10000,
        "holdingBufferSize": 10000,
        "inputBufferSize": 10000,
        "discreteBufferSize": 10000,
        "showErrors": true,
        "x": 110,
        "y": 360,
        "wires": [
            [],
            [],
            [],
            [],
            []
        ]
    },
    {
        "id": "1ed90e87ef0ab5ce",
        "type": "modbus-read",
        "z": "8c57d52fe6250639",
        "name": "读-泛在控制器",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "HoldingRegister",
        "adr": "0",
        "quantity": "16",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "b491bf7158494622",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 150,
        "y": 140,
        "wires": [
            [
                "90f2a6da81217d8d",
                "1cd97ef4953b89a0"
            ],
            []
        ]
    },
    {
        "id": "1cd97ef4953b89a0",
        "type": "function",
        "z": "8c57d52fe6250639",
        "name": "写入到本地内存",
        "func": "const Names = [\n    \"Home\",\n    \"error\",\n    \"status\",\n    \"work_over\",\n    \"response\",\n    \"DO_JiTing\",\n    \"DO_QiDong\",\n    \"DO_ZhiDong_ShouDong\",\n    \"DO_TingZhi\",\n    \"DO_ShiNeng\",\n    \"DOclearError\",\n    \"DOnetwork\",\n    \"DO_ZhiXingJiajian\",\n    \"DO_ChanPin_DaoWei_1\",\n    \"DO_JiaZhuaKai_DaoWei_1\",\n    \"DO_JiaZhuaGuan_DaoWei_1\",\n    ];\n\nvar IO = global.get(\"IO_20\");\nconst data = msg.payload;\nfor (var i = 0; i < Names.length;i++){\n    if (Names[i]!='-'){\n        if (Names[i].startsWith(\"DO_\")){\n            IO.DI[Names[i]] = data[i];\n        }\n        else{\n            IO.AI[Names[i]] = data[i];\n        }\n    }\n    \n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "6438a2b608a115ee",
        "type": "inject",
        "z": "8c57d52fe6250639",
        "name": "OP20数据初始化",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 40,
        "wires": [
            [
                "9c22b32ef6374ba0"
            ]
        ]
    },
    {
        "id": "1897a224540a3006",
        "type": "function",
        "z": "8c57d52fe6250639",
        "name": "IO初始化",
        "func": "var IO_20 = {\n    DO:{},\n    DI:{\n        DO_JiTing: 0,\n        DO_QiDong: 0,\n        DO_ZhiDong_ShouDong: 0,\n        DO_TingZhi: 0,\n        DO_ShiNeng: 0,\n        DOclearError: 0,\n        DOnetwork: 0,\n        DO_ZhiXingJiajian: 0,\n        DO_ChanPin_DaoWei_1: 0,\n        DO_JiaZhuaKai_DaoWei_1: 0,\n        DO_JiaZhuaGuan_DaoWei_1: 0,\n    },\n    AI:{//node-red收到来自控制器的逻辑变量\n        Home: 0,\n        error: 0,\n        status: 0,\n        work_over: 0,\n        response: 0,\n\n    },\n    AO:{//node-red要发送下去的逻辑变量\n        request: 0,//下发给控制器的动作号\n    },    \n\n    AI_LCS:{\n        request: 0,\n    },\n    AO_LCS:{\n        response: 0,\n    },\n  \n      \n};\n\nglobal.set(\"IO_20\",IO_20);\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 40,
        "wires": [
            [
                "e0fd6c2d76fabf9f"
            ]
        ]
    },
    {
        "id": "b440bba5e4e9cb92",
        "type": "modbus-read",
        "z": "8c57d52fe6250639",
        "name": "LCS 调度命令读取",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "HoldingRegister",
        "adr": "4020",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "f45c8577844ced46",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 170,
        "y": 280,
        "wires": [
            [
                "d53f3335167a8bd4"
            ],
            []
        ]
    },
    {
        "id": "e0fd6c2d76fabf9f",
        "type": "function",
        "z": "8c57d52fe6250639",
        "name": "物料-视觉-工单 初始化",
        "func": "\nvar ErrorMap_20 = [\n    \"视觉通信故障\",\n    \"螺丝刀通信故障\",\n    \"伺服1故障\",\n    \"伺服2故障\",\n    \"伺服3故障\",\n    \"伺服4故障\",   \n    \"伺服5故障\",\n    \"伺服6故障\",\n    \"伺服7故障\",\n    ];\n    \nglobal.set(\"StationTask_20\",{\n    BillCode: \"-\",\n    ProductCode: \"-\",\n    ProductName:\"-\",\n    ProcessDetail: [{\n        ProcessCode: \"OP20\",\n        ProcessName: \"-\",\n        EquipmentCode: \"OP20\",\n        ProgramNumer: 1,\n        Num: 0,\n        completed: 0,\n        MaterialDetails: [\n        ]\n    }]\n});\nvar t = (new Date()).toISOString();\nglobal.set(\"Request_20\",{\n    StartTime:t,\n    EndTime:t,\n    RequestID:\"-\",\n    RequestID_: \"-\",\n    barcode: \"\",\n});\n\n\nglobal.set(\"ErrorMap_20\", ErrorMap_20);\n\nglobal.set(\"LCS\",\"http://192.168.110.200:9006/openApiUbiquitous/\");\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "9c22b32ef6374ba0",
        "type": "function",
        "z": "8c57d52fe6250639",
        "name": "定义变量名",
        "func": "global.set(\"ns\",{\n \n    \n    \n});\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 40,
        "wires": [
            [
                "1897a224540a3006"
            ]
        ]
    },
    {
        "id": "9ab459d877bebb3a",
        "type": "http in",
        "z": "8c57d52fe6250639",
        "name": "",
        "url": "/20/data",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 460,
        "wires": [
            [
                "b0e241d043d4d797"
            ]
        ]
    },
    {
        "id": "62db20fb3815ac1e",
        "type": "http response",
        "z": "8c57d52fe6250639",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 590,
        "y": 460,
        "wires": []
    },
    {
        "id": "b0e241d043d4d797",
        "type": "function",
        "z": "8c57d52fe6250639",
        "name": "function 29",
        "func": "const p = msg.payload.key;\nvar arr = p.split(\".\");\nconst obj = global.get(arr[0]);\neval(\"var \"+arr[0]+\" = obj;\");\nconsole.debug(1);\neval(\"msg.payload = \"+p+\";\");\nconsole.debug(2);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 460,
        "wires": [
            [
                "62db20fb3815ac1e"
            ]
        ]
    },
    {
        "id": "90f2a6da81217d8d",
        "type": "modbus-write",
        "z": "8c57d52fe6250639",
        "name": "DI信号同步到虚拟modbus-20",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "MHoldingRegisters",
        "adr": "5000",
        "quantity": "16",
        "server": "f45c8577844ced46",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 520,
        "y": 160,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "d53f3335167a8bd4",
        "type": "modbus-write",
        "z": "8c57d52fe6250639",
        "name": "request 同步到控制器",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "MHoldingRegisters",
        "adr": "17",
        "quantity": "1",
        "server": "b491bf7158494622",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 500,
        "y": 280,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "19906394abaffc0f",
        "type": "inject",
        "z": "8c57d52fe6250639",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 540,
        "wires": [
            [
                "e32e5e582153ca88"
            ]
        ]
    },
    {
        "id": "e32e5e582153ca88",
        "type": "trigger",
        "z": "8c57d52fe6250639",
        "name": "",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "-250",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 540,
        "wires": [
            [
                "680e318bceb0a6a8"
            ]
        ]
    },
    {
        "id": "b5e8b66a9ef049ff",
        "type": "rbe",
        "z": "8c57d52fe6250639",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 690,
        "y": 540,
        "wires": [
            [
                "97abf37571ad5d31"
            ]
        ]
    },
    {
        "id": "680e318bceb0a6a8",
        "type": "change",
        "z": "8c57d52fe6250639",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "IO_20.AI.response",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 540,
        "wires": [
            [
                "b5e8b66a9ef049ff"
            ]
        ]
    },
    {
        "id": "97abf37571ad5d31",
        "type": "switch",
        "z": "8c57d52fe6250639",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "20",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 830,
        "y": 540,
        "wires": [
            [
                "9b7432563bb4f50d"
            ]
        ]
    },
    {
        "id": "40c923436f98382e",
        "type": "link out",
        "z": "8c57d52fe6250639",
        "name": "打标",
        "mode": "link",
        "links": [
            "42cc290853d6e3cc"
        ],
        "x": 1405,
        "y": 500,
        "wires": []
    },
    {
        "id": "2f1c3607e18c6e99",
        "type": "link in",
        "z": "8c57d52fe6250639",
        "name": "打标完成",
        "links": [
            "d145910c082e9bc2"
        ],
        "x": 1135,
        "y": 380,
        "wires": [
            [
                "a9f5f7a386854552"
            ]
        ]
    },
    {
        "id": "142e9d69137ac430",
        "type": "modbus-write",
        "z": "8c57d52fe6250639",
        "name": "打标完成",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "HoldingRegister",
        "adr": "18",
        "quantity": "1",
        "server": "b491bf7158494622",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 1360,
        "y": 380,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "a9f5f7a386854552",
        "type": "change",
        "z": "8c57d52fe6250639",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "12",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1195,
        "y": 380,
        "wires": [
            [
                "142e9d69137ac430",
                "4ce1a248049fc365"
            ]
        ],
        "l": false
    },
    {
        "id": "4ce1a248049fc365",
        "type": "delay",
        "z": "8c57d52fe6250639",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1260,
        "y": 300,
        "wires": [
            [
                "57e799bbbe0f029c"
            ]
        ]
    },
    {
        "id": "57e799bbbe0f029c",
        "type": "change",
        "z": "8c57d52fe6250639",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1375,
        "y": 300,
        "wires": [
            [
                "142e9d69137ac430"
            ]
        ],
        "l": false
    },
    {
        "id": "9b7432563bb4f50d",
        "type": "http request",
        "z": "8c57d52fe6250639",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.110.200:9006/openApiUbiquitous/getMarkInfo",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 960,
        "y": 540,
        "wires": [
            [
                "ef86fd1d7d077297"
            ]
        ]
    },
    {
        "id": "ef86fd1d7d077297",
        "type": "json",
        "z": "8c57d52fe6250639",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 1090,
        "y": 540,
        "wires": [
            [
                "cd11d79016dad9fd"
            ]
        ]
    },
    {
        "id": "194d3c10d5df27e9",
        "type": "link out",
        "z": "8c57d52fe6250639",
        "name": "条码赋值",
        "mode": "link",
        "links": [
            "58526866ddd88303"
        ],
        "x": 1405,
        "y": 540,
        "wires": []
    },
    {
        "id": "1fd6530565644773",
        "type": "delay",
        "z": "8c57d52fe6250639",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1325,
        "y": 500,
        "wires": [
            [
                "40c923436f98382e"
            ]
        ],
        "l": false
    },
    {
        "id": "cd11d79016dad9fd",
        "type": "function",
        "z": "8c57d52fe6250639",
        "name": "条码处理",
        "func": "var Request = global.get(\"Request_20\");\nRequest.barcode = msg.payload.markContent;\nreturn {payload: msg.payload.markContent}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 540,
        "wires": [
            [
                "194d3c10d5df27e9",
                "1fd6530565644773"
            ]
        ]
    },
    {
        "id": "3dba3e8d93abf91f",
        "type": "modbus-server",
        "z": "f9ed7ce98dfb48f5",
        "name": "OP30",
        "logEnabled": false,
        "hostname": "0.0.0.0",
        "serverPort": "10030",
        "responseDelay": 100,
        "delayUnit": "ms",
        "coilsBufferSize": 10000,
        "holdingBufferSize": 10000,
        "inputBufferSize": 10000,
        "discreteBufferSize": 10000,
        "showErrors": true,
        "x": 110,
        "y": 220,
        "wires": [
            [],
            [],
            [],
            [],
            []
        ]
    },
    {
        "id": "5510cac9c6e89b5c",
        "type": "inject",
        "z": "f9ed7ce98dfb48f5",
        "name": "OP30数据初始化",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 40,
        "wires": [
            [
                "1ea186152dc1a1ba"
            ]
        ]
    },
    {
        "id": "d173ea419e8a649d",
        "type": "function",
        "z": "f9ed7ce98dfb48f5",
        "name": "IO初始化",
        "func": "var IO_30 = {\n    DO:{},\n    DI:{\n        \"DI_ChanPin_DaoWei_2\": 0,\n        \"DI_JiaZhuaKai_DaoWei_2\": 0,\n        \"DI_JiaZhuaGuan_DaoWei_2\": 0,\n        \"DI_QianShen_DaoWei\": 0,\n        \"DI_HouSuo_DaoWei\": 0,\n        \"DI_MenKai_DaoWei\": 0,\n        \"DI_MenGuan_DaoWei\": 0,\n    },\n    AI:{//node-red收到来自控制器的逻辑变量\n        \"Error_code\":0,\n        \"status\": 0,\n        \"work_over\": 0,\n\n\n    },\n    AO:{//node-red要发送下去的逻辑变量\n        request: 0,\n\n    },    \n\n\n    AI_LCS:{\n        request: 0,\n    },\n    AO_LCS:{\n        response: 0,\n    },\n  \n      \n};\n\nglobal.set(\"IO_30\",IO_30);\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 40,
        "wires": [
            [
                "604d8873ecf1a876"
            ]
        ]
    },
    {
        "id": "ec1227fef549c0f8",
        "type": "modbus-read",
        "z": "f9ed7ce98dfb48f5",
        "name": "6轴机械臂modbus-ao-逻辑变量",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "HoldingRegister",
        "adr": "1",
        "quantity": "10",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "1a3a610758658ecb",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 210,
        "y": 120,
        "wires": [
            [
                "4633ab44f4e2cfef",
                "641ff6c1ec0993d0"
            ],
            []
        ]
    },
    {
        "id": "4633ab44f4e2cfef",
        "type": "function",
        "z": "f9ed7ce98dfb48f5",
        "name": "写入到本地内存",
        "func": "var Names = [\n    \"Error_code\",\n    \"status\",\n    \"work_over\",\n\n    \"DI_ChanPin_DaoWei_2\",\n    \"DI_JiaZhuaKai_DaoWei_2\",\n    \"DI_JiaZhuaGuan_DaoWei_2\",\n    \"DI_QianShen_DaoWei\",\n    \"DI_HouSuo_DaoWei\",\n    \"DI_MenKai_DaoWei\",\n    \"DI_MenGuan_DaoWei\",\n];\n\nvar IO = global.get(\"IO_30\");\nconst data = msg.payload;\nfor (var i = 0; i < Names.length; i++) {\n    if (Names[i] != '-') {\n        if (Names[i].startsWith(\"DI_\")) {\n            IO.DI[Names[i]] = data[i];\n        }\n        else {\n            IO.AI[Names[i]] = data[i];\n        }\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "604d8873ecf1a876",
        "type": "function",
        "z": "f9ed7ce98dfb48f5",
        "name": "物料-视觉-工单 初始化",
        "func": "\nvar ErrorMap_30 = [\n    \"视觉通信故障\",\n    \"螺丝刀通信故障\",\n    \"伺服1故障\",\n    \"伺服2故障\",\n    \"伺服3故障\",\n    \"伺服4故障\",   \n    \"伺服5故障\",\n    \"伺服6故障\",\n    \"伺服7故障\",\n    ];\n    \nglobal.set(\"StationTask_30\",{\n    BillCode: \"-\",\n    ProductCode: \"-\",\n    ProductName:\"-\",\n    ProcessDetail: [{\n        ProcessCode: \"OP30\",\n        ProcessName: \"-\",\n        EquipmentCode: \"OP30\",\n        ProgramNumer: 1,\n        Num: 0,\n        MaterialDetails: [\n           \n      \n        ]\n    }]\n});\n\nconst t = (new Date()).toISOString();\nglobal.set(\"Request_30\",{\n    StartTime:t,\n    EndTime:t,\n    RequestID:\"-\",\n    barcode: \"\",\n});\n\n\nglobal.set(\"ErrorMap_30\", ErrorMap_30);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "1ea186152dc1a1ba",
        "type": "function",
        "z": "f9ed7ce98dfb48f5",
        "name": "定义变量名",
        "func": "global.set(\"ns\",{\n \n    \n    \n});\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 40,
        "wires": [
            [
                "d173ea419e8a649d"
            ]
        ]
    },
    {
        "id": "def7b74dd73c77b9",
        "type": "http in",
        "z": "f9ed7ce98dfb48f5",
        "name": "",
        "url": "/30/data",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 320,
        "wires": [
            [
                "9bc3906f868c0782"
            ]
        ]
    },
    {
        "id": "1e57f8f96e834f72",
        "type": "http response",
        "z": "f9ed7ce98dfb48f5",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 590,
        "y": 320,
        "wires": []
    },
    {
        "id": "9bc3906f868c0782",
        "type": "function",
        "z": "f9ed7ce98dfb48f5",
        "name": "function 30",
        "func": "const p = msg.payload.key;\nvar arr = p.split(\".\");\nconst obj = global.get(arr[0]);\neval(\"var \"+arr[0]+\" = obj;\");\nconsole.debug(1);\neval(\"msg.payload = \"+p+\";\");\nconsole.debug(2);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 320,
        "wires": [
            [
                "1e57f8f96e834f72"
            ]
        ]
    },
    {
        "id": "641ff6c1ec0993d0",
        "type": "modbus-write",
        "z": "f9ed7ce98dfb48f5",
        "name": "DI信号同步到虚拟modbus-30",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "MCoils",
        "adr": "10",
        "quantity": "10",
        "server": "ebdc7b3b4236640e",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 520,
        "y": 160,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "7c50b21d9ef49c99",
        "type": "modbus-write",
        "z": "f9ed7ce98dfb48f5",
        "name": "request 同步到控制器",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "MHoldingRegisters",
        "adr": "18",
        "quantity": "1",
        "server": "1a3a610758658ecb",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 460,
        "y": 360,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "d58d5b52b3aabf8e",
        "type": "modbus-read",
        "z": "f9ed7ce98dfb48f5",
        "name": "LCS 调度命令读取",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "HoldingRegister",
        "adr": "4030",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "ebdc7b3b4236640e",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 170,
        "y": 360,
        "wires": [
            [
                "7c50b21d9ef49c99"
            ],
            []
        ]
    },
    {
        "id": "4608b52bd0e963be",
        "type": "http in",
        "z": "efd4a3479ccb4ba6",
        "name": "通用读多个接口",
        "url": "/30/ReadValue",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 480,
        "wires": [
            [
                "6cdf453a33781e84",
                "2bcb5d2052f1f022"
            ]
        ]
    },
    {
        "id": "7bc82b7b8931c0e9",
        "type": "modbus-flex-getter",
        "z": "efd4a3479ccb4ba6",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "ebdc7b3b4236640e",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 810,
        "y": 480,
        "wires": [
            [
                "09bf2352b623f159"
            ],
            [
                "6e00afefcd1f8d56"
            ]
        ]
    },
    {
        "id": "6cdf453a33781e84",
        "type": "change",
        "z": "efd4a3479ccb4ba6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "ReadValue_30",
                "pt": "global",
                "to": "[]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 480,
        "wires": [
            [
                "6f68c83cbeef6995"
            ]
        ]
    },
    {
        "id": "6f68c83cbeef6995",
        "type": "function",
        "z": "efd4a3479ccb4ba6",
        "name": "modbus 报文拆分",
        "func": "var arr = msg.payload;\nfor(var i=0;i<arr.length;i++){\n    var t = arr[i];\n    node.send({payload:{fc:3, address: parseInt(t.Address), quantity:1},temp:parseInt(t.Address)});\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 480,
        "wires": [
            [
                "7bc82b7b8931c0e9"
            ]
        ]
    },
    {
        "id": "09bf2352b623f159",
        "type": "function",
        "z": "efd4a3479ccb4ba6",
        "name": "函数 4",
        "func": "var arr = global.get(\"ReadValue_30\");\narr.push({\n    Address: msg.modbusRequest.address,\n    Value: msg.payload[0],\n    ValueType: \"int\"\n});\nconsole.debug(arr);\nglobal.set(\"ReadValue_30\",arr);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "f935a45c14451e53",
        "type": "change",
        "z": "efd4a3479ccb4ba6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload.Code",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "payload.Msg",
                "pt": "msg",
                "to": "操作成功",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.Data",
                "pt": "msg",
                "to": "ReadValue_30",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 520,
        "wires": [
            [
                "c1578a5ac1b3e7aa"
            ]
        ]
    },
    {
        "id": "c1578a5ac1b3e7aa",
        "type": "http response",
        "z": "efd4a3479ccb4ba6",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 790,
        "y": 520,
        "wires": []
    },
    {
        "id": "2bcb5d2052f1f022",
        "type": "delay",
        "z": "efd4a3479ccb4ba6",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 280,
        "y": 520,
        "wires": [
            [
                "773bba15772d7918"
            ]
        ]
    },
    {
        "id": "6e00afefcd1f8d56",
        "type": "debug",
        "z": "efd4a3479ccb4ba6",
        "name": "调试 15",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 540,
        "wires": []
    },
    {
        "id": "773bba15772d7918",
        "type": "change",
        "z": "efd4a3479ccb4ba6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 520,
        "wires": [
            [
                "f935a45c14451e53"
            ]
        ]
    },
    {
        "id": "f8d1dbf6b0dbfbeb",
        "type": "http response",
        "z": "efd4a3479ccb4ba6",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 970,
        "y": 200,
        "wires": []
    },
    {
        "id": "2d305db09f3358f5",
        "type": "http in",
        "z": "efd4a3479ccb4ba6",
        "name": "工位任务接收",
        "url": "/30/ReceiveStationTask",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 200,
        "wires": [
            [
                "8924cb91e4255f67"
            ]
        ]
    },
    {
        "id": "069cd12c59655e36",
        "type": "http in",
        "z": "efd4a3479ccb4ba6",
        "name": "泛在通用写多个接口",
        "url": "/30/WriteValue",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 440,
        "wires": [
            [
                "e650501ef7c8bd5d"
            ]
        ]
    },
    {
        "id": "e650501ef7c8bd5d",
        "type": "function",
        "z": "efd4a3479ccb4ba6",
        "name": "modbus 报文拆分",
        "func": "var arr = msg.payload;\nfor(var i=0;i<arr.length;i++){\n    var t = arr[i];\n    msg.payload = { value: parseInt(t.Value), 'fc': 6, 'unitid': 1, 'address': parseInt(t.Address), 'quantity': 1 } \n    node.send(msg);\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 440,
        "wires": [
            [
                "bf70b1ac9f63a3ce"
            ]
        ]
    },
    {
        "id": "bf70b1ac9f63a3ce",
        "type": "modbus-flex-write",
        "z": "efd4a3479ccb4ba6",
        "name": "批量修改modbus值",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "server": "ebdc7b3b4236640e",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 810,
        "y": 440,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "deb61c6e5a96a297",
        "type": "change",
        "z": "efd4a3479ccb4ba6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "StationTask_30",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 240,
        "wires": [
            [
                "ad1349edb4a3a7a9"
            ]
        ]
    },
    {
        "id": "ad1349edb4a3a7a9",
        "type": "function",
        "z": "efd4a3479ccb4ba6",
        "name": "反馈",
        "func": "msg.payload = {\n    Code: 0,\n    Msg:\"操作成功\"\n};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 240,
        "wires": [
            [
                "f8d1dbf6b0dbfbeb"
            ]
        ]
    },
    {
        "id": "237dec7981d46117",
        "type": "http in",
        "z": "efd4a3479ccb4ba6",
        "name": "工单结束",
        "url": "/30/ReceiveEndSignal",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 80,
        "y": 120,
        "wires": [
            [
                "943af9003c75f030"
            ]
        ]
    },
    {
        "id": "363625936814d627",
        "type": "http response",
        "z": "efd4a3479ccb4ba6",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 730,
        "y": 140,
        "wires": []
    },
    {
        "id": "1dae50e8eeeb5c98",
        "type": "function",
        "z": "efd4a3479ccb4ba6",
        "name": "反馈",
        "func": "msg.payload = {\n    Code: 0,\n    Msg: \"操作成功\"\n};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 120,
        "wires": [
            [
                "363625936814d627"
            ]
        ]
    },
    {
        "id": "943af9003c75f030",
        "type": "switch",
        "z": "efd4a3479ccb4ba6",
        "name": "",
        "property": "payload.BillCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "StationTask_90.BillCode",
                "vt": "global"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 350,
        "y": 120,
        "wires": [
            [
                "1dae50e8eeeb5c98",
                "c4a8d332b6ef6e97"
            ],
            [
                "896b57cae6d989da"
            ]
        ]
    },
    {
        "id": "896b57cae6d989da",
        "type": "function",
        "z": "efd4a3479ccb4ba6",
        "name": "反馈",
        "func": "msg.payload = {\n    Code: 1,\n    Msg: \"操作失败,当前设备执行的工单和下发的结束工单不一致\"\n};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 160,
        "wires": [
            [
                "363625936814d627"
            ]
        ]
    },
    {
        "id": "efd3c09feee9ba70",
        "type": "http response",
        "z": "efd4a3479ccb4ba6",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 430,
        "y": 240,
        "wires": []
    },
    {
        "id": "d3c523395d32e574",
        "type": "http in",
        "z": "efd4a3479ccb4ba6",
        "name": "工位状态-轮询",
        "url": "/30/GetStationState",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 240,
        "wires": [
            [
                "5e8425ab74d15c64"
            ]
        ]
    },
    {
        "id": "5e8425ab74d15c64",
        "type": "function",
        "z": "efd4a3479ccb4ba6",
        "name": "反馈",
        "func": "var IO = global.get(\"IO_30\");\nmsg.payload = {\n\"Code\": 0,\n\"Msg\": \"操作成功\",\n\"Data\": [{\n\"StationCode\": \"OP_30\",\n\"StationName\": \"上润滑油\",\n\"Status\": IO.AI.status\n}]\n};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 240,
        "wires": [
            [
                "efd3c09feee9ba70"
            ]
        ]
    },
    {
        "id": "895ab5888ce9d012",
        "type": "http in",
        "z": "efd4a3479ccb4ba6",
        "name": "动作执行",
        "url": "/30/DoAction",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 80,
        "y": 340,
        "wires": [
            [
                "1a57418033fe0137",
                "a6b15b16dbe29a69"
            ]
        ]
    },
    {
        "id": "9cad25a40f338606",
        "type": "function",
        "z": "efd4a3479ccb4ba6",
        "name": "modbus 报文拆分",
        "func": "var t = msg.payload;\nif (t.Value == 0 && t.Address == 4030) {\n    t.RequestID = \"-\";\n}\nvar Request = global.get(\"Request_30\");\nRequest.RequestID = t.RequestID;\nvar t2 = (new Date()).toISOString();\nRequest.StartTime = t2;\nRequest.EndTime = \"\";\nmsg.payload = { value: parseInt(t.Value), 'fc': 6, 'unitid': 1, 'address': parseInt(t.Address), 'quantity': 1 }\nnode.send(msg);",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 360,
        "wires": [
            [
                "bf70b1ac9f63a3ce",
                "397d0296a33d4e7d",
                "abfd434d7d0f4395"
            ]
        ]
    },
    {
        "id": "e759e7cdef9ed3b0",
        "type": "switch",
        "z": "efd4a3479ccb4ba6",
        "name": "",
        "property": "Request_30.RequestID",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "-",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 295,
        "y": 340,
        "wires": [
            [
                "9cad25a40f338606",
                "5247ce7eefc505b5"
            ],
            [
                "49cabd21c330f7f7"
            ]
        ],
        "l": false
    },
    {
        "id": "5247ce7eefc505b5",
        "type": "function",
        "z": "efd4a3479ccb4ba6",
        "name": "反馈",
        "func": "msg.payload = {\n    Code: 0,\n    Msg: \"操作成功\"\n};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 320,
        "wires": [
            [
                "aaeb451f35e295ca"
            ]
        ]
    },
    {
        "id": "aaeb451f35e295ca",
        "type": "http response",
        "z": "efd4a3479ccb4ba6",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 590,
        "y": 320,
        "wires": []
    },
    {
        "id": "49cabd21c330f7f7",
        "type": "function",
        "z": "efd4a3479ccb4ba6",
        "name": "反馈",
        "func": "msg.payload = {\n    Code: 1,\n    Msg: \"上一个动作还未完成\"\n};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 400,
        "wires": [
            [
                "aaeb451f35e295ca"
            ]
        ]
    },
    {
        "id": "8924cb91e4255f67",
        "type": "function",
        "z": "efd4a3479ccb4ba6",
        "name": "格式解析",
        "func": "msg.error = 0;\n\nvar task = global.get(\"StationTask_30\");\nif(task.BillCode!='-'){\n    msg.error = 1;\n    msg.errorMsg = \"previese task is on going\";\n    return msg;\n}\n\nconst data = msg.payload;\nif((typeof(data)!='object')){\n    msg.error = 2;\n    msg.errorMsg = \"format wrong\";\n    return msg;\n}\n\nif (!('BillCode' in data)){\n    msg.error = 3;\n    msg.errorMsg = \"no BillCode\";\n    return msg;\n}\nif (!('ProductCode' in data)){\n    msg.error = 4;\n    msg.errorMsg = \"no ProductCode\";\n    return msg;\n}\n\nif (!('ProcessDetail' in data)){\n    msg.error = 5;\n    msg.errorMsg = \"no ProcessDetail\";\n    return msg;\n}\n\nif(data.ProcessDetail.length==1){\n    const data2 = data.ProcessDetail[0];\n    if (!('EquipmentCode' in data2)){\n        msg.error = 6;\n        msg.errorMsg = \"no EquipmentCode\";\n        return msg;\n    }\n    if(data2.EquipmentCode!='OP30'){\n        msg.error = 7;\n        msg.errorMsg = \"no OP30\";\n        return msg;\n    }\n    if (!('Num' in data2)){\n        msg.error = 8;\n        msg.errorMsg = \"no Num\";\n        return msg;\n    }\n}\nelse{\n    msg.error = 13;\n    msg.errorMsg = \"ProcessDetail.length should be 1\";\n    return msg;\n}\n\n\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 200,
        "wires": [
            [
                "15b4780638b47f24"
            ]
        ]
    },
    {
        "id": "15b4780638b47f24",
        "type": "switch",
        "z": "efd4a3479ccb4ba6",
        "name": "",
        "property": "error",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 430,
        "y": 200,
        "wires": [
            [
                "28eceff2f21345ee"
            ],
            [
                "deb61c6e5a96a297"
            ]
        ]
    },
    {
        "id": "28eceff2f21345ee",
        "type": "function",
        "z": "efd4a3479ccb4ba6",
        "name": "反馈",
        "func": "msg.payload = {\n    Code: 1,\n    Msg:\"失败\"+msg.errorMsg\n};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 200,
        "wires": [
            [
                "f8d1dbf6b0dbfbeb"
            ]
        ]
    },
    {
        "id": "c4a8d332b6ef6e97",
        "type": "change",
        "z": "efd4a3479ccb4ba6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "StationTask_30.BillCode",
                "pt": "global",
                "to": "-",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "46f43e7304413938",
        "type": "inject",
        "z": "efd4a3479ccb4ba6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 700,
        "wires": [
            [
                "0f324691ac3b0976"
            ]
        ]
    },
    {
        "id": "0f324691ac3b0976",
        "type": "trigger",
        "z": "efd4a3479ccb4ba6",
        "name": "",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "-250",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 235,
        "y": 700,
        "wires": [
            [
                "8e6ec26cf97ae0d3",
                "e95367c3fa79d736"
            ]
        ],
        "l": false
    },
    {
        "id": "b948b482b1c58187",
        "type": "rbe",
        "z": "efd4a3479ccb4ba6",
        "name": "",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 370,
        "y": 780,
        "wires": [
            [
                "b57f4df7898d9cc1"
            ]
        ]
    },
    {
        "id": "8e6ec26cf97ae0d3",
        "type": "change",
        "z": "efd4a3479ccb4ba6",
        "name": "状态变化监听",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "IO_30.AI.work_over",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 200,
        "y": 780,
        "wires": [
            [
                "b948b482b1c58187"
            ]
        ]
    },
    {
        "id": "b57f4df7898d9cc1",
        "type": "switch",
        "z": "efd4a3479ccb4ba6",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 490,
        "y": 780,
        "wires": [
            [
                "d72a99f95f1edb40"
            ],
            []
        ]
    },
    {
        "id": "c5e61641d6e5b189",
        "type": "http request",
        "z": "efd4a3479ccb4ba6",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 860,
        "y": 780,
        "wires": [
            [
                "222fe37a347bb203",
                "b1e9dd4e8f91a4a7"
            ]
        ]
    },
    {
        "id": "05d712aa2ddbc3be",
        "type": "rbe",
        "z": "efd4a3479ccb4ba6",
        "name": "",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 370,
        "y": 860,
        "wires": [
            [
                "03abd2d07a232149"
            ]
        ]
    },
    {
        "id": "e95367c3fa79d736",
        "type": "change",
        "z": "efd4a3479ccb4ba6",
        "name": "故障信号监听",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "IO_10.AI.error",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 200,
        "y": 860,
        "wires": [
            [
                "05d712aa2ddbc3be"
            ]
        ]
    },
    {
        "id": "03abd2d07a232149",
        "type": "switch",
        "z": "efd4a3479ccb4ba6",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 490,
        "y": 860,
        "wires": [
            [
                "d80e5268ce36d952"
            ]
        ]
    },
    {
        "id": "adcef80be12aedc0",
        "type": "http request",
        "z": "efd4a3479ccb4ba6",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "other",
                "keyValue": "Accept",
                "valueType": "other",
                "valueValue": "application/json"
            }
        ],
        "x": 860,
        "y": 860,
        "wires": [
            [
                "37552ffe7abdbb5e"
            ]
        ]
    },
    {
        "id": "222fe37a347bb203",
        "type": "debug",
        "z": "efd4a3479ccb4ba6",
        "name": "调试 22",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1020,
        "y": 780,
        "wires": []
    },
    {
        "id": "37552ffe7abdbb5e",
        "type": "debug",
        "z": "efd4a3479ccb4ba6",
        "name": "调试 23",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1020,
        "y": 860,
        "wires": []
    },
    {
        "id": "d80e5268ce36d952",
        "type": "function",
        "z": "efd4a3479ccb4ba6",
        "name": "读取故障描述",
        "func": "var ErrorMap = global.get(\"ErrorMap_30\");\nmsg.payload ={\nEquipmentCode: \"OP30\",\nEquipmentName: \"泛在控制器\",\nStatus: 0,\nWarnContent: ErrorMap[msg.payload]\n};\nmsg.url = global.get(\"LCS\")+\"receiveUbiquitousWarn\";\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 860,
        "wires": [
            [
                "adcef80be12aedc0"
            ]
        ]
    },
    {
        "id": "d72a99f95f1edb40",
        "type": "function",
        "z": "efd4a3479ccb4ba6",
        "name": "生产完成",
        "func": "const t = (new Date()).toISOString();\nvar Request = global.get(\"Request_30\");\nRequest.EndTime = t;\nmsg.payload = Request;\nmsg.url = global.get(\"LCS\") + \"actionCompletedSignal\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 780,
        "wires": [
            [
                "c5e61641d6e5b189"
            ]
        ]
    },
    {
        "id": "bc9637cc0a3baaba",
        "type": "inject",
        "z": "efd4a3479ccb4ba6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 490,
        "y": 740,
        "wires": [
            [
                "d72a99f95f1edb40"
            ]
        ]
    },
    {
        "id": "b1e9dd4e8f91a4a7",
        "type": "delay",
        "z": "efd4a3479ccb4ba6",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1020,
        "y": 820,
        "wires": [
            [
                "366db6dd22a1471c"
            ]
        ]
    },
    {
        "id": "366db6dd22a1471c",
        "type": "change",
        "z": "efd4a3479ccb4ba6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Request_30.RequestID",
                "pt": "global",
                "to": "-",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "Request_30.RequestID_",
                "pt": "global",
                "to": "-",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1180,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "397d0296a33d4e7d",
        "type": "delay",
        "z": "efd4a3479ccb4ba6",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 625,
        "y": 360,
        "wires": [
            [
                "e97d3a9cf5bb6e41"
            ]
        ],
        "l": false
    },
    {
        "id": "e97d3a9cf5bb6e41",
        "type": "function",
        "z": "efd4a3479ccb4ba6",
        "name": "动作置位",
        "func": "msg.payload = { value: 0, fc: 6, unitid: 1, address: 4030, quantity: 1 }; \nnode.send(msg);",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 360,
        "wires": [
            [
                "bf70b1ac9f63a3ce"
            ]
        ]
    },
    {
        "id": "1a57418033fe0137",
        "type": "switch",
        "z": "efd4a3479ccb4ba6",
        "name": "",
        "property": "IO_30.AI.status",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "22",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 195,
        "y": 340,
        "wires": [
            [
                "e759e7cdef9ed3b0"
            ],
            [
                "f12d04b26351639b"
            ]
        ],
        "l": false
    },
    {
        "id": "f12d04b26351639b",
        "type": "function",
        "z": "efd4a3479ccb4ba6",
        "name": "反馈",
        "func": "const IO = global.get(\"IO_30\");\nmsg.payload = {\n    Code: 1,\n    Msg: \"当前状态无法执行动作:\"+IO.AI.status,\n};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 400,
        "wires": [
            [
                "aaeb451f35e295ca"
            ]
        ]
    },
    {
        "id": "abfd434d7d0f4395",
        "type": "debug",
        "z": "efd4a3479ccb4ba6",
        "name": "调试 24",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 320,
        "wires": []
    },
    {
        "id": "1f3ee82275b60d3a",
        "type": "file",
        "z": "efd4a3479ccb4ba6",
        "name": "",
        "filename": "C:/tmp/request.txt",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 310,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "a6b15b16dbe29a69",
        "type": "function",
        "z": "efd4a3479ccb4ba6",
        "name": "函数 26",
        "func": "var txt = msg.payload.Value + \",\" + msg.payload.RequestID;\nvar date = (new Date()).toISOString();\nmsg.payload = date + \" : \" + txt;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 185,
        "y": 280,
        "wires": [
            [
                "1f3ee82275b60d3a"
            ]
        ],
        "l": false
    },
    {
        "id": "647157037f20c3a8",
        "type": "inject",
        "z": "d8280152e0f21cc5",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "-",
        "payloadType": "str",
        "x": 150,
        "y": 260,
        "wires": [
            [
                "3f4e4cb4d6b06af4",
                "68f6b8591b36d4ae"
            ]
        ]
    },
    {
        "id": "3f4e4cb4d6b06af4",
        "type": "change",
        "z": "d8280152e0f21cc5",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Request_20.RequestID",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "68f6b8591b36d4ae",
        "type": "change",
        "z": "d8280152e0f21cc5",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Request_30.RequestID",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "36a89f6b5c0bc662",
        "type": "http in",
        "z": "d8280152e0f21cc5",
        "name": "",
        "url": "/20/RequestID",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 350,
        "y": 140,
        "wires": [
            [
                "45e29054f0b73dce",
                "15888784eb98e7e3"
            ]
        ]
    },
    {
        "id": "45e29054f0b73dce",
        "type": "change",
        "z": "d8280152e0f21cc5",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "-",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 475,
        "y": 140,
        "wires": [
            [
                "3f4e4cb4d6b06af4"
            ]
        ],
        "l": false
    },
    {
        "id": "a1f3f03298325642",
        "type": "http in",
        "z": "d8280152e0f21cc5",
        "name": "",
        "url": "/30/RequestID",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 350,
        "y": 360,
        "wires": [
            [
                "6b5996185a552e98",
                "6e4fa3dbce3936cf"
            ]
        ]
    },
    {
        "id": "6b5996185a552e98",
        "type": "change",
        "z": "d8280152e0f21cc5",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "-",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 475,
        "y": 360,
        "wires": [
            [
                "68f6b8591b36d4ae"
            ]
        ],
        "l": false
    },
    {
        "id": "15888784eb98e7e3",
        "type": "http response",
        "z": "d8280152e0f21cc5",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 510,
        "y": 100,
        "wires": []
    },
    {
        "id": "6e4fa3dbce3936cf",
        "type": "http response",
        "z": "d8280152e0f21cc5",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 510,
        "y": 400,
        "wires": []
    }
]