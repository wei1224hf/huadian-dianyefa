- id: d88c1867bae1e0fb
  type: tab
  label: scheduler-40
  disabled: false
  info: ''
  env: []
- id: 7706fb63d5fd07e7
  type: http in
  z: d88c1867bae1e0fb
  name: 通用读多个接口
  url: /40/ReadValue
  method: post
  upload: false
  swaggerDoc: ''
  x: 120
  'y': 580
  wires:
    - - cf794d6f1f23a051
      - 60de157ae8d66f7d
- id: 7b9f079cc0213c67
  type: modbus-flex-getter
  z: d88c1867bae1e0fb
  name: ''
  showStatusActivities: false
  showErrors: false
  showWarnings: true
  logIOActivities: false
  server: ebdc7b3b4236640e
  useIOFile: false
  ioFile: ''
  useIOForPayload: false
  emptyMsgOnFail: false
  keepMsgProperties: false
  delayOnStart: false
  startDelayTime: ''
  x: 830
  'y': 580
  wires:
    - - 722f678d993b8d3d
    - - ea9dce715895693f
- id: cf794d6f1f23a051
  type: change
  z: d88c1867bae1e0fb
  name: ''
  rules:
    - t: set
      p: ReadValue_40
      pt: global
      to: '[]'
      tot: jsonata
  action: ''
  property: ''
  from: ''
  to: ''
  reg: false
  x: 380
  'y': 580
  wires:
    - - 36b8c5ac44e86c2b
- id: 36b8c5ac44e86c2b
  type: function
  z: d88c1867bae1e0fb
  name: modbus 报文拆分
  func: |-
    var arr = msg.payload;
    for(var i=0;i<arr.length;i++){
        var t = arr[i];
        node.send({payload:{fc:3, address: parseInt(t.Address), quantity:1},temp:parseInt(t.Address)});
    }
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 630
  'y': 580
  wires:
    - - 7b9f079cc0213c67
- id: 722f678d993b8d3d
  type: function
  z: d88c1867bae1e0fb
  name: 函数 4
  func: |-
    var arr = global.get("ReadValue_90");
    arr.push({
        Address: msg.modbusRequest.address,
        Value: msg.payload[0],
        ValueType: "int"
    });
    console.debug(arr);
    global.set("ReadValue_90",arr);
    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 1010
  'y': 580
  wires:
    - []
- id: f6b534a4346c427c
  type: change
  z: d88c1867bae1e0fb
  name: ''
  rules:
    - t: set
      p: payload.Code
      pt: msg
      to: '0'
      tot: num
    - t: set
      p: payload.Msg
      pt: msg
      to: 操作成功
      tot: str
    - t: set
      p: payload.Data
      pt: msg
      to: ReadValue_40
      tot: global
  action: ''
  property: ''
  from: ''
  to: ''
  reg: false
  x: 660
  'y': 620
  wires:
    - - c84379a58ecb7463
- id: c84379a58ecb7463
  type: http response
  z: d88c1867bae1e0fb
  name: ''
  statusCode: ''
  headers: {}
  x: 810
  'y': 620
  wires: []
- id: 60de157ae8d66f7d
  type: delay
  z: d88c1867bae1e0fb
  name: ''
  pauseType: delay
  timeout: '1'
  timeoutUnits: seconds
  rate: '1'
  nbRateUnits: '1'
  rateUnits: second
  randomFirst: '1'
  randomLast: '5'
  randomUnits: seconds
  drop: false
  allowrate: false
  outputs: 1
  x: 300
  'y': 620
  wires:
    - - b3bc9fbf999ece36
- id: ea9dce715895693f
  type: debug
  z: d88c1867bae1e0fb
  name: 调试 15
  active: true
  tosidebar: true
  console: false
  tostatus: false
  complete: 'false'
  statusVal: ''
  statusType: auto
  x: 1000
  'y': 640
  wires: []
- id: b3bc9fbf999ece36
  type: change
  z: d88c1867bae1e0fb
  name: ''
  rules:
    - t: set
      p: payload
      pt: msg
      to: '{}'
      tot: jsonata
  action: ''
  property: ''
  from: ''
  to: ''
  reg: false
  x: 470
  'y': 620
  wires:
    - - f6b534a4346c427c
- id: d298d14cec0cd2ad
  type: http response
  z: d88c1867bae1e0fb
  name: ''
  statusCode: ''
  headers: {}
  x: 1090
  'y': 220
  wires: []
- id: 3effcb343ad1c7ba
  type: http in
  z: d88c1867bae1e0fb
  name: 工位任务接收
  url: /40/ReceiveStationTask
  method: post
  upload: false
  swaggerDoc: ''
  x: 110
  'y': 220
  wires:
    - - d68853fea5e281f2
- id: 7d3ae66e55dd8e03
  type: http in
  z: d88c1867bae1e0fb
  name: 泛在通用写多个接口
  url: /40/WriteValue
  method: post
  upload: false
  swaggerDoc: ''
  x: 130
  'y': 500
  wires:
    - - dfeb878939fe0e49
      - 5ae3bfe5c308e16e
- id: dfeb878939fe0e49
  type: function
  z: d88c1867bae1e0fb
  name: modbus 报文拆分
  func: |-
    var arr = msg.payload;
    for(var i=0;i<arr.length;i++){
        var t = arr[i];
        msg.payload = { value: parseInt(t.Value), 'fc': 6, 'unitid': 1, 'address': parseInt(t.Address), 'quantity': 1 } 
        node.send(msg);
    }
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 350
  'y': 500
  wires:
    - - fae5f9e7181a61e5
- id: fae5f9e7181a61e5
  type: modbus-flex-write
  z: d88c1867bae1e0fb
  name: 批量修改modbus值
  showStatusActivities: false
  showErrors: false
  showWarnings: true
  server: ebdc7b3b4236640e
  emptyMsgOnFail: false
  keepMsgProperties: false
  delayOnStart: false
  startDelayTime: ''
  x: 1010
  'y': 500
  wires:
    - []
    - []
- id: 4ab3e8cf10272911
  type: change
  z: d88c1867bae1e0fb
  name: ''
  rules:
    - t: set
      p: StationTask_30
      pt: global
      to: payload
      tot: msg
  action: ''
  property: ''
  from: ''
  to: ''
  reg: false
  x: 680
  'y': 240
  wires:
    - - 7d164756c079f84c
- id: 7d164756c079f84c
  type: function
  z: d88c1867bae1e0fb
  name: 反馈
  func: |-
    msg.payload = {
        Code: 0,
        Msg:"操作成功"
    };
    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 930
  'y': 240
  wires:
    - - d298d14cec0cd2ad
- id: d378ed41610aa145
  type: http in
  z: d88c1867bae1e0fb
  name: ReceiveEndSignal
  url: /40/ReceiveEndSignal
  method: post
  upload: false
  swaggerDoc: ''
  x: 130
  'y': 120
  wires:
    - - daf324e0df581ccb
- id: c153190d54cb3e4f
  type: http response
  z: d88c1867bae1e0fb
  name: ''
  statusCode: ''
  headers: {}
  x: 750
  'y': 140
  wires: []
- id: 492145c5934563b8
  type: function
  z: d88c1867bae1e0fb
  name: 反馈
  func: |-
    msg.payload = {
        Code: 0,
        Msg: "操作成功"
    };
    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 610
  'y': 120
  wires:
    - - c153190d54cb3e4f
- id: daf324e0df581ccb
  type: switch
  z: d88c1867bae1e0fb
  name: ''
  property: payload.BillCode
  propertyType: msg
  rules:
    - t: eq
      v: StationTask_90.BillCode
      vt: global
    - t: else
  checkall: 'true'
  repair: false
  outputs: 2
  x: 370
  'y': 120
  wires:
    - - fdbdde8b72938864
      - 492145c5934563b8
      - 3beb8af87213067c
    - - 823a91f3fcbc9c65
- id: fdbdde8b72938864
  type: change
  z: d88c1867bae1e0fb
  name: ''
  rules:
    - t: set
      p: IO_40.AO.production
      pt: global
      to: '0'
      tot: num
  action: ''
  property: ''
  from: ''
  to: ''
  reg: false
  x: 700
  'y': 80
  wires:
    - []
- id: 823a91f3fcbc9c65
  type: function
  z: d88c1867bae1e0fb
  name: 反馈
  func: |-
    msg.payload = {
        Code: 1,
        Msg: "操作失败,当前设备执行的工单和下发的结束工单不一致"
    };
    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 610
  'y': 160
  wires:
    - - c153190d54cb3e4f
- id: 8fbb0f12cc26aa6c
  type: http response
  z: d88c1867bae1e0fb
  name: ''
  statusCode: ''
  headers: {}
  x: 450
  'y': 260
  wires: []
- id: 19cf2870fa717d11
  type: http in
  z: d88c1867bae1e0fb
  name: 工位状态-轮询
  url: /40/GetStationState
  method: post
  upload: false
  swaggerDoc: ''
  x: 110
  'y': 260
  wires:
    - - 0c3a645e4b8f02d7
- id: 0c3a645e4b8f02d7
  type: function
  z: d88c1867bae1e0fb
  name: 反馈
  func: |-
    var IO_40 = global.get("IO_40");
    msg.payload = {
    "Code": 0,
    "Msg": "操作成功",
    "Data": [{
    "StationCode": "OP_40",
    "StationName": "阀串预装",
    "Status": IO_40.AI.status
    }]
    };
    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 270
  'y': 260
  wires:
    - - 8fbb0f12cc26aa6c
- id: e2af0bcf5167bbf8
  type: function
  z: d88c1867bae1e0fb
  name: modbus 报文拆分
  func: >-
    var t = msg.payload;

    if(t.Value==0 && t.Address==4040){
        t.RequestID = "-";
    }

    var Request = global.get("Request_40")

    Request.RequestID = t.RequestID;

    var t2 = (new Date()).toISOString();

    Request.StartTime = t2;

    Request.EndTime = "";

    msg.payload = { value: parseInt(t.Value), 'fc': 6, 'unitid': 1, 'address':
    parseInt(t.Address), 'quantity': 1 } 

    node.send(msg);
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 490
  'y': 440
  wires:
    - - fae5f9e7181a61e5
      - 397d0296a33d4e7d
- id: f9f9124064c1ae99
  type: switch
  z: d88c1867bae1e0fb
  name: ''
  property: Request_40.RequestID
  propertyType: global
  rules:
    - t: eq
      v: '-'
      vt: str
    - t: else
  checkall: 'true'
  repair: false
  outputs: 2
  x: 310
  'y': 360
  wires:
    - - bfcda46fbfa3e83a
      - e2af0bcf5167bbf8
    - - c7691075f48db3cf
- id: bfcda46fbfa3e83a
  type: function
  z: d88c1867bae1e0fb
  name: 反馈
  func: |-
    msg.payload = {
        Code: 0,
        Msg: "操作成功"
    };
    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 450
  'y': 320
  wires:
    - - f112f6480d6c79cd
      - bb442ff90bfe9c88
- id: f112f6480d6c79cd
  type: http response
  z: d88c1867bae1e0fb
  name: ''
  statusCode: ''
  headers: {}
  x: 610
  'y': 320
  wires: []
- id: c7691075f48db3cf
  type: function
  z: d88c1867bae1e0fb
  name: 反馈
  func: |-
    msg.payload = {
        Code: 1,
        Msg: "上一个动作还未完成"
    };
    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 450
  'y': 360
  wires:
    - - f112f6480d6c79cd
- id: d68853fea5e281f2
  type: function
  z: d88c1867bae1e0fb
  name: 格式解析
  func: |
    msg.error = 0;

    var task = global.get("StationTask_40");
    if(task.BillCode!='-'){
        msg.error = 1;
        msg.errorMsg = "previese task is on going";
        return msg;
    }

    const data = msg.payload;
    if((typeof(data)!='object')){
        msg.error = 2;
        msg.errorMsg = "format wrong";
        return msg;
    }

    if (!('BillCode' in data)){
        msg.error = 3;
        msg.errorMsg = "no BillCode";
        return msg;
    }
    if (!('ProductCode' in data)){
        msg.error = 4;
        msg.errorMsg = "no ProductCode";
        return msg;
    }

    if (!('ProcessDetail' in data)){
        msg.error = 5;
        msg.errorMsg = "no ProcessDetail";
        return msg;
    }

    if(data.ProcessDetail.length==1){
        const data2 = data.ProcessDetail[0];
        if (!('EquipmentCode' in data2)){
            msg.error = 6;
            msg.errorMsg = "no EquipmentCode";
            return msg;
        }
        if(data2.EquipmentCode!='OP40'){
            msg.error = 7;
            msg.errorMsg = "no OP40";
            return msg;
        }
        if (!('Num' in data2)){
            msg.error = 8;
            msg.errorMsg = "no Num";
            return msg;
        }
        if (!('MaterialDetails' in data2)){
            msg.error = 9;
            msg.errorMsg = "no MaterialDetails";
            return msg;
        }

        var arr_isMaterialIn = [1,1];
        const _arr= [
            "DN-10",
            "DN-20"];
        for(var i=0;i<data2.MaterialDetails.length;i++){
            const data3 = data2.MaterialDetails[i];
            if (!('MaterialCode' in data3)){
                msg.error = 10;
                msg.errorMsg = "MaterialDetails is missing";
                return msg;
            }
            if (!('Num' in data3)){
                msg.error = 11;
                msg.errorMsg = "Num is missing";
                return msg;
            }   

            const a = _arr.indexOf(data3.MaterialCode)
            if(a == -1){
                msg.error = 12;
                msg.errorMsg = "MaterialCode is wrong "+data3.MaterialCode;
                return msg;
            }  
            arr_isMaterialIn[a] = 0;
        }
        var __isMterialIn = 0;
        eval("__isMterialIn = "+arr_isMaterialIn.join("+")+";");
        if(__isMterialIn!=0){
            msg.error = 14;
            msg.errorMsg = __isMterialIn+" materials are missing ";
            return msg;
        }
    }
    else{
        msg.error = 13;
        msg.errorMsg = "ProcessDetail.length should be 1";
        return msg;
    }



    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 280
  'y': 220
  wires:
    - - 4d020da78c077b23
- id: 4d020da78c077b23
  type: switch
  z: d88c1867bae1e0fb
  name: ''
  property: error
  propertyType: msg
  rules:
    - t: neq
      v: '0'
      vt: num
    - t: eq
      v: '0'
      vt: num
  checkall: 'true'
  repair: false
  outputs: 2
  x: 450
  'y': 220
  wires:
    - - bdbb06d5d286846a
    - - 4ab3e8cf10272911
- id: bdbb06d5d286846a
  type: function
  z: d88c1867bae1e0fb
  name: 反馈
  func: |-
    msg.payload = {
        Code: 1,
        Msg:"失败"+msg.errorMsg
    };
    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 610
  'y': 200
  wires:
    - - d298d14cec0cd2ad
- id: 3beb8af87213067c
  type: change
  z: d88c1867bae1e0fb
  name: ''
  rules:
    - t: set
      p: StationTask_40.BillCode
      pt: global
      to: '-'
      tot: str
  action: ''
  property: ''
  from: ''
  to: ''
  reg: false
  x: 710
  'y': 40
  wires:
    - []
- id: b0810fb53f13c461
  type: http in
  z: d88c1867bae1e0fb
  name: 接收上料信息
  url: /40/ReceiveMaterialInfo
  method: post
  upload: false
  swaggerDoc: ''
  x: 110
  'y': 740
  wires:
    - - f3e67ab24f797aa4
- id: 776054aefc337cce
  type: http response
  z: d88c1867bae1e0fb
  name: ''
  statusCode: ''
  headers: {}
  x: 590
  'y': 740
  wires: []
- id: 516333fb7024de26
  type: http in
  z: d88c1867bae1e0fb
  name: 反馈点位料盘数量信息
  url: /40/GetTrayInfo
  method: post
  upload: false
  swaggerDoc: ''
  x: 140
  'y': 820
  wires:
    - - 082e9593d176a1f6
- id: 2ad9faa44646bdf4
  type: http response
  z: d88c1867bae1e0fb
  name: ''
  statusCode: ''
  headers: {}
  x: 590
  'y': 820
  wires: []
- id: f3e67ab24f797aa4
  type: function
  z: d88c1867bae1e0fb
  name: function 33
  func: |-
    var StationTask_40 = global.get("StationTask_40");

    var arr = StationTask_40.ProcessDetail[0].MaterialDetails;
    console.debug(arr);
    for(var i=0;i<arr.length;i++){
    var t =arr[i];
    if(t.LocationCode==msg.payload.LocationCode){
    t.layers = msg.payload.Item;
    console.debug(t.layers);
    break;
    }
    }
    msg.payload = {
    Code: 0,
    Msg: "操作成功"
    };
    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 410
  'y': 740
  wires:
    - - 776054aefc337cce
- id: 082e9593d176a1f6
  type: function
  z: d88c1867bae1e0fb
  name: function 34
  func: |-
    var StationTask_40 = global.get("StationTask_40");
    var arr = StationTask_40.ProcessDetail[0].MaterialDetails;
    var arr2 = msg.payload.PortNumber;
    var arr3 = [];
    for(var i=0;i<arr.length;i++){
    for(var i2=0;i2<arr2.length;i2++){
    if(arr2[i2]==arr[i].LocationCode){
    arr3.push({
    LocationCode: arr[i].LocationCode,
    TotalNum: arr[i].layers.length,
    Item: arr[i].layers,
    });
    }
    }
    }
    var data = {
    Code: 0,
    Msg: "操作成功",
    Data: arr3,
    };
    msg.payload = data;
    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 390
  'y': 820
  wires:
    - - 2ad9faa44646bdf4
- id: 9bb5821c80ef8351
  type: http in
  z: d88c1867bae1e0fb
  name: 动作执行
  url: /40/DoAction
  method: post
  upload: false
  swaggerDoc: ''
  x: 110
  'y': 360
  wires:
    - - 23532b28e1b45c4d
      - a6b15b16dbe29a69
- id: bb442ff90bfe9c88
  type: link out
  z: d88c1867bae1e0fb
  name: 要求生产
  mode: link
  links:
    - 814a3821381d47fb
  x: 535
  'y': 300
  wires: []
- id: 397d0296a33d4e7d
  type: delay
  z: d88c1867bae1e0fb
  name: ''
  pauseType: delay
  timeout: '3'
  timeoutUnits: seconds
  rate: '1'
  nbRateUnits: '1'
  rateUnits: second
  randomFirst: '1'
  randomLast: '5'
  randomUnits: seconds
  drop: false
  allowrate: false
  outputs: 1
  x: 735
  'y': 440
  wires:
    - - e97d3a9cf5bb6e41
  l: false
- id: e97d3a9cf5bb6e41
  type: function
  z: d88c1867bae1e0fb
  name: 动作置位
  func: |-
    msg.payload = { value: 0,fc: 6, unitid: 1, address: 4040, quantity: 1 };
    node.send(msg);
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 840
  'y': 440
  wires:
    - - fae5f9e7181a61e5
- id: 23532b28e1b45c4d
  type: switch
  z: d88c1867bae1e0fb
  name: ''
  property: IO_40.AI.status
  propertyType: global
  rules:
    - t: eq
      v: '22'
      vt: num
    - t: else
  checkall: 'true'
  repair: false
  outputs: 2
  x: 215
  'y': 360
  wires:
    - - f9f9124064c1ae99
    - - 606838fd2172a267
  l: false
- id: 606838fd2172a267
  type: function
  z: d88c1867bae1e0fb
  name: 反馈
  func: |-
    msg.payload = {
        Code: 1,
        Msg: "上一个动作还未完成"
    };
    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 450
  'y': 400
  wires:
    - - f112f6480d6c79cd
- id: 5ae3bfe5c308e16e
  type: http response
  z: d88c1867bae1e0fb
  name: ''
  statusCode: ''
  headers: {}
  x: 330
  'y': 540
  wires: []
- id: 1f3ee82275b60d3a
  type: file
  z: d88c1867bae1e0fb
  name: ''
  filename: 'C:/tmp/request.txt'
  filenameType: str
  appendNewline: true
  createDir: false
  overwriteFile: 'false'
  encoding: none
  x: 310
  'y': 300
  wires:
    - []
- id: a6b15b16dbe29a69
  type: function
  z: d88c1867bae1e0fb
  name: 函数 26
  func: |-
    var txt = msg.payload.Value + "," + msg.payload.RequestID;
    var date = (new Date()).toISOString();
    msg.payload = date + " : " + txt;
    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 185
  'y': 300
  wires:
    - - 1f3ee82275b60d3a
  l: false
