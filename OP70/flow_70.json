[
    {
        "id": "71f537202ea9cf55",
        "type": "tab",
        "label": "screw-73-74",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "20ecc5cb793b2ee6",
        "type": "tab",
        "label": "dataCenter-70",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "b60c316ff0a6b6c0",
        "type": "tab",
        "label": "scheduler-70",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "9a4dd78996491658",
        "type": "modbus-client",
        "name": "screw-front",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": true,
        "tcpHost": "192.168.110.73",
        "tcpPort": "23",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true,
        "showErrors": false,
        "showWarnings": true,
        "showLogs": true
    },
    {
        "id": "6f8d38c417897cab",
        "type": "modbus-client",
        "name": "controller",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": true,
        "tcpHost": "192.168.105.232",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": 1,
        "commandDelay": 1,
        "clientTimeout": 1000,
        "reconnectOnTimeout": true,
        "reconnectTimeout": 2000,
        "parallelUnitIdsAllowed": true,
        "showErrors": false,
        "showWarnings": true,
        "showLogs": true
    },
    {
        "id": "7c8eaadd51bb903a",
        "type": "modbus-client",
        "name": "screw-back",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": true,
        "tcpHost": "192.168.110.74",
        "tcpPort": "23",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true,
        "showErrors": false,
        "showWarnings": true,
        "showLogs": true
    },
    {
        "id": "f45c8577844ced46",
        "type": "modbus-client",
        "name": "虚拟modbus-70",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": true,
        "tcpHost": "127.0.0.1",
        "tcpPort": "10070",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true,
        "showErrors": false,
        "showWarnings": true,
        "showLogs": true
    },
    {
        "id": "8d4d4b53cf1b63e2",
        "type": "modbus-read",
        "z": "71f537202ea9cf55",
        "name": "screw-front",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "HoldingRegister",
        "adr": "31",
        "quantity": "2",
        "rate": "300",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "9a4dd78996491658",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 240,
        "y": 280,
        "wires": [
            [
                "46fcefbc01d35a56",
                "c2215fbee5d7646e",
                "8c0135732e0ed9b9"
            ],
            []
        ]
    },
    {
        "id": "4dab851a3090a4ee",
        "type": "modbus-write",
        "z": "71f537202ea9cf55",
        "name": "screw-front",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "3",
        "quantity": "1",
        "server": "9a4dd78996491658",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 1490,
        "y": 440,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "49312cbe0536496d",
        "type": "inject",
        "z": "71f537202ea9cf55",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 1190,
        "y": 440,
        "wires": [
            [
                "4dab851a3090a4ee"
            ]
        ]
    },
    {
        "id": "1916e26398944d20",
        "type": "inject",
        "z": "71f537202ea9cf55",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "8",
        "payloadType": "num",
        "x": 1190,
        "y": 480,
        "wires": [
            [
                "4dab851a3090a4ee"
            ]
        ]
    },
    {
        "id": "dbb6283463f60b0e",
        "type": "inject",
        "z": "71f537202ea9cf55",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 1190,
        "y": 520,
        "wires": [
            [
                "4dab851a3090a4ee"
            ]
        ]
    },
    {
        "id": "182b0b97b21da321",
        "type": "trigger",
        "z": "71f537202ea9cf55",
        "name": "",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "-250",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 750,
        "y": 460,
        "wires": [
            [
                "7f9f5dfb8250b123"
            ]
        ]
    },
    {
        "id": "9d8c504c1ac36899",
        "type": "function",
        "z": "71f537202ea9cf55",
        "name": "screw_front",
        "func": "var val = 0;\nif (msg.payload.screw_up_run==1){\n    val += 1;\n}\nif (msg.payload.screw_up_clockwise==1){\n    val += 2;\n}\nif (msg.payload.screw_up_pause == 1) {\n    val += 4;\n}\nif (msg.payload.screw_up_reset == 1) {\n    val += 8;\n}\nmsg.payload = val;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 380,
        "wires": [
            [
                "ecce777fee31e872"
            ]
        ]
    },
    {
        "id": "46fcefbc01d35a56",
        "type": "change",
        "z": "71f537202ea9cf55",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "IO_70.AI.screw_front_error",
                "pt": "global",
                "to": "payload[0]",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "IO_70.AI.screw_front_status",
                "pt": "global",
                "to": "payload[1]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "7f9f5dfb8250b123",
        "type": "change",
        "z": "71f537202ea9cf55",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "IO_70.AI",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 950,
        "y": 460,
        "wires": [
            [
                "9d8c504c1ac36899",
                "9ce39f4bd52c4271"
            ]
        ]
    },
    {
        "id": "c093bb83b677bf58",
        "type": "modbus-read",
        "z": "71f537202ea9cf55",
        "name": "front",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "25",
        "quantity": "2",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "9a4dd78996491658",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 650,
        "y": 280,
        "wires": [
            [
                "d514673c90fffe90"
            ],
            []
        ]
    },
    {
        "id": "d514673c90fffe90",
        "type": "function",
        "z": "71f537202ea9cf55",
        "name": "完成扭矩",
        "func": "var data = msg.payload[0] + msg.payload[1] * 0xff;\nif (!Number.isNaN(data)) {\n    msg.payload = data;\n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 280,
        "wires": [
            [
                "c52a9f97c85b9848"
            ]
        ]
    },
    {
        "id": "c52a9f97c85b9848",
        "type": "change",
        "z": "71f537202ea9cf55",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "IO_70.AO.screw_front_torque",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "069f70e3615897de",
        "type": "inject",
        "z": "71f537202ea9cf55",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 560,
        "y": 460,
        "wires": [
            [
                "182b0b97b21da321"
            ]
        ]
    },
    {
        "id": "6ff5ff2ceef04486",
        "type": "inject",
        "z": "71f537202ea9cf55",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "4",
        "payloadType": "num",
        "x": 1190,
        "y": 560,
        "wires": [
            [
                "4dab851a3090a4ee"
            ]
        ]
    },
    {
        "id": "ecce777fee31e872",
        "type": "rbe",
        "z": "71f537202ea9cf55",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1250,
        "y": 380,
        "wires": [
            [
                "4dab851a3090a4ee"
            ]
        ]
    },
    {
        "id": "40bb5e4c42cb7d30",
        "type": "modbus-read",
        "z": "71f537202ea9cf55",
        "name": "screw-back",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "HoldingRegister",
        "adr": "31",
        "quantity": "2",
        "rate": "400",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "7c8eaadd51bb903a",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 250,
        "y": 200,
        "wires": [
            [
                "f1b747c79fa6b734",
                "e1ce61e1bc0425b5",
                "53b18cf363b9bdfc"
            ],
            []
        ]
    },
    {
        "id": "f1b747c79fa6b734",
        "type": "change",
        "z": "71f537202ea9cf55",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "IO_70.AI.screw_front_error",
                "pt": "global",
                "to": "payload[0]",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "IO_70.AI.screw_front_status",
                "pt": "global",
                "to": "payload[1]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "83407c5ab2980f87",
        "type": "modbus-read",
        "z": "71f537202ea9cf55",
        "name": "back",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "25",
        "quantity": "2",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "7c8eaadd51bb903a",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 650,
        "y": 200,
        "wires": [
            [
                "c54fb4f7b0ef4a90"
            ],
            []
        ]
    },
    {
        "id": "c54fb4f7b0ef4a90",
        "type": "function",
        "z": "71f537202ea9cf55",
        "name": "完成扭矩",
        "func": "var data = msg.payload[0] + msg.payload[1] * 0xff;\nif (!Number.isNaN(data)) {\n    msg.payload = data;\n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 200,
        "wires": [
            [
                "a1d7c2260b955069"
            ]
        ]
    },
    {
        "id": "a1d7c2260b955069",
        "type": "change",
        "z": "71f537202ea9cf55",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "IO_70.AO.screw_back_torque",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "aa6e81123ef4575d",
        "type": "modbus-write",
        "z": "71f537202ea9cf55",
        "name": "screw-back",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "3",
        "quantity": "1",
        "server": "7c8eaadd51bb903a",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 1490,
        "y": 680,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "a6b590eb006b590d",
        "type": "inject",
        "z": "71f537202ea9cf55",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 1190,
        "y": 680,
        "wires": [
            [
                "aa6e81123ef4575d"
            ]
        ]
    },
    {
        "id": "c94c6ad9e72d2877",
        "type": "inject",
        "z": "71f537202ea9cf55",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "8",
        "payloadType": "num",
        "x": 1190,
        "y": 720,
        "wires": [
            [
                "aa6e81123ef4575d"
            ]
        ]
    },
    {
        "id": "9fdafbbe3aad3347",
        "type": "inject",
        "z": "71f537202ea9cf55",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 1190,
        "y": 760,
        "wires": [
            [
                "aa6e81123ef4575d"
            ]
        ]
    },
    {
        "id": "9ce39f4bd52c4271",
        "type": "function",
        "z": "71f537202ea9cf55",
        "name": "screw_back",
        "func": "var val = 0;\nif (msg.payload.screw_down_run==1){\n    val += 1;\n}\nif (msg.payload.screw_down_clockwise==1){\n    val += 2;\n}\nif (msg.payload.screw_down_pause == 1) {\n    val += 4;\n}\nif (msg.payload.screw_down_reset == 1) {\n    val += 8;\n}\nmsg.payload = val;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 620,
        "wires": [
            [
                "3560840ec135c030"
            ]
        ]
    },
    {
        "id": "711fc017dc9da2b2",
        "type": "inject",
        "z": "71f537202ea9cf55",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "4",
        "payloadType": "num",
        "x": 1190,
        "y": 800,
        "wires": [
            [
                "aa6e81123ef4575d"
            ]
        ]
    },
    {
        "id": "3560840ec135c030",
        "type": "rbe",
        "z": "71f537202ea9cf55",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1250,
        "y": 620,
        "wires": [
            [
                "aa6e81123ef4575d"
            ]
        ]
    },
    {
        "id": "da8dd0d0db038b93",
        "type": "modbus-write",
        "z": "71f537202ea9cf55",
        "name": "screw-back-w",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "MHoldingRegisters",
        "adr": "5",
        "quantity": "1",
        "server": "6f8d38c417897cab",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 620,
        "y": 100,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "3e07078bb2ec427d",
        "type": "modbus-write",
        "z": "71f537202ea9cf55",
        "name": "screw-front-w",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "MHoldingRegisters",
        "adr": "17",
        "quantity": "1",
        "server": "6f8d38c417897cab",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 600,
        "y": 380,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "8d445ec7c975108d",
        "type": "status",
        "z": "71f537202ea9cf55",
        "name": "",
        "scope": [
            "40bb5e4c42cb7d30"
        ],
        "x": 170,
        "y": 580,
        "wires": [
            [
                "bdf62724a5672db0"
            ]
        ]
    },
    {
        "id": "4dc617dbe7df2674",
        "type": "status",
        "z": "71f537202ea9cf55",
        "name": "",
        "scope": [
            "8d4d4b53cf1b63e2"
        ],
        "x": 150,
        "y": 640,
        "wires": [
            [
                "553bc77afa5a1079"
            ]
        ]
    },
    {
        "id": "1a0a7423ea788726",
        "type": "file",
        "z": "71f537202ea9cf55",
        "name": "",
        "filename": "c:\\tmp\\back.log",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 740,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "bdf62724a5672db0",
        "type": "rbe",
        "z": "71f537202ea9cf55",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "status.text",
        "topi": "topic",
        "x": 390,
        "y": 580,
        "wires": [
            [
                "b7f739ccd1ffcd15"
            ]
        ]
    },
    {
        "id": "b7f739ccd1ffcd15",
        "type": "function",
        "z": "71f537202ea9cf55",
        "name": "函数 20",
        "func": "var txt = msg.status.text;\nvar date = (new Date()).toISOString();\nmsg.payload = date + \" : \" + txt;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 580,
        "wires": [
            [
                "1a0a7423ea788726"
            ]
        ]
    },
    {
        "id": "647d8c77d301f6a8",
        "type": "file",
        "z": "71f537202ea9cf55",
        "name": "",
        "filename": "c:\\tmp\\front.log",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 740,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "553bc77afa5a1079",
        "type": "rbe",
        "z": "71f537202ea9cf55",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "status.text",
        "topi": "topic",
        "x": 390,
        "y": 640,
        "wires": [
            [
                "e8065de45cfa0815"
            ]
        ]
    },
    {
        "id": "e8065de45cfa0815",
        "type": "function",
        "z": "71f537202ea9cf55",
        "name": "函数 21",
        "func": "var txt = msg.status.text;\nvar date = (new Date()).toISOString();\nmsg.payload = date + \" : \" + txt;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 640,
        "wires": [
            [
                "647d8c77d301f6a8"
            ]
        ]
    },
    {
        "id": "c2215fbee5d7646e",
        "type": "function",
        "z": "71f537202ea9cf55",
        "name": "故障检测",
        "func": "\n\nvar error = msg.payload[0];\nvar result = msg.payload[1];\nif (result == 1 && error > 0) {\n    result = 3;\n}\n\nmsg.payload = [result]\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 380,
        "wires": [
            [
                "3e07078bb2ec427d"
            ]
        ]
    },
    {
        "id": "e1ce61e1bc0425b5",
        "type": "function",
        "z": "71f537202ea9cf55",
        "name": "故障检测",
        "func": "var error = msg.payload[0];\nvar result = msg.payload[1];\nif (result == 1 && error > 0) {\n    result = 3;\n}\n\nmsg.payload = [result]\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 100,
        "wires": [
            [
                "da8dd0d0db038b93"
            ]
        ]
    },
    {
        "id": "8c0135732e0ed9b9",
        "type": "change",
        "z": "71f537202ea9cf55",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[1]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 395,
        "y": 340,
        "wires": [
            [
                "ffd12dc77501f486"
            ]
        ],
        "l": false
    },
    {
        "id": "ffd12dc77501f486",
        "type": "rbe",
        "z": "71f537202ea9cf55",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 455,
        "y": 340,
        "wires": [
            [
                "a900078fe5ad1eac"
            ]
        ],
        "l": false
    },
    {
        "id": "20e1855f7fac6cee",
        "type": "function",
        "z": "71f537202ea9cf55",
        "name": "扭力数组",
        "func": "var torques = global.get(\"front_torque\");\nvar IO = global.get(\"IO_70\");\ntorques.push(IO.AO.screw_front_torque);\ntorques.shift();\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "a900078fe5ad1eac",
        "type": "switch",
        "z": "71f537202ea9cf55",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 505,
        "y": 340,
        "wires": [
            [
                "20e1855f7fac6cee"
            ]
        ],
        "l": false
    },
    {
        "id": "53b18cf363b9bdfc",
        "type": "change",
        "z": "71f537202ea9cf55",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[1]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 415,
        "y": 140,
        "wires": [
            [
                "7d2274a9925015b8"
            ]
        ],
        "l": false
    },
    {
        "id": "7d2274a9925015b8",
        "type": "rbe",
        "z": "71f537202ea9cf55",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 475,
        "y": 140,
        "wires": [
            [
                "aafb606891a6a420"
            ]
        ],
        "l": false
    },
    {
        "id": "fb5620700b1981ea",
        "type": "function",
        "z": "71f537202ea9cf55",
        "name": "扭力数组",
        "func": "var torques = global.get(\"back_torque\");\nvar IO = global.get(\"IO_70\");\ntorques.push(IO.AO.screw_back_torque);\ntorques.shift();\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "aafb606891a6a420",
        "type": "switch",
        "z": "71f537202ea9cf55",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 525,
        "y": 140,
        "wires": [
            [
                "fb5620700b1981ea"
            ]
        ],
        "l": false
    },
    {
        "id": "1acc8dbee09d3a3d",
        "type": "modbus-read",
        "z": "20ecc5cb793b2ee6",
        "name": "运行螺丝刀-上",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "23",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "6f8d38c417897cab",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 530,
        "y": 60,
        "wires": [
            [
                "328a0480c1e91dc5"
            ],
            []
        ]
    },
    {
        "id": "328a0480c1e91dc5",
        "type": "rbe",
        "z": "20ecc5cb793b2ee6",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload[0]",
        "topi": "topic",
        "x": 710,
        "y": 60,
        "wires": [
            [
                "7593c411e9e110b0"
            ]
        ]
    },
    {
        "id": "7593c411e9e110b0",
        "type": "change",
        "z": "20ecc5cb793b2ee6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "IO_70.AI.screw_up_run",
                "pt": "global",
                "to": "payload[0]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 940,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "8e3d2c2be7237f08",
        "type": "modbus-read",
        "z": "20ecc5cb793b2ee6",
        "name": "运行螺丝刀-下",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "27",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "6f8d38c417897cab",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 530,
        "y": 120,
        "wires": [
            [
                "000aada5386288d8"
            ],
            []
        ]
    },
    {
        "id": "000aada5386288d8",
        "type": "rbe",
        "z": "20ecc5cb793b2ee6",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload[0]",
        "topi": "topic",
        "x": 710,
        "y": 120,
        "wires": [
            [
                "651de794b90e7309"
            ]
        ]
    },
    {
        "id": "651de794b90e7309",
        "type": "change",
        "z": "20ecc5cb793b2ee6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "IO_70.AI.screw_down_run",
                "pt": "global",
                "to": "payload[0]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 950,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "c92c3030a8b66da1",
        "type": "modbus-read",
        "z": "20ecc5cb793b2ee6",
        "name": "复位螺丝刀-上",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "HoldingRegister",
        "adr": "22",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "6f8d38c417897cab",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 530,
        "y": 180,
        "wires": [
            [
                "705805d726349233"
            ],
            []
        ]
    },
    {
        "id": "705805d726349233",
        "type": "rbe",
        "z": "20ecc5cb793b2ee6",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload[0]",
        "topi": "topic",
        "x": 710,
        "y": 180,
        "wires": [
            [
                "c6638bf24edd0e7d"
            ]
        ]
    },
    {
        "id": "c6638bf24edd0e7d",
        "type": "change",
        "z": "20ecc5cb793b2ee6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "IO_70.AI.screw_up_reset",
                "pt": "global",
                "to": "payload[0]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 950,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "09a7fbb2dab275b7",
        "type": "modbus-read",
        "z": "20ecc5cb793b2ee6",
        "name": "复位螺丝刀-下",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "HoldingRegister",
        "adr": "26",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "6f8d38c417897cab",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 530,
        "y": 240,
        "wires": [
            [
                "6d724b3d526b1261"
            ],
            []
        ]
    },
    {
        "id": "6d724b3d526b1261",
        "type": "rbe",
        "z": "20ecc5cb793b2ee6",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload[0]",
        "topi": "topic",
        "x": 710,
        "y": 240,
        "wires": [
            [
                "8f8bbb46edbe8661"
            ]
        ]
    },
    {
        "id": "8f8bbb46edbe8661",
        "type": "change",
        "z": "20ecc5cb793b2ee6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "IO_70.AI.screw_down_reset",
                "pt": "global",
                "to": "payload[0]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 960,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "6438a2b608a115ee",
        "type": "inject",
        "z": "20ecc5cb793b2ee6",
        "name": "OP70数据初始化",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 20,
        "wires": [
            [
                "9c22b32ef6374ba0"
            ]
        ]
    },
    {
        "id": "1897a224540a3006",
        "type": "function",
        "z": "20ecc5cb793b2ee6",
        "name": "IO初始化",
        "func": "var IO_70 = {\n    DO:{},\n    DI:{\nemergency:0,\nstart:0,\nstop:0,\nmanual:0,\nauto:0,\nR_zhendong:0,\nR_zhendong_shuchu:0,\nR_baitai_jiajin:0,\nR_baitai_songkai:0,\nL_zhendong:0,\nL_zhendong_shuchu:0,\nL_jiazhua_jiajin:0,\nL_jiazhua_songkai:0,\nL_baitai_jiajin:0,\nL_baitai_songkai:0,\nshang_jiazhua_jiajin:0,\nshang_jiazhua_songkai:0,\nshang_tuigan_shenzhan:0,\nshang_tuigan_shousuo:0,\nshang_youliao:0,\nxia_jiazhua_jiajin:0,\nxia_jiazhua_songkai:0,\nxia_tuigan_shenzhan:0,\nxia_tuigan_shousuo:0,\nxia_youliao:0,\nL_tuigan_shenzhan:0,\nL_tuigan_shousuo:0,\nL_youliao:0,\nR_jiazhua_jiajin:0,\nR_jiazhua_songkai:0,\nR_tuigan_shenzhan:0,\nR_tuigan_shousuo:0,\nR_youliao:0,\nzhong_jiazhua_jiajin:0,\nzhong_jiazhua_songkai:0,\nzhong_youliao:0,\n    },\n    AI:{//node-red收到来自控制器的逻辑变量\n        Home : 0,\n        error : 0,\n        status : 0,\n        screw_up_reset : 0,\n        screw_up_run : 0,\n        screw_up_clockwise : 0,\n        screw_up_pause : 0,\n        screw_down_reset : 0,\n        screw_down_run : 0,\n        screw_down_clockwise : 0,\n        screw_down_pause : 0,\n        screw_up_mode : 0,\n        screw_down_mode : 0,\n\n    },\n    AO:{//node-red要发送下去的逻辑变量\n        work_object : 0,\n        LCS_command : 0,\n        screw_status : 0,\n        LCS_speed : 0,\n\n        index_screw_front : 0,\n        index_screw_side : 0,\n    },    \n    AI_LCS:{\n        request: 0,\n        speed: 0,\n    },\n    AO_LCS:{\n        response: 0,\n    },  \n};\n\nglobal.set(\"IO_70\",IO_70);\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 20,
        "wires": [
            [
                "e0fd6c2d76fabf9f"
            ]
        ]
    },
    {
        "id": "e0fd6c2d76fabf9f",
        "type": "function",
        "z": "20ecc5cb793b2ee6",
        "name": "物料-视觉-工单 初始化",
        "func": "\nvar ErrorMap_70 = [\n    \"视觉通信故障\",\n    \"螺丝刀通信故障\",\n    \"伺服1故障\",\n    \"伺服2故障\",\n    \"伺服3故障\",\n    \"伺服4故障\",   \n    \"伺服5故障\",\n    \"伺服6故障\",\n    \"伺服7故障\",\n    ];\n    \nglobal.set(\"StationTask_70\",{\n    BillCode: \"-\",\n    ProductCode: \"-\",\n    ProductName:\"-\",\n    ProcessDetail: [{\n        ProcessCode: \"OP70\",\n        ProcessName: \"-\",\n        EquipmentCode: \"OP70\",\n        ProgramNumer: 1,\n        Num: 0,\n        completed: 0,\n        MaterialDetails: [\n            {\n                MaterialCode: \"M5x20\",\n                MaterialName: \"M5x20内六角螺丝\",\n                Num: 0,\n                consumption: 15,\n                remain: 0,\n                used: 0,\n            }\n      \n        ]\n    }]\n});\n\nconst t = (new Date()).toISOString();\nglobal.set(\"Request_70\",{\n    StartTime:t,\n    EndTime:t,\n    RequestID:\"-\",\n    RequestID_:\"-\",\n    barcode: \"\",\n});\n\nglobal.set(\"ErrorMap_70\", ErrorMap_70);\nglobal.set(\"LCS\", \"http://192.168.110.200:9006/openApiUbiquitous/\");\nglobal.set(\"front_torque\", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\nglobal.set(\"back_torque\", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 20,
        "wires": [
            []
        ]
    },
    {
        "id": "9c22b32ef6374ba0",
        "type": "function",
        "z": "20ecc5cb793b2ee6",
        "name": "定义变量名",
        "func": "global.set(\"ns\",{\n    LCS_start:1,\n    LCS_stop:2,\n    LCS_pause:3,\n    LCS_resume:4,\n    LCS_run:5,\n\n\n});\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 20,
        "wires": [
            [
                "1897a224540a3006"
            ]
        ]
    },
    {
        "id": "95af2d98241dd940",
        "type": "modbus-server",
        "z": "20ecc5cb793b2ee6",
        "name": "OP70",
        "logEnabled": false,
        "hostname": "0.0.0.0",
        "serverPort": "10070",
        "responseDelay": 100,
        "delayUnit": "ms",
        "coilsBufferSize": 10000,
        "holdingBufferSize": 10000,
        "inputBufferSize": 10000,
        "discreteBufferSize": 10000,
        "showErrors": false,
        "x": 150,
        "y": 180,
        "wires": [
            [],
            [],
            [],
            [],
            []
        ]
    },
    {
        "id": "5ee1d30aa6411ac8",
        "type": "modbus-read",
        "z": "20ecc5cb793b2ee6",
        "d": true,
        "name": "设备端读取DI",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "HoldingRegister",
        "adr": "50",
        "quantity": "36",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "6f8d38c417897cab",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 530,
        "y": 320,
        "wires": [
            [
                "1a93879bf9c4a070",
                "6fee81982cda4096"
            ],
            []
        ]
    },
    {
        "id": "1a93879bf9c4a070",
        "type": "function",
        "z": "20ecc5cb793b2ee6",
        "name": "写入本地内存",
        "func": "var DI_Names = [\n    \"emergency\",\n    \"start\",\n    \"stop\",\n    \"manual\",\n    \"auto\",\n    \"R_zhendong\",\n    \"R_zhendong_shuchu\",\n    \"R_baitai_jiajin\",\n    \"R_baitai_songkai\",\n    \"L_zhendong\",\n    \"L_zhendong_shuchu\",\n    \"L_jiazhua_jiajin\",\n    \"L_jiazhua_songkai\",\n    \"L_baitai_jiajin\",\n    \"L_baitai_songkai\",\n    \"shang_jiazhua_jiajin\",\n    \"shang_jiazhua_songkai\",\n    \"shang_tuigan_shenzhan\",\n    \"shang_tuigan_shousuo\",\n    \"shang_youliao\",\n    \"xia_jiazhua_jiajin\",\n    \"xia_jiazhua_songkai\",\n    \"xia_tuigan_shenzhan\",\n    \"xia_tuigan_shousuo\",\n    \"xia_youliao\",\n    \"L_tuigan_shenzhan\",\n    \"L_tuigan_shousuo\",\n    \"L_youliao\",\n    \"R_jiazhua_jiajin\",\n    \"R_jiazhua_songkai\",\n    \"R_tuigan_shenzhan\",\n    \"R_tuigan_shousuo\",\n    \"R_youliao\",\n    \"zhong_jiazhua_jiajin\",\n    \"zhong_jiazhua_songkai\",\n    \"zhong_youliao\",\n];\n\nvar IO = global.get(\"IO_70\");\nconst data = msg.payload;\nfor (var i = 0; i < DI_Names.length; i++) {\n    if (DI_Names[i] != '-') {\n        IO.DI[DI_Names[i]] = data[i];\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "6fee81982cda4096",
        "type": "modbus-write",
        "z": "20ecc5cb793b2ee6",
        "name": "DI信号同步",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "MHoldingRegisters",
        "adr": "50",
        "quantity": "36",
        "server": "f45c8577844ced46",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 770,
        "y": 360,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "b4526aec31e1ec04",
        "type": "modbus-read",
        "z": "20ecc5cb793b2ee6",
        "name": "LCS",
        "topic": "1",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "HoldingRegister",
        "adr": "4070",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "f45c8577844ced46",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 490,
        "y": 540,
        "wires": [
            [
                "72212c896ab92a16"
            ],
            []
        ]
    },
    {
        "id": "f8c0e00c1337aab3",
        "type": "modbus-read",
        "z": "20ecc5cb793b2ee6",
        "name": "设备端读取status",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "HoldingRegister",
        "adr": "21",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "6f8d38c417897cab",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 540,
        "y": 400,
        "wires": [
            [
                "69635627929e33bc"
            ],
            []
        ]
    },
    {
        "id": "69635627929e33bc",
        "type": "change",
        "z": "20ecc5cb793b2ee6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "IO_70.AI.status",
                "pt": "global",
                "to": "payload[0]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "72212c896ab92a16",
        "type": "modbus-write",
        "z": "20ecc5cb793b2ee6",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "MHoldingRegisters",
        "adr": "4",
        "quantity": "1",
        "server": "6f8d38c417897cab",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 760,
        "y": 560,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "5216724c59c530e4",
        "type": "inject",
        "z": "20ecc5cb793b2ee6",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "-",
        "payloadType": "str",
        "x": 410,
        "y": 620,
        "wires": [
            [
                "d4284e2180130236"
            ]
        ]
    },
    {
        "id": "d4284e2180130236",
        "type": "change",
        "z": "20ecc5cb793b2ee6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Request_70.RequestID",
                "pt": "global",
                "to": "-",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "def7b74dd73c77b9",
        "type": "http in",
        "z": "20ecc5cb793b2ee6",
        "name": "",
        "url": "/70/data",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 230,
        "y": 720,
        "wires": [
            [
                "9bc3906f868c0782"
            ]
        ]
    },
    {
        "id": "1e57f8f96e834f72",
        "type": "http response",
        "z": "20ecc5cb793b2ee6",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 690,
        "y": 720,
        "wires": []
    },
    {
        "id": "9bc3906f868c0782",
        "type": "function",
        "z": "20ecc5cb793b2ee6",
        "name": "function 30",
        "func": "const p = msg.payload.key;\nvar arr = p.split(\".\");\nconst obj = global.get(arr[0]);\neval(\"var \"+arr[0]+\" = obj;\");\nconsole.debug(1);\neval(\"msg.payload = \"+p+\";\");\nconsole.debug(2);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 720,
        "wires": [
            [
                "1e57f8f96e834f72"
            ]
        ]
    },
    {
        "id": "36a89f6b5c0bc662",
        "type": "http in",
        "z": "20ecc5cb793b2ee6",
        "name": "",
        "url": "/70/RequestID",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 610,
        "y": 620,
        "wires": [
            [
                "45e29054f0b73dce"
            ]
        ]
    },
    {
        "id": "45e29054f0b73dce",
        "type": "change",
        "z": "20ecc5cb793b2ee6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "-",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 735,
        "y": 620,
        "wires": [
            [
                "d4284e2180130236",
                "b61d1fa5ad54fbbb"
            ]
        ],
        "l": false
    },
    {
        "id": "b61d1fa5ad54fbbb",
        "type": "http response",
        "z": "20ecc5cb793b2ee6",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 850,
        "y": 620,
        "wires": []
    },
    {
        "id": "7bd5064aa60abc6c",
        "type": "http in",
        "z": "b60c316ff0a6b6c0",
        "name": "通用读多个接口",
        "url": "/70/ReadValue",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 500,
        "wires": [
            [
                "abf419e4087513ea",
                "46cf809cb9daa3a5"
            ]
        ]
    },
    {
        "id": "23ed647795da08ac",
        "type": "modbus-flex-getter",
        "z": "b60c316ff0a6b6c0",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "f45c8577844ced46",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 830,
        "y": 500,
        "wires": [
            [
                "4356d9605954ea3e"
            ],
            [
                "53462c6c5f5c6254"
            ]
        ]
    },
    {
        "id": "abf419e4087513ea",
        "type": "change",
        "z": "b60c316ff0a6b6c0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "ReadValue_70",
                "pt": "global",
                "to": "[]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 500,
        "wires": [
            [
                "6d2816ce6f58614a"
            ]
        ]
    },
    {
        "id": "6d2816ce6f58614a",
        "type": "function",
        "z": "b60c316ff0a6b6c0",
        "name": "modbus 报文拆分",
        "func": "var arr = msg.payload;\nfor(var i=0;i<arr.length;i++){\n    var t = arr[i];\n    node.send({payload:{fc:3, address: parseInt(t.Address), quantity:1},temp:parseInt(t.Address)});\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 500,
        "wires": [
            [
                "23ed647795da08ac"
            ]
        ]
    },
    {
        "id": "4356d9605954ea3e",
        "type": "function",
        "z": "b60c316ff0a6b6c0",
        "name": "函数 4",
        "func": "var arr = global.get(\"ReadValue_70\");\narr.push({\n    Address: msg.modbusRequest.address,\n    Value: msg.payload[0],\n    ValueType: \"int\"\n});\nconsole.debug(arr);\nglobal.set(\"ReadValue_70\",arr);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "bf64874f8de1d1f2",
        "type": "change",
        "z": "b60c316ff0a6b6c0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload.Code",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "payload.Msg",
                "pt": "msg",
                "to": "操作成功",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.Data",
                "pt": "msg",
                "to": "ReadValue_70",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 560,
        "wires": [
            [
                "8c67c6b28b652f9f"
            ]
        ]
    },
    {
        "id": "8c67c6b28b652f9f",
        "type": "http response",
        "z": "b60c316ff0a6b6c0",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 810,
        "y": 560,
        "wires": []
    },
    {
        "id": "46cf809cb9daa3a5",
        "type": "delay",
        "z": "b60c316ff0a6b6c0",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 300,
        "y": 560,
        "wires": [
            [
                "e55f366c9e5b8dd4"
            ]
        ]
    },
    {
        "id": "53462c6c5f5c6254",
        "type": "debug",
        "z": "b60c316ff0a6b6c0",
        "name": "调试 15",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1020,
        "y": 560,
        "wires": []
    },
    {
        "id": "e55f366c9e5b8dd4",
        "type": "change",
        "z": "b60c316ff0a6b6c0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 560,
        "wires": [
            [
                "bf64874f8de1d1f2"
            ]
        ]
    },
    {
        "id": "fb27549faaf4df38",
        "type": "http response",
        "z": "b60c316ff0a6b6c0",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1090,
        "y": 220,
        "wires": []
    },
    {
        "id": "4a2521e0cea6f181",
        "type": "http in",
        "z": "b60c316ff0a6b6c0",
        "name": "工位任务接收",
        "url": "/70/ReceiveStationTask",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 240,
        "wires": [
            [
                "249c701a144c7661"
            ]
        ]
    },
    {
        "id": "6a4c6646110d08c5",
        "type": "http in",
        "z": "b60c316ff0a6b6c0",
        "name": "泛在通用写多个接口",
        "url": "/70/WriteValue",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 440,
        "wires": [
            [
                "728d158acf67d988"
            ]
        ]
    },
    {
        "id": "728d158acf67d988",
        "type": "function",
        "z": "b60c316ff0a6b6c0",
        "name": "modbus 报文拆分",
        "func": "var arr = msg.payload;\nfor(var i=0;i<arr.length;i++){\n    var t = arr[i];\n    msg.payload = { value: parseInt(t.Value), 'fc': 6, 'unitid': 1, 'address': parseInt(t.Address), 'quantity': 1 } \n    node.send(msg);\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 440,
        "wires": [
            [
                "f6cce74e561807da"
            ]
        ]
    },
    {
        "id": "f6cce74e561807da",
        "type": "modbus-flex-write",
        "z": "b60c316ff0a6b6c0",
        "name": "批量修改modbus值",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "server": "f45c8577844ced46",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 830,
        "y": 440,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "4b08f8c03e37af75",
        "type": "change",
        "z": "b60c316ff0a6b6c0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "StationTask_70",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 240,
        "wires": [
            [
                "5422fe3beb921c6c"
            ]
        ]
    },
    {
        "id": "5422fe3beb921c6c",
        "type": "function",
        "z": "b60c316ff0a6b6c0",
        "name": "反馈",
        "func": "msg.payload = {\n    Code: 0,\n    Msg:\"操作成功\"\n};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 240,
        "wires": [
            [
                "fb27549faaf4df38"
            ]
        ]
    },
    {
        "id": "5f2d50fe11da5433",
        "type": "http in",
        "z": "b60c316ff0a6b6c0",
        "name": "ReceiveEndSignal",
        "url": "/70/ReceiveEndSignal",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 120,
        "wires": [
            [
                "aa38984a734707e1"
            ]
        ]
    },
    {
        "id": "13f19cbb678fecfc",
        "type": "http response",
        "z": "b60c316ff0a6b6c0",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 750,
        "y": 140,
        "wires": []
    },
    {
        "id": "a87a85b7794a1a6e",
        "type": "function",
        "z": "b60c316ff0a6b6c0",
        "name": "反馈",
        "func": "msg.payload = {\n    Code: 0,\n    Msg: \"操作成功\"\n};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 120,
        "wires": [
            [
                "13f19cbb678fecfc"
            ]
        ]
    },
    {
        "id": "aa38984a734707e1",
        "type": "switch",
        "z": "b60c316ff0a6b6c0",
        "name": "",
        "property": "payload.BillCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "StationTask_70.BillCode",
                "vt": "global"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 370,
        "y": 120,
        "wires": [
            [
                "a87a85b7794a1a6e",
                "168aa29d0a82a483"
            ],
            [
                "649e5fadeb818fa6"
            ]
        ]
    },
    {
        "id": "649e5fadeb818fa6",
        "type": "function",
        "z": "b60c316ff0a6b6c0",
        "name": "反馈",
        "func": "msg.payload = {\n    Code: 1,\n    Msg: \"操作失败,当前设备执行的工单和下发的结束工单不一致\"\n};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 160,
        "wires": [
            [
                "13f19cbb678fecfc"
            ]
        ]
    },
    {
        "id": "1d0ee5f6d13974f7",
        "type": "http response",
        "z": "b60c316ff0a6b6c0",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 770,
        "y": 280,
        "wires": []
    },
    {
        "id": "b24efc27b16de1e8",
        "type": "http in",
        "z": "b60c316ff0a6b6c0",
        "name": "工位状态-轮询",
        "url": "/70/GetStationState",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 280,
        "wires": [
            [
                "a02d16b74ebe1b1d"
            ]
        ]
    },
    {
        "id": "a02d16b74ebe1b1d",
        "type": "function",
        "z": "b60c316ff0a6b6c0",
        "name": "反馈",
        "func": "var IO = global.get(\"IO_70\");\nmsg.payload = {\n\t\"Code\": 0,\n\t\"Msg\": \"操作成功\",\n\t\"Data\": [{\n\t\t\"StationCode\": \"OP_70\",\n\t\t\"StationName\": \"丝堵拧紧\",\n\t\t\"Status\": IO.AI.status\n\t}]\n};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 280,
        "wires": [
            [
                "1d0ee5f6d13974f7"
            ]
        ]
    },
    {
        "id": "a28f18a533722341",
        "type": "http in",
        "z": "b60c316ff0a6b6c0",
        "name": "动作执行",
        "url": "/70/DoAction",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 340,
        "wires": [
            [
                "1a57418033fe0137",
                "a6b15b16dbe29a69"
            ]
        ]
    },
    {
        "id": "cd601a9f82909663",
        "type": "function",
        "z": "b60c316ff0a6b6c0",
        "name": "modbus 报文拆分",
        "func": "var t = msg.payload;\nif(t.Value==0 && t.Address==4070){\n    t.RequestID = \"-\";\n}\nvar Request = global.get(\"Request_70\")\nRequest.RequestID = t.RequestID;\nvar t2 = (new Date()).toISOString();\nRequest.StartTime = t2;\nRequest.EndTime = \"\";\nglobal.set(\"front_torque\", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\nglobal.set(\"back_torque\", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\n\nmsg.payload = { value: parseInt(t.Value), 'fc': 6, 'unitid': 1, 'address': parseInt(t.Address), 'quantity': 1 } \nnode.send(msg);",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 360,
        "wires": [
            [
                "f6cce74e561807da"
            ]
        ]
    },
    {
        "id": "b3b717bf872f4930",
        "type": "switch",
        "z": "b60c316ff0a6b6c0",
        "name": "",
        "property": "Request_70.RequestID",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "-",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 315,
        "y": 340,
        "wires": [
            [
                "cd601a9f82909663",
                "67c0b81032f7cf6e",
                "619b8d05efef8a97"
            ],
            [
                "d16be92a0471a0e4"
            ]
        ],
        "l": false
    },
    {
        "id": "67c0b81032f7cf6e",
        "type": "function",
        "z": "b60c316ff0a6b6c0",
        "name": "反馈",
        "func": "msg.payload = {\n    Code: 0,\n    Msg: \"操作成功\"\n};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 320,
        "wires": [
            [
                "2c21729d8f477c36"
            ]
        ]
    },
    {
        "id": "2c21729d8f477c36",
        "type": "http response",
        "z": "b60c316ff0a6b6c0",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 610,
        "y": 320,
        "wires": []
    },
    {
        "id": "d16be92a0471a0e4",
        "type": "function",
        "z": "b60c316ff0a6b6c0",
        "name": "反馈",
        "func": "msg.payload = {\n    Code: 1,\n    Msg: \"上一个动作还未完成\"\n};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 400,
        "wires": [
            [
                "2c21729d8f477c36"
            ]
        ]
    },
    {
        "id": "249c701a144c7661",
        "type": "function",
        "z": "b60c316ff0a6b6c0",
        "name": "格式解析",
        "func": "msg.error = 0;\n\nvar task = global.get(\"StationTask_70\");\nif(task.BillCode!='-'){\n    msg.error = 1;\n    msg.errorMsg = \"previese task is on going\";\n    return msg;\n}\n\nconst data = msg.payload;\nif((typeof(data)!='object')){\n    msg.error = 2;\n    msg.errorMsg = \"format wrong\";\n    return msg;\n}\n\nif (!('BillCode' in data)){\n    msg.error = 3;\n    msg.errorMsg = \"no BillCode\";\n    return msg;\n}\nif (!('ProductCode' in data)){\n    msg.error = 4;\n    msg.errorMsg = \"no ProductCode\";\n    return msg;\n}\n\nif (!('ProcessDetail' in data)){\n    msg.error = 5;\n    msg.errorMsg = \"no ProcessDetail\";\n    return msg;\n}\n\nif(data.ProcessDetail.length==1){\n    const data2 = data.ProcessDetail[0];\n    if (!('EquipmentCode' in data2)){\n        msg.error = 6;\n        msg.errorMsg = \"no EquipmentCode\";\n        return msg;\n    }\n    if(data2.EquipmentCode!='OP70'){\n        msg.error = 7;\n        msg.errorMsg = \"no OP70\";\n        return msg;\n    }\n    if (!('Num' in data2)){\n        msg.error = 8;\n        msg.errorMsg = \"no Num\";\n        return msg;\n    }\n    data2.done = 0\n    var arr_isMaterialIn = [1,1,1,1,1];\n    const _arr= [\n        \"M10-SD\"];\n    for(var i=0;i<data2.MaterialDetails.length;i++){\n        const data3 = data2.MaterialDetails[i];\n        if (!('MaterialCode' in data3)){\n            msg.error = 10;\n            msg.errorMsg = \"MaterialDetails is missing\";\n            return msg;\n        }\n        if (!('Num' in data3)){\n            msg.error = 11;\n            msg.errorMsg = \"Num is missing\";\n            return msg;\n        }   \n\n        const a = _arr.indexOf(data3.MaterialCode)\n        if(a == -1){\n            msg.error = 12;\n            msg.errorMsg = \"MaterialCode is wrong \"+data3.MaterialCode;\n            return msg;\n        }  \n        arr_isMaterialIn[a] = 0;\n    }\n    var __isMterialIn = 0;\n    eval(\"__isMterialIn = \"+arr_isMaterialIn.join(\"+\")+\";\");\n    if(__isMterialIn!=0){\n        msg.error = 14;\n        msg.errorMsg = __isMterialIn+\" materials are missing \";\n        return msg;\n    }\n}\nelse{\n    msg.error = 13;\n    msg.errorMsg = \"ProcessDetail.length should be 1\";\n    return msg;\n}\n\n\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 240,
        "wires": [
            [
                "7450e7532a9133c3",
                "1426ab1e430853ca"
            ]
        ]
    },
    {
        "id": "7450e7532a9133c3",
        "type": "switch",
        "z": "b60c316ff0a6b6c0",
        "name": "",
        "property": "error",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 450,
        "y": 240,
        "wires": [
            [
                "4b08f8c03e37af75"
            ],
            [
                "6b55599cd966446c"
            ]
        ]
    },
    {
        "id": "6b55599cd966446c",
        "type": "function",
        "z": "b60c316ff0a6b6c0",
        "name": "反馈",
        "func": "msg.payload = {\n    Code: 1,\n    Msg:\"失败\"+msg.errorMsg\n};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 200,
        "wires": [
            [
                "fb27549faaf4df38"
            ]
        ]
    },
    {
        "id": "1426ab1e430853ca",
        "type": "debug",
        "z": "b60c316ff0a6b6c0",
        "name": "debug 31",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 320,
        "y": 180,
        "wires": []
    },
    {
        "id": "168aa29d0a82a483",
        "type": "change",
        "z": "b60c316ff0a6b6c0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "StationTask_70.BillCode",
                "pt": "global",
                "to": "-",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "619b8d05efef8a97",
        "type": "delay",
        "z": "b60c316ff0a6b6c0",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 675,
        "y": 360,
        "wires": [
            [
                "5388d30445411e50"
            ]
        ],
        "l": false
    },
    {
        "id": "5388d30445411e50",
        "type": "function",
        "z": "b60c316ff0a6b6c0",
        "name": "置位",
        "func": "msg.payload = { value: 0, 'fc': 6, 'unitid': 1, 'address': 4070, 'quantity': 1 }\nnode.send(msg);",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 360,
        "wires": [
            [
                "f6cce74e561807da"
            ]
        ]
    },
    {
        "id": "fd3afd4f2b7d8287",
        "type": "inject",
        "z": "b60c316ff0a6b6c0",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 640,
        "wires": [
            [
                "6f9732e0ad0d5681"
            ]
        ]
    },
    {
        "id": "6f9732e0ad0d5681",
        "type": "trigger",
        "z": "b60c316ff0a6b6c0",
        "name": "",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "-250",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 640,
        "wires": [
            [
                "ead9fc87ea3d0f27",
                "466602296230bfe9"
            ]
        ]
    },
    {
        "id": "dea945d4f22dc2ce",
        "type": "rbe",
        "z": "b60c316ff0a6b6c0",
        "name": "",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 390,
        "y": 720,
        "wires": [
            [
                "3217afeb1df75b6b",
                "65665a20f3e1974d"
            ]
        ]
    },
    {
        "id": "ead9fc87ea3d0f27",
        "type": "change",
        "z": "b60c316ff0a6b6c0",
        "name": "状态变化监听",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "IO_70.AI.status",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 220,
        "y": 720,
        "wires": [
            [
                "dea945d4f22dc2ce"
            ]
        ]
    },
    {
        "id": "3217afeb1df75b6b",
        "type": "switch",
        "z": "b60c316ff0a6b6c0",
        "name": "",
        "property": "IO_70.AI.status",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "4",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 510,
        "y": 720,
        "wires": [
            [
                "d72a99f95f1edb40"
            ]
        ]
    },
    {
        "id": "34845c9d97eae208",
        "type": "rbe",
        "z": "b60c316ff0a6b6c0",
        "name": "",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 390,
        "y": 800,
        "wires": [
            [
                "c125392c542e73ab"
            ]
        ]
    },
    {
        "id": "466602296230bfe9",
        "type": "change",
        "z": "b60c316ff0a6b6c0",
        "name": "故障信号监听",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "IO_70.AI.error",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 220,
        "y": 800,
        "wires": [
            [
                "34845c9d97eae208"
            ]
        ]
    },
    {
        "id": "c125392c542e73ab",
        "type": "switch",
        "z": "b60c316ff0a6b6c0",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 510,
        "y": 800,
        "wires": [
            [
                "1f79a6b42a7951c4"
            ]
        ]
    },
    {
        "id": "c5d0d032b5cdf62c",
        "type": "http request",
        "z": "b60c316ff0a6b6c0",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "other",
                "keyValue": "Accept",
                "valueType": "other",
                "valueValue": "application/json"
            }
        ],
        "x": 880,
        "y": 800,
        "wires": [
            [
                "8ca7421c5b46b4c2"
            ]
        ]
    },
    {
        "id": "8ca7421c5b46b4c2",
        "type": "debug",
        "z": "b60c316ff0a6b6c0",
        "name": "调试 17",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 800,
        "wires": []
    },
    {
        "id": "1f79a6b42a7951c4",
        "type": "function",
        "z": "b60c316ff0a6b6c0",
        "name": "function 34",
        "func": "var ErrorMap_60 = global.get(\"ErrorMap_10\");\nmsg.payload ={\t\t\t\t\n\tEquipmentCode: \"OP10\",\t\t\t\n\tEquipmentName: \"泛在控制器\",\t\t\t\n\tStatus: 0,\n    WarnContent: ErrorMap_60[msg.payload]\t\t\n};\nmsg.url = global.get(\"LCS\")+\"receiveUbiquitousWarn\";\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 800,
        "wires": [
            [
                "c5d0d032b5cdf62c"
            ]
        ]
    },
    {
        "id": "cd43772a1bfd0652",
        "type": "inject",
        "z": "b60c316ff0a6b6c0",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 550,
        "y": 620,
        "wires": [
            [
                "d72a99f95f1edb40"
            ]
        ]
    },
    {
        "id": "c5e61641d6e5b189",
        "type": "http request",
        "z": "b60c316ff0a6b6c0",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1060,
        "y": 720,
        "wires": [
            [
                "64f3bdecab1eb090",
                "366db6dd22a1471c"
            ]
        ]
    },
    {
        "id": "d72a99f95f1edb40",
        "type": "function",
        "z": "b60c316ff0a6b6c0",
        "name": "生产完成",
        "func": "const t = (new Date()).toISOString();\nvar Request = global.get(\"Request_70\");\nRequest.EndTime = t;\n\nmsg.payload = Request;\n\nmsg.url = global.get(\"LCS\") + \"actionCompletedSignal\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 720,
        "wires": [
            [
                "c5e61641d6e5b189"
            ]
        ]
    },
    {
        "id": "366db6dd22a1471c",
        "type": "change",
        "z": "b60c316ff0a6b6c0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Request_70.RequestID",
                "pt": "global",
                "to": "-",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "Request_70.RequestID_",
                "pt": "global",
                "to": "-",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1260,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "64f3bdecab1eb090",
        "type": "debug",
        "z": "b60c316ff0a6b6c0",
        "name": "调试 23",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1220,
        "y": 660,
        "wires": []
    },
    {
        "id": "1a57418033fe0137",
        "type": "switch",
        "z": "b60c316ff0a6b6c0",
        "name": "",
        "property": "IO_70.AI.status",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "22",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 225,
        "y": 340,
        "wires": [
            [
                "b3b717bf872f4930"
            ],
            [
                "f12d04b26351639b"
            ]
        ],
        "l": false
    },
    {
        "id": "f12d04b26351639b",
        "type": "function",
        "z": "b60c316ff0a6b6c0",
        "name": "反馈",
        "func": "const IO = global.get(\"IO_70\");\nmsg.payload = {\n    Code: 1,\n    Msg: \"当前状态无法执行动作:\"+IO.AI.status,\n};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 400,
        "wires": [
            [
                "2c21729d8f477c36"
            ]
        ]
    },
    {
        "id": "6e48f3f72ef4ceb6",
        "type": "file",
        "z": "b60c316ff0a6b6c0",
        "name": "",
        "filename": "c:\\tmp\\status.log",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 700,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "65665a20f3e1974d",
        "type": "function",
        "z": "b60c316ff0a6b6c0",
        "name": "函数 24",
        "func": "var txt = msg.status.text;\nvar date = (new Date()).toISOString();\nmsg.payload = date + \" : \" + txt;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 760,
        "wires": [
            [
                "6e48f3f72ef4ceb6"
            ]
        ]
    },
    {
        "id": "1f3ee82275b60d3a",
        "type": "file",
        "z": "b60c316ff0a6b6c0",
        "name": "",
        "filename": "C:/tmp/request.txt",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 150,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "a6b15b16dbe29a69",
        "type": "function",
        "z": "b60c316ff0a6b6c0",
        "name": "函数 26",
        "func": "var txt = msg.payload.Value + \",\" + msg.payload.RequestID;\nvar date = (new Date()).toISOString();\nmsg.payload = date + \" : \" + txt;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 25,
        "y": 400,
        "wires": [
            [
                "1f3ee82275b60d3a"
            ]
        ],
        "l": false
    }
]