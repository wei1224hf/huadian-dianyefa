- id: b60c316ff0a6b6c0
  type: tab
  label: scheduler-70
  disabled: false
  info: ''
  env: []
- id: 7bd5064aa60abc6c
  type: http in
  z: b60c316ff0a6b6c0
  name: 通用读多个接口
  url: /70/ReadValue
  method: post
  upload: false
  swaggerDoc: ''
  x: 120
  'y': 500
  wires:
    - - abf419e4087513ea
      - 46cf809cb9daa3a5
- id: 23ed647795da08ac
  type: modbus-flex-getter
  z: b60c316ff0a6b6c0
  name: ''
  showStatusActivities: false
  showErrors: false
  showWarnings: true
  logIOActivities: false
  server: f45c8577844ced46
  useIOFile: false
  ioFile: ''
  useIOForPayload: false
  emptyMsgOnFail: false
  keepMsgProperties: false
  delayOnStart: false
  startDelayTime: ''
  x: 830
  'y': 500
  wires:
    - - 4356d9605954ea3e
    - - 53462c6c5f5c6254
- id: abf419e4087513ea
  type: change
  z: b60c316ff0a6b6c0
  name: ''
  rules:
    - t: set
      p: ReadValue_70
      pt: global
      to: '[]'
      tot: jsonata
  action: ''
  property: ''
  from: ''
  to: ''
  reg: false
  x: 380
  'y': 500
  wires:
    - - 6d2816ce6f58614a
- id: 6d2816ce6f58614a
  type: function
  z: b60c316ff0a6b6c0
  name: modbus 报文拆分
  func: |-
    var arr = msg.payload;
    for(var i=0;i<arr.length;i++){
        var t = arr[i];
        node.send({payload:{fc:3, address: parseInt(t.Address), quantity:1},temp:parseInt(t.Address)});
    }
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 630
  'y': 500
  wires:
    - - 23ed647795da08ac
- id: 4356d9605954ea3e
  type: function
  z: b60c316ff0a6b6c0
  name: 函数 4
  func: |-
    var arr = global.get("ReadValue_70");
    arr.push({
        Address: msg.modbusRequest.address,
        Value: msg.payload[0],
        ValueType: "int"
    });
    console.debug(arr);
    global.set("ReadValue_70",arr);
    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 1010
  'y': 500
  wires:
    - []
- id: bf64874f8de1d1f2
  type: change
  z: b60c316ff0a6b6c0
  name: ''
  rules:
    - t: set
      p: payload.Code
      pt: msg
      to: '0'
      tot: num
    - t: set
      p: payload.Msg
      pt: msg
      to: 操作成功
      tot: str
    - t: set
      p: payload.Data
      pt: msg
      to: ReadValue_70
      tot: global
  action: ''
  property: ''
  from: ''
  to: ''
  reg: false
  x: 660
  'y': 560
  wires:
    - - 8c67c6b28b652f9f
- id: 8c67c6b28b652f9f
  type: http response
  z: b60c316ff0a6b6c0
  name: ''
  statusCode: ''
  headers: {}
  x: 810
  'y': 560
  wires: []
- id: 46cf809cb9daa3a5
  type: delay
  z: b60c316ff0a6b6c0
  name: ''
  pauseType: delay
  timeout: '1'
  timeoutUnits: seconds
  rate: '1'
  nbRateUnits: '1'
  rateUnits: second
  randomFirst: '1'
  randomLast: '5'
  randomUnits: seconds
  drop: false
  allowrate: false
  outputs: 1
  x: 300
  'y': 560
  wires:
    - - e55f366c9e5b8dd4
- id: 53462c6c5f5c6254
  type: debug
  z: b60c316ff0a6b6c0
  name: 调试 15
  active: true
  tosidebar: true
  console: false
  tostatus: false
  complete: 'false'
  statusVal: ''
  statusType: auto
  x: 1020
  'y': 560
  wires: []
- id: e55f366c9e5b8dd4
  type: change
  z: b60c316ff0a6b6c0
  name: ''
  rules:
    - t: set
      p: payload
      pt: msg
      to: '{}'
      tot: jsonata
  action: ''
  property: ''
  from: ''
  to: ''
  reg: false
  x: 470
  'y': 560
  wires:
    - - bf64874f8de1d1f2
- id: fb27549faaf4df38
  type: http response
  z: b60c316ff0a6b6c0
  name: ''
  statusCode: ''
  headers: {}
  x: 1090
  'y': 220
  wires: []
- id: 4a2521e0cea6f181
  type: http in
  z: b60c316ff0a6b6c0
  name: 工位任务接收
  url: /70/ReceiveStationTask
  method: post
  upload: false
  swaggerDoc: ''
  x: 110
  'y': 240
  wires:
    - - 249c701a144c7661
- id: 6a4c6646110d08c5
  type: http in
  z: b60c316ff0a6b6c0
  name: 泛在通用写多个接口
  url: /70/WriteValue
  method: post
  upload: false
  swaggerDoc: ''
  x: 130
  'y': 440
  wires:
    - - 728d158acf67d988
- id: 728d158acf67d988
  type: function
  z: b60c316ff0a6b6c0
  name: modbus 报文拆分
  func: |-
    var arr = msg.payload;
    for(var i=0;i<arr.length;i++){
        var t = arr[i];
        msg.payload = { value: parseInt(t.Value), 'fc': 6, 'unitid': 1, 'address': parseInt(t.Address), 'quantity': 1 } 
        node.send(msg);
    }
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 350
  'y': 440
  wires:
    - - f6cce74e561807da
- id: f6cce74e561807da
  type: modbus-flex-write
  z: b60c316ff0a6b6c0
  name: 批量修改modbus值
  showStatusActivities: false
  showErrors: false
  showWarnings: true
  server: f45c8577844ced46
  emptyMsgOnFail: false
  keepMsgProperties: false
  delayOnStart: false
  startDelayTime: ''
  x: 830
  'y': 440
  wires:
    - []
    - []
- id: 4b08f8c03e37af75
  type: change
  z: b60c316ff0a6b6c0
  name: ''
  rules:
    - t: set
      p: StationTask_70
      pt: global
      to: payload
      tot: msg
  action: ''
  property: ''
  from: ''
  to: ''
  reg: false
  x: 680
  'y': 240
  wires:
    - - 5422fe3beb921c6c
- id: 5422fe3beb921c6c
  type: function
  z: b60c316ff0a6b6c0
  name: 反馈
  func: |-
    msg.payload = {
        Code: 0,
        Msg:"操作成功"
    };
    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 930
  'y': 240
  wires:
    - - fb27549faaf4df38
- id: 5f2d50fe11da5433
  type: http in
  z: b60c316ff0a6b6c0
  name: ReceiveEndSignal
  url: /70/ReceiveEndSignal
  method: post
  upload: false
  swaggerDoc: ''
  x: 130
  'y': 120
  wires:
    - - aa38984a734707e1
- id: 13f19cbb678fecfc
  type: http response
  z: b60c316ff0a6b6c0
  name: ''
  statusCode: ''
  headers: {}
  x: 750
  'y': 140
  wires: []
- id: a87a85b7794a1a6e
  type: function
  z: b60c316ff0a6b6c0
  name: 反馈
  func: |-
    msg.payload = {
        Code: 0,
        Msg: "操作成功"
    };
    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 610
  'y': 120
  wires:
    - - 13f19cbb678fecfc
- id: aa38984a734707e1
  type: switch
  z: b60c316ff0a6b6c0
  name: ''
  property: payload.BillCode
  propertyType: msg
  rules:
    - t: eq
      v: StationTask_70.BillCode
      vt: global
    - t: else
  checkall: 'true'
  repair: false
  outputs: 2
  x: 370
  'y': 120
  wires:
    - - a87a85b7794a1a6e
      - 168aa29d0a82a483
    - - 649e5fadeb818fa6
- id: 649e5fadeb818fa6
  type: function
  z: b60c316ff0a6b6c0
  name: 反馈
  func: |-
    msg.payload = {
        Code: 1,
        Msg: "操作失败,当前设备执行的工单和下发的结束工单不一致"
    };
    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 610
  'y': 160
  wires:
    - - 13f19cbb678fecfc
- id: 1d0ee5f6d13974f7
  type: http response
  z: b60c316ff0a6b6c0
  name: ''
  statusCode: ''
  headers: {}
  x: 770
  'y': 280
  wires: []
- id: b24efc27b16de1e8
  type: http in
  z: b60c316ff0a6b6c0
  name: 工位状态-轮询
  url: /70/GetStationState
  method: post
  upload: false
  swaggerDoc: ''
  x: 110
  'y': 280
  wires:
    - - a02d16b74ebe1b1d
- id: a02d16b74ebe1b1d
  type: function
  z: b60c316ff0a6b6c0
  name: 反馈
  func: "var IO = global.get(\"IO_70\");\nmsg.payload = {\n\t\"Code\": 0,\n\t\"Msg\": \"操作成功\",\n\t\"Data\": [{\n\t\t\"StationCode\": \"OP_70\",\n\t\t\"StationName\": \"丝堵拧紧\",\n\t\t\"Status\": IO.AI.status\n\t}]\n};\nreturn msg;"
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 610
  'y': 280
  wires:
    - - 1d0ee5f6d13974f7
- id: a28f18a533722341
  type: http in
  z: b60c316ff0a6b6c0
  name: 动作执行
  url: /70/DoAction
  method: post
  upload: false
  swaggerDoc: ''
  x: 110
  'y': 340
  wires:
    - - 1a57418033fe0137
      - a6b15b16dbe29a69
- id: cd601a9f82909663
  type: function
  z: b60c316ff0a6b6c0
  name: modbus 报文拆分
  func: >-
    var t = msg.payload;

    if(t.Value==0 && t.Address==4070){
        t.RequestID = "-";
    }

    var Request = global.get("Request_70")

    Request.RequestID = t.RequestID;

    var t2 = (new Date()).toISOString();

    Request.StartTime = t2;

    Request.EndTime = "";

    global.set("front_torque", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0]);

    global.set("back_torque", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0]);


    msg.payload = { value: parseInt(t.Value), 'fc': 6, 'unitid': 1, 'address':
    parseInt(t.Address), 'quantity': 1 } 

    node.send(msg);
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 490
  'y': 360
  wires:
    - - f6cce74e561807da
- id: b3b717bf872f4930
  type: switch
  z: b60c316ff0a6b6c0
  name: ''
  property: Request_70.RequestID
  propertyType: global
  rules:
    - t: eq
      v: '-'
      vt: str
    - t: else
  checkall: 'true'
  repair: false
  outputs: 2
  x: 315
  'y': 340
  wires:
    - - cd601a9f82909663
      - 67c0b81032f7cf6e
      - 619b8d05efef8a97
    - - d16be92a0471a0e4
  l: false
- id: 67c0b81032f7cf6e
  type: function
  z: b60c316ff0a6b6c0
  name: 反馈
  func: |-
    msg.payload = {
        Code: 0,
        Msg: "操作成功"
    };
    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 450
  'y': 320
  wires:
    - - 2c21729d8f477c36
- id: 2c21729d8f477c36
  type: http response
  z: b60c316ff0a6b6c0
  name: ''
  statusCode: ''
  headers: {}
  x: 610
  'y': 320
  wires: []
- id: d16be92a0471a0e4
  type: function
  z: b60c316ff0a6b6c0
  name: 反馈
  func: |-
    msg.payload = {
        Code: 1,
        Msg: "上一个动作还未完成"
    };
    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 450
  'y': 400
  wires:
    - - 2c21729d8f477c36
- id: 249c701a144c7661
  type: function
  z: b60c316ff0a6b6c0
  name: 格式解析
  func: |
    msg.error = 0;

    var task = global.get("StationTask_70");
    if(task.BillCode!='-'){
        msg.error = 1;
        msg.errorMsg = "previese task is on going";
        return msg;
    }

    const data = msg.payload;
    if((typeof(data)!='object')){
        msg.error = 2;
        msg.errorMsg = "format wrong";
        return msg;
    }

    if (!('BillCode' in data)){
        msg.error = 3;
        msg.errorMsg = "no BillCode";
        return msg;
    }
    if (!('ProductCode' in data)){
        msg.error = 4;
        msg.errorMsg = "no ProductCode";
        return msg;
    }

    if (!('ProcessDetail' in data)){
        msg.error = 5;
        msg.errorMsg = "no ProcessDetail";
        return msg;
    }

    if(data.ProcessDetail.length==1){
        const data2 = data.ProcessDetail[0];
        if (!('EquipmentCode' in data2)){
            msg.error = 6;
            msg.errorMsg = "no EquipmentCode";
            return msg;
        }
        if(data2.EquipmentCode!='OP70'){
            msg.error = 7;
            msg.errorMsg = "no OP70";
            return msg;
        }
        if (!('Num' in data2)){
            msg.error = 8;
            msg.errorMsg = "no Num";
            return msg;
        }
        data2.done = 0
        var arr_isMaterialIn = [1,1,1,1,1];
        const _arr= [
            "M10-SD"];
        for(var i=0;i<data2.MaterialDetails.length;i++){
            const data3 = data2.MaterialDetails[i];
            if (!('MaterialCode' in data3)){
                msg.error = 10;
                msg.errorMsg = "MaterialDetails is missing";
                return msg;
            }
            if (!('Num' in data3)){
                msg.error = 11;
                msg.errorMsg = "Num is missing";
                return msg;
            }   

            const a = _arr.indexOf(data3.MaterialCode)
            if(a == -1){
                msg.error = 12;
                msg.errorMsg = "MaterialCode is wrong "+data3.MaterialCode;
                return msg;
            }  
            arr_isMaterialIn[a] = 0;
        }
        var __isMterialIn = 0;
        eval("__isMterialIn = "+arr_isMaterialIn.join("+")+";");
        if(__isMterialIn!=0){
            msg.error = 14;
            msg.errorMsg = __isMterialIn+" materials are missing ";
            return msg;
        }
    }
    else{
        msg.error = 13;
        msg.errorMsg = "ProcessDetail.length should be 1";
        return msg;
    }



    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 280
  'y': 240
  wires:
    - - 7450e7532a9133c3
      - 1426ab1e430853ca
- id: 7450e7532a9133c3
  type: switch
  z: b60c316ff0a6b6c0
  name: ''
  property: error
  propertyType: msg
  rules:
    - t: eq
      v: '0'
      vt: num
    - t: else
  checkall: 'true'
  repair: false
  outputs: 2
  x: 450
  'y': 240
  wires:
    - - 4b08f8c03e37af75
    - - 6b55599cd966446c
- id: 6b55599cd966446c
  type: function
  z: b60c316ff0a6b6c0
  name: 反馈
  func: |-
    msg.payload = {
        Code: 1,
        Msg:"失败"+msg.errorMsg
    };
    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 610
  'y': 200
  wires:
    - - fb27549faaf4df38
- id: 1426ab1e430853ca
  type: debug
  z: b60c316ff0a6b6c0
  name: debug 31
  active: true
  tosidebar: true
  console: false
  tostatus: false
  complete: 'true'
  targetType: full
  statusVal: ''
  statusType: auto
  x: 320
  'y': 180
  wires: []
- id: 168aa29d0a82a483
  type: change
  z: b60c316ff0a6b6c0
  name: ''
  rules:
    - t: set
      p: StationTask_70.BillCode
      pt: global
      to: '-'
      tot: str
  action: ''
  property: ''
  from: ''
  to: ''
  reg: false
  x: 710
  'y': 40
  wires:
    - []
- id: 619b8d05efef8a97
  type: delay
  z: b60c316ff0a6b6c0
  name: ''
  pauseType: delay
  timeout: '3'
  timeoutUnits: seconds
  rate: '1'
  nbRateUnits: '1'
  rateUnits: second
  randomFirst: '1'
  randomLast: '5'
  randomUnits: seconds
  drop: false
  allowrate: false
  outputs: 1
  x: 675
  'y': 360
  wires:
    - - 5388d30445411e50
  l: false
- id: 5388d30445411e50
  type: function
  z: b60c316ff0a6b6c0
  name: 置位
  func: >-
    msg.payload = { value: 0, 'fc': 6, 'unitid': 1, 'address': 4070, 'quantity':
    1 }

    node.send(msg);
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 770
  'y': 360
  wires:
    - - f6cce74e561807da
- id: fd3afd4f2b7d8287
  type: inject
  z: b60c316ff0a6b6c0
  name: ''
  props:
    - p: payload
    - p: topic
      vt: str
  repeat: ''
  crontab: ''
  once: true
  onceDelay: '2'
  topic: ''
  payload: ''
  payloadType: date
  x: 140
  'y': 640
  wires:
    - - 6f9732e0ad0d5681
- id: 6f9732e0ad0d5681
  type: trigger
  z: b60c316ff0a6b6c0
  name: ''
  op1: '1'
  op2: '0'
  op1type: str
  op2type: str
  duration: '-250'
  extend: false
  overrideDelay: false
  units: ms
  reset: ''
  bytopic: all
  topic: topic
  outputs: 1
  x: 330
  'y': 640
  wires:
    - - ead9fc87ea3d0f27
      - 466602296230bfe9
- id: dea945d4f22dc2ce
  type: rbe
  z: b60c316ff0a6b6c0
  name: ''
  func: rbei
  gap: ''
  start: ''
  inout: out
  septopics: false
  property: payload
  topi: topic
  x: 390
  'y': 720
  wires:
    - - 3217afeb1df75b6b
      - 65665a20f3e1974d
- id: ead9fc87ea3d0f27
  type: change
  z: b60c316ff0a6b6c0
  name: 状态变化监听
  rules:
    - t: set
      p: payload
      pt: msg
      to: IO_70.AI.status
      tot: global
  action: ''
  property: ''
  from: ''
  to: ''
  reg: false
  x: 220
  'y': 720
  wires:
    - - dea945d4f22dc2ce
- id: 3217afeb1df75b6b
  type: switch
  z: b60c316ff0a6b6c0
  name: ''
  property: IO_70.AI.status
  propertyType: global
  rules:
    - t: eq
      v: '4'
      vt: num
  checkall: 'true'
  repair: false
  outputs: 1
  x: 510
  'y': 720
  wires:
    - - d72a99f95f1edb40
- id: 34845c9d97eae208
  type: rbe
  z: b60c316ff0a6b6c0
  name: ''
  func: rbei
  gap: ''
  start: ''
  inout: out
  septopics: false
  property: payload
  topi: topic
  x: 390
  'y': 800
  wires:
    - - c125392c542e73ab
- id: 466602296230bfe9
  type: change
  z: b60c316ff0a6b6c0
  name: 故障信号监听
  rules:
    - t: set
      p: payload
      pt: msg
      to: IO_70.AI.error
      tot: global
  action: ''
  property: ''
  from: ''
  to: ''
  reg: false
  x: 220
  'y': 800
  wires:
    - - 34845c9d97eae208
- id: c125392c542e73ab
  type: switch
  z: b60c316ff0a6b6c0
  name: ''
  property: payload
  propertyType: msg
  rules:
    - t: gt
      v: '0'
      vt: num
  checkall: 'true'
  repair: false
  outputs: 1
  x: 510
  'y': 800
  wires:
    - - 1f79a6b42a7951c4
- id: c5d0d032b5cdf62c
  type: http request
  z: b60c316ff0a6b6c0
  name: ''
  method: POST
  ret: txt
  paytoqs: ignore
  url: ''
  tls: ''
  persist: false
  proxy: ''
  insecureHTTPParser: false
  authType: ''
  senderr: false
  headers:
    - keyType: other
      keyValue: Accept
      valueType: other
      valueValue: application/json
  x: 880
  'y': 800
  wires:
    - - 8ca7421c5b46b4c2
- id: 8ca7421c5b46b4c2
  type: debug
  z: b60c316ff0a6b6c0
  name: 调试 17
  active: false
  tosidebar: true
  console: false
  tostatus: false
  complete: payload
  targetType: msg
  statusVal: ''
  statusType: auto
  x: 1040
  'y': 800
  wires: []
- id: 1f79a6b42a7951c4
  type: function
  z: b60c316ff0a6b6c0
  name: function 34
  func: "var ErrorMap_60 = global.get(\"ErrorMap_10\");\nmsg.payload ={\t\t\t\t\n\tEquipmentCode: \"OP10\",\t\t\t\n\tEquipmentName: \"泛在控制器\",\t\t\t\n\tStatus: 0,\n    WarnContent: ErrorMap_60[msg.payload]\t\t\n};\nmsg.url = global.get(\"LCS\")+\"receiveUbiquitousWarn\";\n\nreturn msg;"
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 680
  'y': 800
  wires:
    - - c5d0d032b5cdf62c
- id: cd43772a1bfd0652
  type: inject
  z: b60c316ff0a6b6c0
  name: ''
  props:
    - p: payload
    - p: topic
      vt: str
  repeat: ''
  crontab: ''
  once: false
  onceDelay: 0.1
  topic: ''
  payload: ''
  payloadType: date
  x: 550
  'y': 620
  wires:
    - - d72a99f95f1edb40
- id: c5e61641d6e5b189
  type: http request
  z: b60c316ff0a6b6c0
  name: ''
  method: POST
  ret: txt
  paytoqs: ignore
  url: ''
  tls: ''
  persist: false
  proxy: ''
  insecureHTTPParser: false
  authType: ''
  senderr: false
  headers: []
  x: 1060
  'y': 720
  wires:
    - - 64f3bdecab1eb090
      - 366db6dd22a1471c
- id: d72a99f95f1edb40
  type: function
  z: b60c316ff0a6b6c0
  name: 生产完成
  func: |-
    const t = (new Date()).toISOString();
    var Request = global.get("Request_70");
    Request.EndTime = t;

    msg.payload = Request;

    msg.url = global.get("LCS") + "actionCompletedSignal";
    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 680
  'y': 720
  wires:
    - - c5e61641d6e5b189
- id: 366db6dd22a1471c
  type: change
  z: b60c316ff0a6b6c0
  name: ''
  rules:
    - t: set
      p: Request_70.RequestID
      pt: global
      to: '-'
      tot: str
    - t: set
      p: Request_70.RequestID_
      pt: global
      to: '-'
      tot: str
  action: ''
  property: ''
  from: ''
  to: ''
  reg: false
  x: 1260
  'y': 720
  wires:
    - []
- id: 64f3bdecab1eb090
  type: debug
  z: b60c316ff0a6b6c0
  name: 调试 23
  active: true
  tosidebar: true
  console: false
  tostatus: false
  complete: 'false'
  statusVal: ''
  statusType: auto
  x: 1220
  'y': 660
  wires: []
- id: 1a57418033fe0137
  type: switch
  z: b60c316ff0a6b6c0
  name: ''
  property: IO_70.AI.status
  propertyType: global
  rules:
    - t: eq
      v: '22'
      vt: num
    - t: else
  checkall: 'true'
  repair: false
  outputs: 2
  x: 225
  'y': 340
  wires:
    - - b3b717bf872f4930
    - - f12d04b26351639b
  l: false
- id: f12d04b26351639b
  type: function
  z: b60c316ff0a6b6c0
  name: 反馈
  func: |-
    const IO = global.get("IO_70");
    msg.payload = {
        Code: 1,
        Msg: "当前状态无法执行动作:"+IO.AI.status,
    };
    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 310
  'y': 400
  wires:
    - - 2c21729d8f477c36
- id: 6e48f3f72ef4ceb6
  type: file
  z: b60c316ff0a6b6c0
  name: ''
  filename: 'c:\tmp\status.log'
  filenameType: str
  appendNewline: true
  createDir: false
  overwriteFile: 'false'
  encoding: none
  x: 700
  'y': 760
  wires:
    - []
- id: 65665a20f3e1974d
  type: function
  z: b60c316ff0a6b6c0
  name: 函数 24
  func: |-
    var txt = msg.status.text;
    var date = (new Date()).toISOString();
    msg.payload = date + " : " + txt;
    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 520
  'y': 760
  wires:
    - - 6e48f3f72ef4ceb6
- id: 1f3ee82275b60d3a
  type: file
  z: b60c316ff0a6b6c0
  name: ''
  filename: 'C:/tmp/request.txt'
  filenameType: str
  appendNewline: true
  createDir: false
  overwriteFile: 'false'
  encoding: none
  x: 150
  'y': 400
  wires:
    - []
- id: a6b15b16dbe29a69
  type: function
  z: b60c316ff0a6b6c0
  name: 函数 26
  func: |-
    var txt = msg.payload.Value + "," + msg.payload.RequestID;
    var date = (new Date()).toISOString();
    msg.payload = date + " : " + txt;
    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 25
  'y': 400
  wires:
    - - 1f3ee82275b60d3a
  l: false
