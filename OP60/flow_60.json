[
    {
        "id": "71f537202ea9cf55",
        "type": "tab",
        "label": "screw",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "7ea93ba33d73caab",
        "type": "tab",
        "label": "scheduler",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "20ecc5cb793b2ee6",
        "type": "tab",
        "label": "dataCenter",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "9a4dd78996491658",
        "type": "modbus-client",
        "name": "screw",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": true,
        "tcpHost": "192.168.110.63",
        "tcpPort": "23",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true,
        "showErrors": false,
        "showWarnings": true,
        "showLogs": true
    },
    {
        "id": "d6782a77eee52a2e",
        "type": "modbus-client",
        "name": "controller",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": true,
        "tcpHost": "192.168.105.232",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true,
        "showErrors": false,
        "showWarnings": true,
        "showLogs": true
    },
    {
        "id": "967785e4049706c4",
        "type": "modbus-client",
        "name": "robot-6axes-64",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": true,
        "tcpHost": "192.168.110.64",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true,
        "showErrors": false,
        "showWarnings": true,
        "showLogs": true
    },
    {
        "id": "8d4d4b53cf1b63e2",
        "type": "modbus-read",
        "z": "71f537202ea9cf55",
        "name": "screw-in",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": true,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "HoldingRegister",
        "adr": "20",
        "quantity": "20",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "9a4dd78996491658",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 140,
        "y": 80,
        "wires": [
            [
                "d514673c90fffe90",
                "4e5f5713bc0f71f8",
                "8c0135732e0ed9b9"
            ],
            []
        ]
    },
    {
        "id": "4dab851a3090a4ee",
        "type": "modbus-write",
        "z": "71f537202ea9cf55",
        "name": "screw",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "3",
        "quantity": "1",
        "server": "9a4dd78996491658",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 1030,
        "y": 240,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "49312cbe0536496d",
        "type": "inject",
        "z": "71f537202ea9cf55",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 750,
        "y": 240,
        "wires": [
            [
                "4dab851a3090a4ee"
            ]
        ]
    },
    {
        "id": "1916e26398944d20",
        "type": "inject",
        "z": "71f537202ea9cf55",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "8",
        "payloadType": "num",
        "x": 750,
        "y": 280,
        "wires": [
            [
                "4dab851a3090a4ee"
            ]
        ]
    },
    {
        "id": "dbb6283463f60b0e",
        "type": "inject",
        "z": "71f537202ea9cf55",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 750,
        "y": 320,
        "wires": [
            [
                "4dab851a3090a4ee"
            ]
        ]
    },
    {
        "id": "182b0b97b21da321",
        "type": "trigger",
        "z": "71f537202ea9cf55",
        "name": "",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "-250",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 310,
        "y": 260,
        "wires": [
            [
                "7f9f5dfb8250b123"
            ]
        ]
    },
    {
        "id": "9d8c504c1ac36899",
        "type": "function",
        "z": "71f537202ea9cf55",
        "name": "screw",
        "func": "var val = 0;\nif(msg.payload.screw_run==1){\n    val += 1;\n}\nif (msg.payload.screw_clockwise==1){\n    val += 2;\n}\nif (msg.payload.screw_pause == 1) {\n    val += 4;\n}\nif (msg.payload.screw_reset == 1) {\n    val += 8;\n}\nmsg.payload = val;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 180,
        "wires": [
            [
                "ecce777fee31e872"
            ]
        ]
    },
    {
        "id": "7f9f5dfb8250b123",
        "type": "change",
        "z": "71f537202ea9cf55",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "IO.AO",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 510,
        "y": 260,
        "wires": [
            [
                "9d8c504c1ac36899",
                "53731b7b0844da45"
            ]
        ]
    },
    {
        "id": "c093bb83b677bf58",
        "type": "modbus-read",
        "z": "71f537202ea9cf55",
        "name": "screw",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "HoldingRegister",
        "adr": "25",
        "quantity": "2",
        "rate": "300",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "9a4dd78996491658",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 490,
        "y": 40,
        "wires": [
            [
                "d514673c90fffe90"
            ],
            []
        ]
    },
    {
        "id": "d514673c90fffe90",
        "type": "function",
        "z": "71f537202ea9cf55",
        "name": "完成扭矩",
        "func": "var data = msg.payload[5] + msg.payload[6]*0xff;\nif (!Number.isNaN(data)){\n    msg.payload = data;\n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 80,
        "wires": [
            [
                "c52a9f97c85b9848"
            ]
        ]
    },
    {
        "id": "c52a9f97c85b9848",
        "type": "change",
        "z": "71f537202ea9cf55",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "IO.AI.screw_torque",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "069f70e3615897de",
        "type": "inject",
        "z": "71f537202ea9cf55",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 260,
        "wires": [
            [
                "182b0b97b21da321"
            ]
        ]
    },
    {
        "id": "6ff5ff2ceef04486",
        "type": "inject",
        "z": "71f537202ea9cf55",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "4",
        "payloadType": "num",
        "x": 750,
        "y": 360,
        "wires": [
            [
                "4dab851a3090a4ee"
            ]
        ]
    },
    {
        "id": "ecce777fee31e872",
        "type": "rbe",
        "z": "71f537202ea9cf55",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 810,
        "y": 180,
        "wires": [
            [
                "4dab851a3090a4ee"
            ]
        ]
    },
    {
        "id": "9ee58c96d40ed36c",
        "type": "modbus-write",
        "z": "71f537202ea9cf55",
        "name": "screw",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "48",
        "quantity": "1",
        "server": "9a4dd78996491658",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 1090,
        "y": 400,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "b7d63146a71a3898",
        "type": "inject",
        "z": "71f537202ea9cf55",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "12",
        "payloadType": "num",
        "x": 750,
        "y": 480,
        "wires": [
            [
                "9ee58c96d40ed36c"
            ]
        ]
    },
    {
        "id": "e30a2187d403c988",
        "type": "inject",
        "z": "71f537202ea9cf55",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 750,
        "y": 520,
        "wires": [
            [
                "9ee58c96d40ed36c"
            ]
        ]
    },
    {
        "id": "53731b7b0844da45",
        "type": "change",
        "z": "71f537202ea9cf55",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "IO.AO.screw_mode",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 420,
        "wires": [
            [
                "1d8a69a3d9705111"
            ]
        ]
    },
    {
        "id": "1d8a69a3d9705111",
        "type": "rbe",
        "z": "71f537202ea9cf55",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 870,
        "y": 420,
        "wires": [
            [
                "9ee58c96d40ed36c"
            ]
        ]
    },
    {
        "id": "3f3486510aa530c1",
        "type": "modbus-write",
        "z": "71f537202ea9cf55",
        "name": "结果",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "MHoldingRegisters",
        "adr": "20",
        "quantity": "1",
        "server": "967785e4049706c4",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 430,
        "y": 180,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "e2ed2ffdd8ca8d3c",
        "type": "status",
        "z": "71f537202ea9cf55",
        "name": "监听网络连接",
        "scope": [
            "8d4d4b53cf1b63e2"
        ],
        "x": 230,
        "y": 600,
        "wires": [
            [
                "bdf62724a5672db0"
            ]
        ]
    },
    {
        "id": "28330c4133105f6b",
        "type": "file",
        "z": "71f537202ea9cf55",
        "name": "",
        "filename": "c:\\log\\log.txt",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 710,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "bdf62724a5672db0",
        "type": "rbe",
        "z": "71f537202ea9cf55",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "status.text",
        "topi": "topic",
        "x": 410,
        "y": 600,
        "wires": [
            [
                "b7f739ccd1ffcd15"
            ]
        ]
    },
    {
        "id": "b7f739ccd1ffcd15",
        "type": "function",
        "z": "71f537202ea9cf55",
        "name": "函数 20",
        "func": "var txt = msg.status.text;\nvar date = (new Date()).toISOString();\nmsg.payload = date + \" : \" + txt;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 600,
        "wires": [
            [
                "28330c4133105f6b"
            ]
        ]
    },
    {
        "id": "4e5f5713bc0f71f8",
        "type": "function",
        "z": "71f537202ea9cf55",
        "name": "函数 21",
        "func": "var error = msg.payload[11];\nvar result = msg.payload[12];\nif(result == 1 && error > 0){\n    msg.payload = [3];\n}\nelse{\n    msg.payload = [result];\n}\nvar IO = global.get(\"IO\");\nIO.AI.screw_error = error;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 180,
        "wires": [
            [
                "3f3486510aa530c1"
            ]
        ]
    },
    {
        "id": "8c0135732e0ed9b9",
        "type": "change",
        "z": "71f537202ea9cf55",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[12]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 255,
        "y": 140,
        "wires": [
            [
                "ffd12dc77501f486"
            ]
        ],
        "l": false
    },
    {
        "id": "ffd12dc77501f486",
        "type": "rbe",
        "z": "71f537202ea9cf55",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 315,
        "y": 140,
        "wires": [
            [
                "a900078fe5ad1eac"
            ]
        ],
        "l": false
    },
    {
        "id": "20e1855f7fac6cee",
        "type": "function",
        "z": "71f537202ea9cf55",
        "name": "扭力数组",
        "func": "var torques = global.get(\"torques\");\nvar IO = global.get(\"IO\");\ntorques.push(IO.AI.screw_torque);\ntorques.shift();\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "a900078fe5ad1eac",
        "type": "switch",
        "z": "71f537202ea9cf55",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 365,
        "y": 140,
        "wires": [
            [
                "20e1855f7fac6cee"
            ]
        ],
        "l": false
    },
    {
        "id": "a1fe1df9593815c4",
        "type": "http response",
        "z": "7ea93ba33d73caab",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 610,
        "y": 220,
        "wires": []
    },
    {
        "id": "4733043110895b60",
        "type": "http in",
        "z": "7ea93ba33d73caab",
        "name": "工位任务接收",
        "url": "/60/ReceiveStationTask",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 180,
        "wires": [
            [
                "154ad952083142ba"
            ]
        ]
    },
    {
        "id": "46dc168ab8505d2a",
        "type": "http in",
        "z": "7ea93ba33d73caab",
        "name": "泛在通用写多个接口",
        "url": "/60/WriteValue",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 440,
        "wires": [
            [
                "80231b7ab58b897b",
                "0adcd572b255d28a"
            ]
        ]
    },
    {
        "id": "80231b7ab58b897b",
        "type": "function",
        "z": "7ea93ba33d73caab",
        "name": "modbus 报文拆分",
        "func": "var arr = msg.payload;\nfor(var i=0;i<arr.length;i++){\n    var t = arr[i];\n    //\n    msg.payload = { value: parseInt(t.Value), 'fc': 6, 'unitid': 1, 'address': parseInt(t.Address), 'quantity': 1 } \n    node.send(msg);\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 440,
        "wires": [
            [
                "222dbbbdd8ce1157"
            ]
        ]
    },
    {
        "id": "222dbbbdd8ce1157",
        "type": "modbus-flex-write",
        "z": "7ea93ba33d73caab",
        "name": "批量修改modbus值",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "server": "d6782a77eee52a2e",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 670,
        "y": 440,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "0adcd572b255d28a",
        "type": "function",
        "z": "7ea93ba33d73caab",
        "name": "反馈",
        "func": "msg.payload = {\n    Code: 0,\n    Msg: \"操作成功\"\n};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 500,
        "wires": [
            [
                "e612d00fa180dc3f"
            ]
        ]
    },
    {
        "id": "154ad952083142ba",
        "type": "change",
        "z": "7ea93ba33d73caab",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "ReceiveStationTask",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 180,
        "wires": [
            [
                "a1fe1df9593815c4",
                "0e5d9d751042facc"
            ]
        ]
    },
    {
        "id": "0e5d9d751042facc",
        "type": "switch",
        "z": "7ea93ba33d73caab",
        "name": "根据产品名称修改程序执行",
        "property": "ReceiveStationTask.ProductName",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 680,
        "y": 140,
        "wires": [
            [
                "bff1a7ae90152e4e"
            ],
            [
                "1f2fb809f2cf2780"
            ],
            [
                "ef672b7682431606"
            ]
        ]
    },
    {
        "id": "bff1a7ae90152e4e",
        "type": "change",
        "z": "7ea93ba33d73caab",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "IO.AI.work_object",
                "pt": "global",
                "to": "1",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 990,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "1f2fb809f2cf2780",
        "type": "change",
        "z": "7ea93ba33d73caab",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "IO.AI.work_object",
                "pt": "global",
                "to": "2",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 990,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "ef672b7682431606",
        "type": "change",
        "z": "7ea93ba33d73caab",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "IO.AI.work_object",
                "pt": "global",
                "to": "3",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 990,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "cdd0be39d1ddfe4d",
        "type": "http in",
        "z": "7ea93ba33d73caab",
        "name": "接收开工信号",
        "url": "/ReceiveStartSignal",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 40,
        "wires": [
            [
                "3c77f4e183649c54",
                "e92aec4ce1a7098c"
            ]
        ]
    },
    {
        "id": "70c6ee93a547558c",
        "type": "http response",
        "z": "7ea93ba33d73caab",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 450,
        "y": 100,
        "wires": []
    },
    {
        "id": "3c77f4e183649c54",
        "type": "function",
        "z": "7ea93ba33d73caab",
        "name": "反馈",
        "func": "msg.payload = {\n    Code: 0,\n    Msg: \"操作成功\"\n};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 100,
        "wires": [
            [
                "70c6ee93a547558c"
            ]
        ]
    },
    {
        "id": "4f4a0fa5abc931ee",
        "type": "change",
        "z": "7ea93ba33d73caab",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "IO.AI.product_status",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "ccbc44ce986db8ce",
        "type": "inject",
        "z": "7ea93ba33d73caab",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 640,
        "wires": [
            [
                "fdfd36a41352b7e7"
            ]
        ]
    },
    {
        "id": "fdfd36a41352b7e7",
        "type": "trigger",
        "z": "7ea93ba33d73caab",
        "name": "",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "-250",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 640,
        "wires": [
            [
                "871e81ddbcd0e2c8",
                "3db855298746fd70"
            ]
        ]
    },
    {
        "id": "6fc4c16f460d3327",
        "type": "http in",
        "z": "7ea93ba33d73caab",
        "name": "通用读多个接口",
        "url": "/ReadValue",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 540,
        "wires": [
            [
                "3cd048c19b6b2385",
                "99c9365df7f076b4"
            ]
        ]
    },
    {
        "id": "9eab2bb150a4700b",
        "type": "modbus-flex-getter",
        "z": "7ea93ba33d73caab",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "d6782a77eee52a2e",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 790,
        "y": 540,
        "wires": [
            [
                "b1db1a2770df34f2"
            ],
            []
        ]
    },
    {
        "id": "3cd048c19b6b2385",
        "type": "change",
        "z": "7ea93ba33d73caab",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "ReadValue",
                "pt": "global",
                "to": "[]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 540,
        "wires": [
            [
                "321c7b763544446d"
            ]
        ]
    },
    {
        "id": "321c7b763544446d",
        "type": "function",
        "z": "7ea93ba33d73caab",
        "name": "modbus 报文拆分",
        "func": "var arr = msg.payload;\nfor(var i=0;i<arr.length;i++){\n    var t = arr[i];\n    node.send({payload:{fc:3, address: parseInt(t.Address), quantity:1},temp:parseInt(t.Address)});\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 540,
        "wires": [
            [
                "9eab2bb150a4700b"
            ]
        ]
    },
    {
        "id": "b1db1a2770df34f2",
        "type": "function",
        "z": "7ea93ba33d73caab",
        "name": "函数 4",
        "func": "var arr = global.get(\"ReadValue\");\narr.push({\n    Address: msg.modbusRequest.address,\n    Value: msg.payload[0],\n    ValueType: \"int\"\n});\nconsole.debug(arr);\nglobal.set(\"ReadValue\",arr);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "35523b70b586fc7f",
        "type": "change",
        "z": "7ea93ba33d73caab",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload.Code",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "payload.Msg",
                "pt": "msg",
                "to": "操作成功",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.Data",
                "pt": "msg",
                "to": "ReadValue",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 580,
        "wires": [
            [
                "6e21fe6e63c12bd4"
            ]
        ]
    },
    {
        "id": "e612d00fa180dc3f",
        "type": "http response",
        "z": "7ea93ba33d73caab",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 470,
        "y": 500,
        "wires": []
    },
    {
        "id": "6e21fe6e63c12bd4",
        "type": "http response",
        "z": "7ea93ba33d73caab",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 830,
        "y": 580,
        "wires": []
    },
    {
        "id": "99c9365df7f076b4",
        "type": "delay",
        "z": "7ea93ba33d73caab",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 320,
        "y": 580,
        "wires": [
            [
                "d306326b5bf01718"
            ]
        ]
    },
    {
        "id": "cddb487d1cbe3241",
        "type": "rbe",
        "z": "7ea93ba33d73caab",
        "name": "",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 390,
        "y": 720,
        "wires": [
            [
                "0c8b84a05aa83ab5",
                "a545dc42224e88c2"
            ]
        ]
    },
    {
        "id": "871e81ddbcd0e2c8",
        "type": "change",
        "z": "7ea93ba33d73caab",
        "name": "加工信号完成监听",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "IO.AO.status",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 230,
        "y": 720,
        "wires": [
            [
                "cddb487d1cbe3241"
            ]
        ]
    },
    {
        "id": "0c8b84a05aa83ab5",
        "type": "switch",
        "z": "7ea93ba33d73caab",
        "name": "",
        "property": "IO.AO.status",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "4",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 510,
        "y": 720,
        "wires": [
            [
                "d72a99f95f1edb40"
            ]
        ]
    },
    {
        "id": "28c12aa2c6a3dce3",
        "type": "rbe",
        "z": "7ea93ba33d73caab",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 390,
        "y": 780,
        "wires": [
            [
                "07a0ef8fe135791e"
            ]
        ]
    },
    {
        "id": "3db855298746fd70",
        "type": "change",
        "z": "7ea93ba33d73caab",
        "name": "故障信号完成监听",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "IO.AO.error",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 230,
        "y": 780,
        "wires": [
            [
                "28c12aa2c6a3dce3"
            ]
        ]
    },
    {
        "id": "07a0ef8fe135791e",
        "type": "switch",
        "z": "7ea93ba33d73caab",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 510,
        "y": 780,
        "wires": [
            [
                "29950c11016cc89c",
                "cf9f897c78d7be42"
            ]
        ]
    },
    {
        "id": "2f0621a45a34b82b",
        "type": "http request",
        "z": "7ea93ba33d73caab",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:1880/ReceiveUbiquestionsWarn",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1120,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "b2de3e60122fba7e",
        "type": "change",
        "z": "7ea93ba33d73caab",
        "name": "发送报文",
        "rules": [
            {
                "t": "set",
                "p": "payload.EquipmentCode",
                "pt": "msg",
                "to": "OP50",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.EquipmentName",
                "pt": "msg",
                "to": "OP50",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.Status",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "payload.WarnContent",
                "pt": "msg",
                "to": "errorMsg",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 780,
        "wires": [
            [
                "061d8b56c2524449"
            ]
        ]
    },
    {
        "id": "061d8b56c2524449",
        "type": "change",
        "z": "7ea93ba33d73caab",
        "name": "发送报文",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[msg.payload]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 980,
        "y": 780,
        "wires": [
            [
                "2f0621a45a34b82b"
            ]
        ]
    },
    {
        "id": "e92aec4ce1a7098c",
        "type": "function",
        "z": "7ea93ba33d73caab",
        "name": "函数 5",
        "func": "return {payload : parseInt(msg.payload)};",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 40,
        "wires": [
            [
                "4f4a0fa5abc931ee"
            ]
        ]
    },
    {
        "id": "d306326b5bf01718",
        "type": "change",
        "z": "7ea93ba33d73caab",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 490,
        "y": 580,
        "wires": [
            [
                "35523b70b586fc7f"
            ]
        ]
    },
    {
        "id": "29950c11016cc89c",
        "type": "change",
        "z": "7ea93ba33d73caab",
        "name": "发送报文",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 780,
        "wires": [
            [
                "b2de3e60122fba7e"
            ]
        ]
    },
    {
        "id": "cf9f897c78d7be42",
        "type": "function",
        "z": "7ea93ba33d73caab",
        "name": "函数 10",
        "func": "var errorMap = global.get(\"errorMap\");\nvar errorMsg = errorMap[msg.payload];\nglobal.set(\"errorMsg\",errorMsg);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "895ab5888ce9d012",
        "type": "http in",
        "z": "7ea93ba33d73caab",
        "name": "动作执行",
        "url": "/60/DoAction",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 380,
        "wires": [
            [
                "1a57418033fe0137",
                "a6b15b16dbe29a69"
            ]
        ]
    },
    {
        "id": "9cad25a40f338606",
        "type": "function",
        "z": "7ea93ba33d73caab",
        "name": "modbus 报文拆分",
        "func": "var t = msg.payload;\nif(t.Value==0 && t.Address==4060){\n    t.RequestID = \"-\";\n}\nvar Request = global.get(\"Request_60\")\nRequest.RequestID = t.RequestID;\nvar t2 = (new Date()).toISOString();\nRequest.StartTime = t2;\nRequest.EndTime = \"\";\nglobal.set(\"torques\", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\n\nmsg.payload = { value: parseInt(t.Value), 'fc': 6, 'unitid': 1, 'address': parseInt(t.Address), 'quantity': 1 } \nnode.send(msg);",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 340,
        "wires": [
            [
                "222dbbbdd8ce1157"
            ]
        ]
    },
    {
        "id": "e759e7cdef9ed3b0",
        "type": "switch",
        "z": "7ea93ba33d73caab",
        "name": "",
        "property": "Request_60.RequestID",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "-",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 350,
        "y": 380,
        "wires": [
            [
                "9cad25a40f338606",
                "5247ce7eefc505b5",
                "1095566fd472c389"
            ],
            [
                "49cabd21c330f7f7"
            ]
        ]
    },
    {
        "id": "5247ce7eefc505b5",
        "type": "function",
        "z": "7ea93ba33d73caab",
        "name": "反馈",
        "func": "msg.payload = {\n    Code: 0,\n    Msg: \"操作成功\"\n};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 300,
        "wires": [
            [
                "aaeb451f35e295ca"
            ]
        ]
    },
    {
        "id": "aaeb451f35e295ca",
        "type": "http response",
        "z": "7ea93ba33d73caab",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 650,
        "y": 300,
        "wires": []
    },
    {
        "id": "49cabd21c330f7f7",
        "type": "function",
        "z": "7ea93ba33d73caab",
        "name": "反馈",
        "func": "msg.payload = {\n    Code: 1,\n    Msg: \"上一个动作还未完成\"\n};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 380,
        "wires": [
            [
                "aaeb451f35e295ca"
            ]
        ]
    },
    {
        "id": "4b4e1a15108f41fd",
        "type": "modbus-write",
        "z": "7ea93ba33d73caab",
        "name": "调度器命令下发",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "MHoldingRegisters",
        "adr": "22",
        "quantity": "1",
        "server": "967785e4049706c4",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 1100,
        "y": 340,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "1095566fd472c389",
        "type": "function",
        "z": "7ea93ba33d73caab",
        "name": "函数 23",
        "func": "msg.payload = [msg.payload.Value];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 340,
        "wires": [
            [
                "4b4e1a15108f41fd",
                "619b8d05efef8a97"
            ]
        ]
    },
    {
        "id": "619b8d05efef8a97",
        "type": "delay",
        "z": "7ea93ba33d73caab",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 940,
        "y": 280,
        "wires": [
            [
                "5388d30445411e50"
            ]
        ]
    },
    {
        "id": "5388d30445411e50",
        "type": "function",
        "z": "7ea93ba33d73caab",
        "name": "函数 24",
        "func": "msg.payload = [0];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 280,
        "wires": [
            [
                "4b4e1a15108f41fd"
            ]
        ]
    },
    {
        "id": "c5e61641d6e5b189",
        "type": "http request",
        "z": "7ea93ba33d73caab",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 940,
        "y": 720,
        "wires": [
            [
                "60076d6a67fc4ed3",
                "366db6dd22a1471c"
            ]
        ]
    },
    {
        "id": "366db6dd22a1471c",
        "type": "change",
        "z": "7ea93ba33d73caab",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Request_60.RequestID",
                "pt": "global",
                "to": "-",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "Request_60.RequestID_",
                "pt": "global",
                "to": "-",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1240,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "d72a99f95f1edb40",
        "type": "function",
        "z": "7ea93ba33d73caab",
        "name": "生产完成",
        "func": "const t = (new Date()).toISOString();\nvar Request = global.get(\"Request_60\");\nRequest.EndTime = t;\n\nmsg.payload = Request;\n\nmsg.url = global.get(\"LCS\") + \"actionCompletedSignal\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 720,
        "wires": [
            [
                "c5e61641d6e5b189"
            ]
        ]
    },
    {
        "id": "efd3c09feee9ba70",
        "type": "http response",
        "z": "7ea93ba33d73caab",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 810,
        "y": 880,
        "wires": []
    },
    {
        "id": "5e8425ab74d15c64",
        "type": "function",
        "z": "7ea93ba33d73caab",
        "name": "反馈",
        "func": "var IO = global.get(\"IO\");\nmsg.payload = {\n\t\"Code\": 0,\n\t\"Msg\": \"操作成功\",\n\t\"Data\": [{\n\t\t\"StationCode\": \"OP_60\",\n\t\t\"StationName\": \"丝堵装配\",\n\t\t\"Status\": IO.AO.status\n\t}]\n};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 880,
        "wires": [
            [
                "efd3c09feee9ba70"
            ]
        ]
    },
    {
        "id": "d3c523395d32e574",
        "type": "http in",
        "z": "7ea93ba33d73caab",
        "name": "工位状态-轮询",
        "url": "/60/GetStationState",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 880,
        "wires": [
            [
                "5e8425ab74d15c64"
            ]
        ]
    },
    {
        "id": "f645e7dce8794c08",
        "type": "file",
        "z": "7ea93ba33d73caab",
        "name": "",
        "filename": "C:/tmp/robot_status.txt",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 660,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "a545dc42224e88c2",
        "type": "function",
        "z": "7ea93ba33d73caab",
        "name": "函数 8",
        "func": "var txt = msg.payload;\nvar date = (new Date()).toISOString();\nmsg.payload = date + \" : \" + txt;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 495,
        "y": 660,
        "wires": [
            [
                "f645e7dce8794c08"
            ]
        ],
        "l": false
    },
    {
        "id": "60076d6a67fc4ed3",
        "type": "debug",
        "z": "7ea93ba33d73caab",
        "name": "调试 25",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 680,
        "wires": []
    },
    {
        "id": "1a57418033fe0137",
        "type": "switch",
        "z": "7ea93ba33d73caab",
        "name": "",
        "property": "IO.AO.status",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "22",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 255,
        "y": 380,
        "wires": [
            [
                "e759e7cdef9ed3b0"
            ],
            [
                "f12d04b26351639b"
            ]
        ],
        "l": false
    },
    {
        "id": "f12d04b26351639b",
        "type": "function",
        "z": "7ea93ba33d73caab",
        "name": "反馈",
        "func": "const IO = global.get(\"IO_60\");\nmsg.payload = {\n    Code: 1,\n    Msg: \"当前状态无法执行动作:\"+IO.AI.status,\n};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 260,
        "wires": [
            [
                "aaeb451f35e295ca"
            ]
        ]
    },
    {
        "id": "def7b74dd73c77b9",
        "type": "http in",
        "z": "7ea93ba33d73caab",
        "name": "",
        "url": "/60/data",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 960,
        "wires": [
            [
                "9bc3906f868c0782"
            ]
        ]
    },
    {
        "id": "1e57f8f96e834f72",
        "type": "http response",
        "z": "7ea93ba33d73caab",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 610,
        "y": 960,
        "wires": []
    },
    {
        "id": "9bc3906f868c0782",
        "type": "function",
        "z": "7ea93ba33d73caab",
        "name": "function 30",
        "func": "const p = msg.payload.key;\nvar arr = p.split(\".\");\nconst obj = global.get(arr[0]);\neval(\"var \"+arr[0]+\" = obj;\");\nconsole.debug(1);\neval(\"msg.payload = \"+p+\";\");\nconsole.debug(2);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 960,
        "wires": [
            [
                "1e57f8f96e834f72"
            ]
        ]
    },
    {
        "id": "1f3ee82275b60d3a",
        "type": "file",
        "z": "7ea93ba33d73caab",
        "name": "",
        "filename": "C:/tmp/request.txt",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 270,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "a6b15b16dbe29a69",
        "type": "function",
        "z": "7ea93ba33d73caab",
        "name": "函数 26",
        "func": "var txt = msg.payload.Value + \",\" + msg.payload.RequestID;\nvar date = (new Date()).toISOString();\nmsg.payload = date + \" : \" + txt;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 145,
        "y": 300,
        "wires": [
            [
                "1f3ee82275b60d3a"
            ]
        ],
        "l": false
    },
    {
        "id": "9291dbbb055a3f08",
        "type": "modbus-server",
        "z": "20ecc5cb793b2ee6",
        "name": "本机modbus",
        "logEnabled": false,
        "hostname": "0.0.0.0",
        "serverPort": "10060",
        "responseDelay": 100,
        "delayUnit": "ms",
        "coilsBufferSize": 10000,
        "holdingBufferSize": 10000,
        "inputBufferSize": 10000,
        "discreteBufferSize": 10000,
        "showErrors": false,
        "x": 310,
        "y": 180,
        "wires": [
            [],
            [],
            [],
            [],
            []
        ]
    },
    {
        "id": "5fbc6fce412c5ab8",
        "type": "inject",
        "z": "20ecc5cb793b2ee6",
        "name": "初始化",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{}",
        "payloadType": "jsonata",
        "x": 200,
        "y": 540,
        "wires": [
            [
                "115a9f0e59f34aba",
                "934804a990cde569",
                "99e63c918fa39ab2",
                "010d587e20762c72"
            ]
        ]
    },
    {
        "id": "115a9f0e59f34aba",
        "type": "change",
        "z": "20ecc5cb793b2ee6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "IO",
                "pt": "global",
                "to": "{}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 540,
        "wires": [
            [
                "7c9998981ba3bd11"
            ]
        ]
    },
    {
        "id": "7c9998981ba3bd11",
        "type": "change",
        "z": "20ecc5cb793b2ee6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "IO.AO",
                "pt": "global",
                "to": "{}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "IO.AI",
                "pt": "global",
                "to": "{}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "IO.DO",
                "pt": "global",
                "to": "{}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 540,
        "wires": [
            [
                "2817f570591dafa7"
            ]
        ]
    },
    {
        "id": "44871a7f1c687dd9",
        "type": "inject",
        "z": "20ecc5cb793b2ee6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 410,
        "y": 580,
        "wires": [
            [
                "7c9998981ba3bd11"
            ]
        ]
    },
    {
        "id": "0f42adb68b0a3974",
        "type": "modbus-read",
        "z": "20ecc5cb793b2ee6",
        "name": "controller-analog",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "0",
        "quantity": "20",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "967785e4049706c4",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 580,
        "y": 200,
        "wires": [
            [
                "3ef5c0b75d94258a",
                "cdacdaf5f7367456"
            ],
            []
        ]
    },
    {
        "id": "3ef5c0b75d94258a",
        "type": "debug",
        "z": "20ecc5cb793b2ee6",
        "name": "调试 4",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 220,
        "wires": []
    },
    {
        "id": "f1c754f87be25191",
        "type": "function",
        "z": "20ecc5cb793b2ee6",
        "name": "函数 1",
        "func": "var IO = global.get(\"IO\");\n\nvar arr = [\n    IO.AI.work_object,\n    IO.AI.product_status,\n    IO.AI.screw_status,\n    IO.AI.M1,\n    IO.AI.M2,\n    IO.AI.M3,\n    IO.AI.M4,\n    IO.AI.M5,\n    IO.AI.M6,\n    IO.AI.M7,   \n    IO.AI.material_status, \n    ];\narr = msg.payload;  \nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "934804a990cde569",
        "type": "function",
        "z": "20ecc5cb793b2ee6",
        "name": "螺丝扭力置零",
        "func": "\nglobal.set(\"torques\", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "99e63c918fa39ab2",
        "type": "function",
        "z": "20ecc5cb793b2ee6",
        "name": "物料信息",
        "func": "var materials = [\n    {name:\"M18丝堵\",code:\"c1\",max:100,remain:12,used:14,trash:1,position:1},\n    { name: \"单向阀2\", code: \"c2\", max: 100, remain: 12, used: 14, trash: 1, position: 2 },\n    { name: \"滤芯\", code: \"c3\", max: 100, remain: 12, used: 14, trash: 1, position: 3 },\n    { name: \"单向阀1\", code: \"c1\", max: 100, remain: 12, used: 14, trash: 1, position: 1 },\n    { name: \"M24丝堵\", code: \"c2\", max: 100, remain: 12, used: 14, trash: 1, position: 2 },\n    { name: \"振动盘螺丝\", code: \"c3\", max: 100, remain: 12, used: 14, trash: 1, position: 3 },\n    { name: \"喷油\", code: \"c3\", max: 100, remain: 12, used: 14, trash: 1, position: 3 },\n]\nglobal.set(\"materials\", materials);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "2817f570591dafa7",
        "type": "function",
        "z": "20ecc5cb793b2ee6",
        "name": "函数 18",
        "func": "var IO = global.get(\"IO\");\nvar AO = IO.AO;\nvar AI = IO.AI;\n\nAO.Home = 0;\nAO.Ready = 0;\nAO.error = 0;\nAO.mode = 0;\nAO.status = 0;\nAO.screw_reset = 0;\nAO.screw_run = 0;\nAO.screw_clockwise = 0;\nAO.screw_pause = 0;\nAO.screw_mode = 0;\nAO.work_over = 0;\nAO.M1 = 0;\nAO.M2 = 0;\nAO.M3 = 0;\nAO.M4 = 0;\nAO.M5 = 0;\nAO.M6 = 0;\nAO.M7 = 0;\n\nAI.work_object = 0;\nAI.product_status = 0;\nAI.screw_status = 0;\nAI.M1 = 0;\nAI.M2 = 0;\nAI.M3 = 0;\nAI.M4 = 0;\nAI.M5 = 0;\nAI.M6 = 0;\nAI.M7 = 0;\nAI.material_status = 0;\n\nglobal.set(\"IO\",IO);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "cdacdaf5f7367456",
        "type": "function",
        "z": "20ecc5cb793b2ee6",
        "name": "函数 19",
        "func": "var IO = global.get(\"IO\");\nvar idx = 0;\nIO.AO.Home = msg.payload[idx]; idx ++;\nIO.AO.Ready = msg.payload[idx]; idx++;\nIO.AO.error = msg.payload[idx]; idx++;\nIO.AO.mode = msg.payload[idx]; idx++;\nIO.AO.status = msg.payload[idx]; idx++;\nIO.AO.screw_reset = msg.payload[idx]; idx++;\nIO.AO.screw_run = msg.payload[idx]; idx++;\nIO.AO.screw_clockwise = msg.payload[idx]; idx++;\nIO.AO.screw_pause = msg.payload[idx]; idx++;\nIO.AO.screw_mode = msg.payload[idx]; idx++;\nIO.AO.work_over = msg.payload[idx]; idx++;\nIO.AO.M1 = msg.payload[idx]; idx++;\nIO.AO.M2 = msg.payload[idx]; idx++;\nIO.AO.M3 = msg.payload[idx]; idx++;\nIO.AO.M4 = msg.payload[idx]; idx++;\nIO.AO.M5 = msg.payload[idx]; idx++;\nIO.AO.M6 = msg.payload[idx]; idx++;\nIO.AO.M7 = msg.payload[idx]; idx++;\nglobal.set(\"IO\",IO);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 160,
        "wires": [
            [
                "0a2c7fc64a951652"
            ]
        ]
    },
    {
        "id": "0a2c7fc64a951652",
        "type": "modbus-write",
        "z": "20ecc5cb793b2ee6",
        "name": "localhost",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "MHoldingRegisters",
        "adr": "0",
        "quantity": "20",
        "server": "d6782a77eee52a2e",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 1100,
        "y": 160,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "af831fe136157038",
        "type": "modbus-read",
        "z": "20ecc5cb793b2ee6",
        "name": "localhost-analog",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "20",
        "quantity": "10",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "d6782a77eee52a2e",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 400,
        "y": 420,
        "wires": [
            [
                "f1c754f87be25191"
            ],
            []
        ]
    },
    {
        "id": "010d587e20762c72",
        "type": "function",
        "z": "20ecc5cb793b2ee6",
        "name": "函数 22",
        "func": "\nvar ErrorMap = [\n    \"视觉通信故障\",\n    \"螺丝刀通信故障\",\n    \"伺服1故障\",\n    \"伺服2故障\",\n    \"伺服3故障\",\n    \"伺服4故障\",\n    \"伺服5故障\",\n    \"伺服6故障\",\n    \"伺服7故障\",\n];\n\nglobal.set(\"StationTask_60\", {\n    BillCode: \"-\",\n    ProductCode: \"-\",\n    ProductName: \"-\",\n    ProcessDetail: [{\n        ProcessCode: \"OP160\",\n        ProcessName: \"-\",\n        EquipmentCode: \"OP60\",\n        ProgramNumer: 1,\n        Num: 0,\n        MaterialDetails: [\n\n\n        ]\n    }]\n});\n\n\nglobal.set(\"ErrorMap_60\", ErrorMap);\nconst t = (new Date()).toISOString();\nglobal.set(\"Request_60\", {\n    StartTime: t,\n    EndTime: t,\n    RequestID: \"-\",\n    RequestID_: \"-\",\n    barcode: \"\",\n});\nglobal.set(\"LCS\", \"http://192.168.110.200:9006/openApiUbiquitous/\");\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "5216724c59c530e4",
        "type": "inject",
        "z": "20ecc5cb793b2ee6",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "-",
        "payloadType": "str",
        "x": 410,
        "y": 780,
        "wires": [
            [
                "d4284e2180130236"
            ]
        ]
    },
    {
        "id": "d4284e2180130236",
        "type": "change",
        "z": "20ecc5cb793b2ee6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Request_60.RequestID",
                "pt": "global",
                "to": "-",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "36a89f6b5c0bc662",
        "type": "http in",
        "z": "20ecc5cb793b2ee6",
        "name": "",
        "url": "/60/RequestID",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 570,
        "y": 740,
        "wires": [
            [
                "45e29054f0b73dce",
                "94c705f056ee3ec7"
            ]
        ]
    },
    {
        "id": "45e29054f0b73dce",
        "type": "change",
        "z": "20ecc5cb793b2ee6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "-",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 695,
        "y": 740,
        "wires": [
            [
                "d4284e2180130236"
            ]
        ],
        "l": false
    },
    {
        "id": "94c705f056ee3ec7",
        "type": "http response",
        "z": "20ecc5cb793b2ee6",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 730,
        "y": 700,
        "wires": []
    },
    {
        "id": "d5ab5564c8543dde",
        "type": "inject",
        "z": "20ecc5cb793b2ee6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 620,
        "wires": [
            [
                "934804a990cde569"
            ]
        ]
    }
]