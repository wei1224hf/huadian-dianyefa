- id: 7ea93ba33d73caab
  type: tab
  label: scheduler
  disabled: false
  info: ''
  env: []
- id: a1fe1df9593815c4
  type: http response
  z: 7ea93ba33d73caab
  name: ''
  statusCode: ''
  headers: {}
  x: 610
  'y': 220
  wires: []
- id: 4733043110895b60
  type: http in
  z: 7ea93ba33d73caab
  name: 工位任务接收
  url: /60/ReceiveStationTask
  method: post
  upload: false
  swaggerDoc: ''
  x: 130
  'y': 180
  wires:
    - - 154ad952083142ba
- id: 46dc168ab8505d2a
  type: http in
  z: 7ea93ba33d73caab
  name: 泛在通用写多个接口
  url: /60/WriteValue
  method: post
  upload: false
  swaggerDoc: ''
  x: 170
  'y': 440
  wires:
    - - 80231b7ab58b897b
      - 0adcd572b255d28a
- id: 80231b7ab58b897b
  type: function
  z: 7ea93ba33d73caab
  name: modbus 报文拆分
  func: |-
    var arr = msg.payload;
    for(var i=0;i<arr.length;i++){
        var t = arr[i];
        //
        msg.payload = { value: parseInt(t.Value), 'fc': 6, 'unitid': 1, 'address': parseInt(t.Address), 'quantity': 1 } 
        node.send(msg);
    }
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 390
  'y': 440
  wires:
    - - 222dbbbdd8ce1157
- id: 222dbbbdd8ce1157
  type: modbus-flex-write
  z: 7ea93ba33d73caab
  name: 批量修改modbus值
  showStatusActivities: false
  showErrors: false
  showWarnings: true
  server: d6782a77eee52a2e
  emptyMsgOnFail: false
  keepMsgProperties: false
  delayOnStart: false
  startDelayTime: ''
  x: 670
  'y': 440
  wires:
    - []
    - []
- id: 0adcd572b255d28a
  type: function
  z: 7ea93ba33d73caab
  name: 反馈
  func: |-
    msg.payload = {
        Code: 0,
        Msg: "操作成功"
    };
    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 350
  'y': 500
  wires:
    - - e612d00fa180dc3f
- id: 154ad952083142ba
  type: change
  z: 7ea93ba33d73caab
  name: ''
  rules:
    - t: set
      p: ReceiveStationTask
      pt: global
      to: payload
      tot: msg
  action: ''
  property: ''
  from: ''
  to: ''
  reg: false
  x: 390
  'y': 180
  wires:
    - - a1fe1df9593815c4
      - 0e5d9d751042facc
- id: 0e5d9d751042facc
  type: switch
  z: 7ea93ba33d73caab
  name: 根据产品名称修改程序执行
  property: ReceiveStationTask.ProductName
  propertyType: global
  rules:
    - t: eq
      v: '1'
      vt: str
    - t: eq
      v: '2'
      vt: str
    - t: eq
      v: '3'
      vt: str
  checkall: 'true'
  repair: false
  outputs: 3
  x: 680
  'y': 140
  wires:
    - - bff1a7ae90152e4e
    - - 1f2fb809f2cf2780
    - - ef672b7682431606
- id: bff1a7ae90152e4e
  type: change
  z: 7ea93ba33d73caab
  name: ''
  rules:
    - t: set
      p: IO.AI.work_object
      pt: global
      to: '1'
      tot: num
  action: ''
  property: ''
  from: ''
  to: ''
  reg: false
  x: 990
  'y': 100
  wires:
    - []
- id: 1f2fb809f2cf2780
  type: change
  z: 7ea93ba33d73caab
  name: ''
  rules:
    - t: set
      p: IO.AI.work_object
      pt: global
      to: '2'
      tot: num
  action: ''
  property: ''
  from: ''
  to: ''
  reg: false
  x: 990
  'y': 140
  wires:
    - []
- id: ef672b7682431606
  type: change
  z: 7ea93ba33d73caab
  name: ''
  rules:
    - t: set
      p: IO.AI.work_object
      pt: global
      to: '3'
      tot: num
  action: ''
  property: ''
  from: ''
  to: ''
  reg: false
  x: 990
  'y': 180
  wires:
    - []
- id: cdd0be39d1ddfe4d
  type: http in
  z: 7ea93ba33d73caab
  name: 接收开工信号
  url: /ReceiveStartSignal
  method: post
  upload: false
  swaggerDoc: ''
  x: 130
  'y': 40
  wires:
    - - 3c77f4e183649c54
      - e92aec4ce1a7098c
- id: 70c6ee93a547558c
  type: http response
  z: 7ea93ba33d73caab
  name: ''
  statusCode: ''
  headers: {}
  x: 450
  'y': 100
  wires: []
- id: 3c77f4e183649c54
  type: function
  z: 7ea93ba33d73caab
  name: 反馈
  func: |-
    msg.payload = {
        Code: 0,
        Msg: "操作成功"
    };
    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 330
  'y': 100
  wires:
    - - 70c6ee93a547558c
- id: 4f4a0fa5abc931ee
  type: change
  z: 7ea93ba33d73caab
  name: ''
  rules:
    - t: set
      p: IO.AI.product_status
      pt: global
      to: payload
      tot: msg
  action: ''
  property: ''
  from: ''
  to: ''
  reg: false
  x: 610
  'y': 40
  wires:
    - []
- id: ccbc44ce986db8ce
  type: inject
  z: 7ea93ba33d73caab
  name: ''
  props:
    - p: payload
    - p: topic
      vt: str
  repeat: ''
  crontab: ''
  once: true
  onceDelay: '2'
  topic: ''
  payload: ''
  payloadType: date
  x: 140
  'y': 640
  wires:
    - - fdfd36a41352b7e7
- id: fdfd36a41352b7e7
  type: trigger
  z: 7ea93ba33d73caab
  name: ''
  op1: '1'
  op2: '0'
  op1type: str
  op2type: str
  duration: '-250'
  extend: false
  overrideDelay: false
  units: ms
  reset: ''
  bytopic: all
  topic: topic
  outputs: 1
  x: 330
  'y': 640
  wires:
    - - 871e81ddbcd0e2c8
      - 3db855298746fd70
- id: 6fc4c16f460d3327
  type: http in
  z: 7ea93ba33d73caab
  name: 通用读多个接口
  url: /ReadValue
  method: post
  upload: false
  swaggerDoc: ''
  x: 140
  'y': 540
  wires:
    - - 3cd048c19b6b2385
      - 99c9365df7f076b4
- id: 9eab2bb150a4700b
  type: modbus-flex-getter
  z: 7ea93ba33d73caab
  name: ''
  showStatusActivities: false
  showErrors: false
  showWarnings: true
  logIOActivities: false
  server: d6782a77eee52a2e
  useIOFile: false
  ioFile: ''
  useIOForPayload: false
  emptyMsgOnFail: false
  keepMsgProperties: false
  delayOnStart: false
  startDelayTime: ''
  x: 790
  'y': 540
  wires:
    - - b1db1a2770df34f2
    - []
- id: 3cd048c19b6b2385
  type: change
  z: 7ea93ba33d73caab
  name: ''
  rules:
    - t: set
      p: ReadValue
      pt: global
      to: '[]'
      tot: jsonata
  action: ''
  property: ''
  from: ''
  to: ''
  reg: false
  x: 380
  'y': 540
  wires:
    - - 321c7b763544446d
- id: 321c7b763544446d
  type: function
  z: 7ea93ba33d73caab
  name: modbus 报文拆分
  func: |-
    var arr = msg.payload;
    for(var i=0;i<arr.length;i++){
        var t = arr[i];
        node.send({payload:{fc:3, address: parseInt(t.Address), quantity:1},temp:parseInt(t.Address)});
    }
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 590
  'y': 540
  wires:
    - - 9eab2bb150a4700b
- id: b1db1a2770df34f2
  type: function
  z: 7ea93ba33d73caab
  name: 函数 4
  func: |-
    var arr = global.get("ReadValue");
    arr.push({
        Address: msg.modbusRequest.address,
        Value: msg.payload[0],
        ValueType: "int"
    });
    console.debug(arr);
    global.set("ReadValue",arr);
    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 950
  'y': 540
  wires:
    - []
- id: 35523b70b586fc7f
  type: change
  z: 7ea93ba33d73caab
  name: ''
  rules:
    - t: set
      p: payload.Code
      pt: msg
      to: '0'
      tot: num
    - t: set
      p: payload.Msg
      pt: msg
      to: 操作成功
      tot: str
    - t: set
      p: payload.Data
      pt: msg
      to: ReadValue
      tot: global
  action: ''
  property: ''
  from: ''
  to: ''
  reg: false
  x: 680
  'y': 580
  wires:
    - - 6e21fe6e63c12bd4
- id: e612d00fa180dc3f
  type: http response
  z: 7ea93ba33d73caab
  name: ''
  statusCode: ''
  headers: {}
  x: 470
  'y': 500
  wires: []
- id: 6e21fe6e63c12bd4
  type: http response
  z: 7ea93ba33d73caab
  name: ''
  statusCode: ''
  headers: {}
  x: 830
  'y': 580
  wires: []
- id: 99c9365df7f076b4
  type: delay
  z: 7ea93ba33d73caab
  name: ''
  pauseType: delay
  timeout: '1'
  timeoutUnits: seconds
  rate: '1'
  nbRateUnits: '1'
  rateUnits: second
  randomFirst: '1'
  randomLast: '5'
  randomUnits: seconds
  drop: false
  allowrate: false
  outputs: 1
  x: 320
  'y': 580
  wires:
    - - d306326b5bf01718
- id: cddb487d1cbe3241
  type: rbe
  z: 7ea93ba33d73caab
  name: ''
  func: rbei
  gap: ''
  start: ''
  inout: out
  septopics: false
  property: payload
  topi: topic
  x: 390
  'y': 720
  wires:
    - - 0c8b84a05aa83ab5
      - a545dc42224e88c2
- id: 871e81ddbcd0e2c8
  type: change
  z: 7ea93ba33d73caab
  name: 加工信号完成监听
  rules:
    - t: set
      p: payload
      pt: msg
      to: IO.AO.status
      tot: global
  action: ''
  property: ''
  from: ''
  to: ''
  reg: false
  x: 230
  'y': 720
  wires:
    - - cddb487d1cbe3241
- id: 0c8b84a05aa83ab5
  type: switch
  z: 7ea93ba33d73caab
  name: ''
  property: IO.AO.status
  propertyType: global
  rules:
    - t: eq
      v: '4'
      vt: num
  checkall: 'true'
  repair: false
  outputs: 1
  x: 510
  'y': 720
  wires:
    - - d72a99f95f1edb40
- id: 28c12aa2c6a3dce3
  type: rbe
  z: 7ea93ba33d73caab
  name: ''
  func: rbe
  gap: ''
  start: ''
  inout: out
  septopics: false
  property: payload
  topi: topic
  x: 390
  'y': 780
  wires:
    - - 07a0ef8fe135791e
- id: 3db855298746fd70
  type: change
  z: 7ea93ba33d73caab
  name: 故障信号完成监听
  rules:
    - t: set
      p: payload
      pt: msg
      to: IO.AO.error
      tot: global
  action: ''
  property: ''
  from: ''
  to: ''
  reg: false
  x: 230
  'y': 780
  wires:
    - - 28c12aa2c6a3dce3
- id: 07a0ef8fe135791e
  type: switch
  z: 7ea93ba33d73caab
  name: ''
  property: payload
  propertyType: msg
  rules:
    - t: gt
      v: '0'
      vt: num
  checkall: 'true'
  repair: false
  outputs: 1
  x: 510
  'y': 780
  wires:
    - - 29950c11016cc89c
      - cf9f897c78d7be42
- id: 2f0621a45a34b82b
  type: http request
  z: 7ea93ba33d73caab
  name: ''
  method: POST
  ret: txt
  paytoqs: ignore
  url: 'http://localhost:1880/ReceiveUbiquestionsWarn'
  tls: ''
  persist: false
  proxy: ''
  insecureHTTPParser: false
  authType: ''
  senderr: false
  headers: []
  x: 1120
  'y': 780
  wires:
    - []
- id: b2de3e60122fba7e
  type: change
  z: 7ea93ba33d73caab
  name: 发送报文
  rules:
    - t: set
      p: payload.EquipmentCode
      pt: msg
      to: OP50
      tot: str
    - t: set
      p: payload.EquipmentName
      pt: msg
      to: OP50
      tot: str
    - t: set
      p: payload.Status
      pt: msg
      to: '0'
      tot: num
    - t: set
      p: payload.WarnContent
      pt: msg
      to: errorMsg
      tot: global
  action: ''
  property: ''
  from: ''
  to: ''
  reg: false
  x: 840
  'y': 780
  wires:
    - - 061d8b56c2524449
- id: 061d8b56c2524449
  type: change
  z: 7ea93ba33d73caab
  name: 发送报文
  rules:
    - t: set
      p: payload
      pt: msg
      to: '[msg.payload]'
      tot: jsonata
  action: ''
  property: ''
  from: ''
  to: ''
  reg: false
  x: 980
  'y': 780
  wires:
    - - 2f0621a45a34b82b
- id: e92aec4ce1a7098c
  type: function
  z: 7ea93ba33d73caab
  name: 函数 5
  func: 'return {payload : parseInt(msg.payload)};'
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 330
  'y': 40
  wires:
    - - 4f4a0fa5abc931ee
- id: d306326b5bf01718
  type: change
  z: 7ea93ba33d73caab
  name: ''
  rules:
    - t: set
      p: payload
      pt: msg
      to: '{}'
      tot: jsonata
  action: ''
  property: ''
  from: ''
  to: ''
  reg: false
  x: 490
  'y': 580
  wires:
    - - 35523b70b586fc7f
- id: 29950c11016cc89c
  type: change
  z: 7ea93ba33d73caab
  name: 发送报文
  rules:
    - t: set
      p: payload
      pt: msg
      to: '{}'
      tot: jsonata
  action: ''
  property: ''
  from: ''
  to: ''
  reg: false
  x: 680
  'y': 780
  wires:
    - - b2de3e60122fba7e
- id: cf9f897c78d7be42
  type: function
  z: 7ea93ba33d73caab
  name: 函数 10
  func: |-
    var errorMap = global.get("errorMap");
    var errorMsg = errorMap[msg.payload];
    global.set("errorMsg",errorMsg);
    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 680
  'y': 820
  wires:
    - []
- id: 895ab5888ce9d012
  type: http in
  z: 7ea93ba33d73caab
  name: 动作执行
  url: /60/DoAction
  method: post
  upload: false
  swaggerDoc: ''
  x: 140
  'y': 380
  wires:
    - - 1a57418033fe0137
      - a6b15b16dbe29a69
- id: 9cad25a40f338606
  type: function
  z: 7ea93ba33d73caab
  name: modbus 报文拆分
  func: >-
    var t = msg.payload;

    if(t.Value==0 && t.Address==4060){
        t.RequestID = "-";
    }

    var Request = global.get("Request_60")

    Request.RequestID = t.RequestID;

    var t2 = (new Date()).toISOString();

    Request.StartTime = t2;

    Request.EndTime = "";

    global.set("torques", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);


    msg.payload = { value: parseInt(t.Value), 'fc': 6, 'unitid': 1, 'address':
    parseInt(t.Address), 'quantity': 1 } 

    node.send(msg);
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 530
  'y': 340
  wires:
    - - 222dbbbdd8ce1157
- id: e759e7cdef9ed3b0
  type: switch
  z: 7ea93ba33d73caab
  name: ''
  property: Request_60.RequestID
  propertyType: global
  rules:
    - t: eq
      v: '-'
      vt: str
    - t: else
  checkall: 'true'
  repair: false
  outputs: 2
  x: 350
  'y': 380
  wires:
    - - 9cad25a40f338606
      - 5247ce7eefc505b5
      - 1095566fd472c389
    - - 49cabd21c330f7f7
- id: 5247ce7eefc505b5
  type: function
  z: 7ea93ba33d73caab
  name: 反馈
  func: |-
    msg.payload = {
        Code: 0,
        Msg: "操作成功"
    };
    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 490
  'y': 300
  wires:
    - - aaeb451f35e295ca
- id: aaeb451f35e295ca
  type: http response
  z: 7ea93ba33d73caab
  name: ''
  statusCode: ''
  headers: {}
  x: 650
  'y': 300
  wires: []
- id: 49cabd21c330f7f7
  type: function
  z: 7ea93ba33d73caab
  name: 反馈
  func: |-
    msg.payload = {
        Code: 1,
        Msg: "上一个动作还未完成"
    };
    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 490
  'y': 380
  wires:
    - - aaeb451f35e295ca
- id: 4b4e1a15108f41fd
  type: modbus-write
  z: 7ea93ba33d73caab
  name: 调度器命令下发
  showStatusActivities: false
  showErrors: false
  showWarnings: true
  unitid: '1'
  dataType: MHoldingRegisters
  adr: '22'
  quantity: '1'
  server: 967785e4049706c4
  emptyMsgOnFail: false
  keepMsgProperties: false
  delayOnStart: false
  startDelayTime: ''
  x: 1100
  'y': 340
  wires:
    - []
    - []
- id: 1095566fd472c389
  type: function
  z: 7ea93ba33d73caab
  name: 函数 23
  func: |-
    msg.payload = [msg.payload.Value];
    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 760
  'y': 340
  wires:
    - - 4b4e1a15108f41fd
      - 619b8d05efef8a97
- id: 619b8d05efef8a97
  type: delay
  z: 7ea93ba33d73caab
  name: ''
  pauseType: delay
  timeout: '3'
  timeoutUnits: seconds
  rate: '1'
  nbRateUnits: '1'
  rateUnits: second
  randomFirst: '1'
  randomLast: '5'
  randomUnits: seconds
  drop: false
  allowrate: false
  outputs: 1
  x: 940
  'y': 280
  wires:
    - - 5388d30445411e50
- id: 5388d30445411e50
  type: function
  z: 7ea93ba33d73caab
  name: 函数 24
  func: |-
    msg.payload = [0];
    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 1080
  'y': 280
  wires:
    - - 4b4e1a15108f41fd
- id: c5e61641d6e5b189
  type: http request
  z: 7ea93ba33d73caab
  name: ''
  method: POST
  ret: txt
  paytoqs: ignore
  url: ''
  tls: ''
  persist: false
  proxy: ''
  insecureHTTPParser: false
  authType: ''
  senderr: false
  headers: []
  x: 940
  'y': 720
  wires:
    - - 60076d6a67fc4ed3
      - 366db6dd22a1471c
- id: 366db6dd22a1471c
  type: change
  z: 7ea93ba33d73caab
  name: ''
  rules:
    - t: set
      p: Request_60.RequestID
      pt: global
      to: '-'
      tot: str
    - t: set
      p: Request_60.RequestID_
      pt: global
      to: '-'
      tot: str
  action: ''
  property: ''
  from: ''
  to: ''
  reg: false
  x: 1240
  'y': 720
  wires:
    - []
- id: d72a99f95f1edb40
  type: function
  z: 7ea93ba33d73caab
  name: 生产完成
  func: |-
    const t = (new Date()).toISOString();
    var Request = global.get("Request_60");
    Request.EndTime = t;

    msg.payload = Request;

    msg.url = global.get("LCS") + "actionCompletedSignal";
    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 800
  'y': 720
  wires:
    - - c5e61641d6e5b189
- id: efd3c09feee9ba70
  type: http response
  z: 7ea93ba33d73caab
  name: ''
  statusCode: ''
  headers: {}
  x: 810
  'y': 880
  wires: []
- id: 5e8425ab74d15c64
  type: function
  z: 7ea93ba33d73caab
  name: 反馈
  func: "var IO = global.get(\"IO\");\nmsg.payload = {\n\t\"Code\": 0,\n\t\"Msg\": \"操作成功\",\n\t\"Data\": [{\n\t\t\"StationCode\": \"OP_60\",\n\t\t\"StationName\": \"丝堵装配\",\n\t\t\"Status\": IO.AO.status\n\t}]\n};\nreturn msg;"
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 650
  'y': 880
  wires:
    - - efd3c09feee9ba70
- id: d3c523395d32e574
  type: http in
  z: 7ea93ba33d73caab
  name: 工位状态-轮询
  url: /60/GetStationState
  method: post
  upload: false
  swaggerDoc: ''
  x: 150
  'y': 880
  wires:
    - - 5e8425ab74d15c64
- id: f645e7dce8794c08
  type: file
  z: 7ea93ba33d73caab
  name: ''
  filename: 'C:/tmp/robot_status.txt'
  filenameType: str
  appendNewline: true
  createDir: false
  overwriteFile: 'false'
  encoding: none
  x: 660
  'y': 660
  wires:
    - []
- id: a545dc42224e88c2
  type: function
  z: 7ea93ba33d73caab
  name: 函数 8
  func: |-
    var txt = msg.payload;
    var date = (new Date()).toISOString();
    msg.payload = date + " : " + txt;
    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 495
  'y': 660
  wires:
    - - f645e7dce8794c08
  l: false
- id: 60076d6a67fc4ed3
  type: debug
  z: 7ea93ba33d73caab
  name: 调试 25
  active: true
  tosidebar: true
  console: false
  tostatus: false
  complete: 'false'
  statusVal: ''
  statusType: auto
  x: 1080
  'y': 680
  wires: []
- id: 1a57418033fe0137
  type: switch
  z: 7ea93ba33d73caab
  name: ''
  property: IO.AO.status
  propertyType: global
  rules:
    - t: eq
      v: '22'
      vt: num
    - t: else
  checkall: 'true'
  repair: false
  outputs: 2
  x: 255
  'y': 380
  wires:
    - - e759e7cdef9ed3b0
    - - f12d04b26351639b
  l: false
- id: f12d04b26351639b
  type: function
  z: 7ea93ba33d73caab
  name: 反馈
  func: |-
    const IO = global.get("IO_60");
    msg.payload = {
        Code: 1,
        Msg: "当前状态无法执行动作:"+IO.AI.status,
    };
    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 490
  'y': 260
  wires:
    - - aaeb451f35e295ca
- id: def7b74dd73c77b9
  type: http in
  z: 7ea93ba33d73caab
  name: ''
  url: /60/data
  method: get
  upload: false
  swaggerDoc: ''
  x: 150
  'y': 960
  wires:
    - - 9bc3906f868c0782
- id: 1e57f8f96e834f72
  type: http response
  z: 7ea93ba33d73caab
  name: ''
  statusCode: ''
  headers: {}
  x: 610
  'y': 960
  wires: []
- id: 9bc3906f868c0782
  type: function
  z: 7ea93ba33d73caab
  name: function 30
  func: |-
    const p = msg.payload.key;
    var arr = p.split(".");
    const obj = global.get(arr[0]);
    eval("var "+arr[0]+" = obj;");
    console.debug(1);
    eval("msg.payload = "+p+";");
    console.debug(2);
    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 370
  'y': 960
  wires:
    - - 1e57f8f96e834f72
- id: 1f3ee82275b60d3a
  type: file
  z: 7ea93ba33d73caab
  name: ''
  filename: 'C:/tmp/request.txt'
  filenameType: str
  appendNewline: true
  createDir: false
  overwriteFile: 'false'
  encoding: none
  x: 270
  'y': 300
  wires:
    - []
- id: a6b15b16dbe29a69
  type: function
  z: 7ea93ba33d73caab
  name: 函数 26
  func: |-
    var txt = msg.payload.Value + "," + msg.payload.RequestID;
    var date = (new Date()).toISOString();
    msg.payload = date + " : " + txt;
    return msg;
  outputs: 1
  timeout: 0
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 145
  'y': 300
  wires:
    - - 1f3ee82275b60d3a
  l: false
