[
  {
    "id": "b60c316ff0a6b6c0",
    "type": "tab",
    "label": "scheduler-50",
    "disabled": false,
    "info": "",
    "env": []
  },
  {
    "id": "5b4e21d2e264a3b8",
    "type": "inject",
    "z": "b60c316ff0a6b6c0",
    "name": "",
    "props": [
      {
        "p": "payload"
      },
      {
        "p": "topic",
        "vt": "str"
      }
    ],
    "repeat": "",
    "crontab": "",
    "once": true,
    "onceDelay": "4",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 120,
    "y": 640,
    "wires": [
      [
        "3a2763e16069b1ca"
      ]
    ]
  },
  {
    "id": "3a2763e16069b1ca",
    "type": "trigger",
    "z": "b60c316ff0a6b6c0",
    "name": "",
    "op1": "1",
    "op2": "0",
    "op1type": "str",
    "op2type": "str",
    "duration": "-250",
    "extend": false,
    "overrideDelay": false,
    "units": "ms",
    "reset": "",
    "bytopic": "all",
    "topic": "topic",
    "outputs": 1,
    "x": 310,
    "y": 640,
    "wires": [
      [
        "b432f21ea8a0c076",
        "6e1662cb6cf9503d"
      ]
    ]
  },
  {
    "id": "7bd5064aa60abc6c",
    "type": "http in",
    "z": "b60c316ff0a6b6c0",
    "name": "通用读多个接口",
    "url": "/50/ReadValue",
    "method": "post",
    "upload": false,
    "swaggerDoc": "",
    "x": 120,
    "y": 480,
    "wires": [
      [
        "abf419e4087513ea",
        "46cf809cb9daa3a5"
      ]
    ]
  },
  {
    "id": "23ed647795da08ac",
    "type": "modbus-flex-getter",
    "z": "b60c316ff0a6b6c0",
    "name": "",
    "showStatusActivities": false,
    "showErrors": false,
    "showWarnings": true,
    "logIOActivities": false,
    "server": "f45c8577844ced46",
    "useIOFile": false,
    "ioFile": "",
    "useIOForPayload": false,
    "emptyMsgOnFail": false,
    "keepMsgProperties": false,
    "delayOnStart": false,
    "startDelayTime": "",
    "x": 830,
    "y": 480,
    "wires": [
      [
        "4356d9605954ea3e"
      ],
      [
        "53462c6c5f5c6254"
      ]
    ]
  },
  {
    "id": "abf419e4087513ea",
    "type": "change",
    "z": "b60c316ff0a6b6c0",
    "name": "",
    "rules": [
      {
        "t": "set",
        "p": "ReadValue_50",
        "pt": "global",
        "to": "[]",
        "tot": "jsonata"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 380,
    "y": 480,
    "wires": [
      [
        "6d2816ce6f58614a"
      ]
    ]
  },
  {
    "id": "6d2816ce6f58614a",
    "type": "function",
    "z": "b60c316ff0a6b6c0",
    "name": "modbus 报文拆分",
    "func": "var arr = msg.payload;\nfor(var i=0;i<arr.length;i++){\n    var t = arr[i];\n    node.send({payload:{fc:3, address: parseInt(t.Address), quantity:1},temp:parseInt(t.Address)});\n}",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 630,
    "y": 480,
    "wires": [
      [
        "23ed647795da08ac"
      ]
    ]
  },
  {
    "id": "4356d9605954ea3e",
    "type": "function",
    "z": "b60c316ff0a6b6c0",
    "name": "函数 4",
    "func": "var arr = global.get(\"ReadValue_50\");\narr.push({\n    Address: msg.modbusRequest.address,\n    Value: msg.payload[0],\n    ValueType: \"int\"\n});\nconsole.debug(arr);\nglobal.set(\"ReadValue_50\",arr);\nreturn msg;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1010,
    "y": 480,
    "wires": [
      []
    ]
  },
  {
    "id": "bf64874f8de1d1f2",
    "type": "change",
    "z": "b60c316ff0a6b6c0",
    "name": "",
    "rules": [
      {
        "t": "set",
        "p": "payload.Code",
        "pt": "msg",
        "to": "0",
        "tot": "num"
      },
      {
        "t": "set",
        "p": "payload.Msg",
        "pt": "msg",
        "to": "操作成功",
        "tot": "str"
      },
      {
        "t": "set",
        "p": "payload.Data",
        "pt": "msg",
        "to": "ReadValue_50",
        "tot": "global"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 660,
    "y": 520,
    "wires": [
      [
        "8c67c6b28b652f9f"
      ]
    ]
  },
  {
    "id": "8c67c6b28b652f9f",
    "type": "http response",
    "z": "b60c316ff0a6b6c0",
    "name": "",
    "statusCode": "",
    "headers": {},
    "x": 810,
    "y": 520,
    "wires": []
  },
  {
    "id": "46cf809cb9daa3a5",
    "type": "delay",
    "z": "b60c316ff0a6b6c0",
    "name": "",
    "pauseType": "delay",
    "timeout": "1",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "1",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": false,
    "allowrate": false,
    "outputs": 1,
    "x": 280,
    "y": 520,
    "wires": [
      [
        "e55f366c9e5b8dd4"
      ]
    ]
  },
  {
    "id": "a7fe531c9b8b9c41",
    "type": "rbe",
    "z": "b60c316ff0a6b6c0",
    "name": "",
    "func": "rbei",
    "gap": "",
    "start": "",
    "inout": "out",
    "septopics": false,
    "property": "payload",
    "topi": "topic",
    "x": 335,
    "y": 720,
    "wires": [
      [
        "1796bf9ffd5535ad"
      ]
    ],
    "l": false
  },
  {
    "id": "b432f21ea8a0c076",
    "type": "change",
    "z": "b60c316ff0a6b6c0",
    "name": "状态变化监听",
    "rules": [
      {
        "t": "set",
        "p": "payload",
        "pt": "msg",
        "to": "IO_50.AI.status",
        "tot": "global"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 200,
    "y": 720,
    "wires": [
      [
        "a7fe531c9b8b9c41"
      ]
    ]
  },
  {
    "id": "1796bf9ffd5535ad",
    "type": "switch",
    "z": "b60c316ff0a6b6c0",
    "name": "",
    "property": "payload",
    "propertyType": "msg",
    "rules": [
      {
        "t": "eq",
        "v": "5",
        "vt": "num"
      },
      {
        "t": "btwn",
        "v": "40",
        "vt": "num",
        "v2": "49",
        "v2t": "num"
      }
    ],
    "checkall": "true",
    "repair": false,
    "outputs": 2,
    "x": 490,
    "y": 720,
    "wires": [
      [
        "de27a252b48ff1b5"
      ],
      [
        "d63158632bc80206"
      ]
    ]
  },
  {
    "id": "44d4e7db3305d62e",
    "type": "http request",
    "z": "b60c316ff0a6b6c0",
    "name": "",
    "method": "POST",
    "ret": "txt",
    "paytoqs": "ignore",
    "url": "",
    "tls": "",
    "persist": false,
    "proxy": "",
    "insecureHTTPParser": false,
    "authType": "",
    "senderr": false,
    "headers": [],
    "x": 1060,
    "y": 720,
    "wires": [
      [
        "b62ca316eb13ad1a"
      ]
    ]
  },
  {
    "id": "c776a0aa2699059e",
    "type": "rbe",
    "z": "b60c316ff0a6b6c0",
    "name": "",
    "func": "rbei",
    "gap": "",
    "start": "",
    "inout": "out",
    "septopics": false,
    "property": "payload",
    "topi": "topic",
    "x": 335,
    "y": 800,
    "wires": [
      [
        "b53c94fcf893ec7d"
      ]
    ],
    "l": false
  },
  {
    "id": "6e1662cb6cf9503d",
    "type": "change",
    "z": "b60c316ff0a6b6c0",
    "name": "故障信号监听",
    "rules": [
      {
        "t": "set",
        "p": "payload",
        "pt": "msg",
        "to": "IO_50.AI.error",
        "tot": "global"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 200,
    "y": 800,
    "wires": [
      [
        "c776a0aa2699059e"
      ]
    ]
  },
  {
    "id": "b53c94fcf893ec7d",
    "type": "switch",
    "z": "b60c316ff0a6b6c0",
    "name": "",
    "property": "payload",
    "propertyType": "msg",
    "rules": [
      {
        "t": "gt",
        "v": "0",
        "vt": "num"
      }
    ],
    "checkall": "true",
    "repair": false,
    "outputs": 1,
    "x": 490,
    "y": 800,
    "wires": [
      [
        "c494ac7f58b40cf2"
      ]
    ]
  },
  {
    "id": "f25ba9e302a386fd",
    "type": "http request",
    "z": "b60c316ff0a6b6c0",
    "name": "",
    "method": "POST",
    "ret": "txt",
    "paytoqs": "ignore",
    "url": "",
    "tls": "",
    "persist": false,
    "proxy": "",
    "insecureHTTPParser": false,
    "authType": "",
    "senderr": false,
    "headers": [
      {
        "keyType": "other",
        "keyValue": "Accept",
        "valueType": "other",
        "valueValue": "application/json"
      }
    ],
    "x": 860,
    "y": 800,
    "wires": [
      [
        "f4e4deeed0f9c88a"
      ]
    ]
  },
  {
    "id": "53462c6c5f5c6254",
    "type": "debug",
    "z": "b60c316ff0a6b6c0",
    "name": "调试 15",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 1000,
    "y": 540,
    "wires": []
  },
  {
    "id": "e55f366c9e5b8dd4",
    "type": "change",
    "z": "b60c316ff0a6b6c0",
    "name": "",
    "rules": [
      {
        "t": "set",
        "p": "payload",
        "pt": "msg",
        "to": "{}",
        "tot": "jsonata"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 450,
    "y": 520,
    "wires": [
      [
        "bf64874f8de1d1f2"
      ]
    ]
  },
  {
    "id": "b62ca316eb13ad1a",
    "type": "debug",
    "z": "b60c316ff0a6b6c0",
    "name": "调试 16",
    "active": false,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 1220,
    "y": 720,
    "wires": []
  },
  {
    "id": "f4e4deeed0f9c88a",
    "type": "debug",
    "z": "b60c316ff0a6b6c0",
    "name": "调试 17",
    "active": false,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "payload",
    "targetType": "msg",
    "statusVal": "",
    "statusType": "auto",
    "x": 1020,
    "y": 800,
    "wires": []
  },
  {
    "id": "ede19c1dd1a48804",
    "type": "function",
    "z": "b60c316ff0a6b6c0",
    "name": "function 31",
    "func": "msg.payload = {\n \t\"requestID\": global.get(\"RequestID_50\"),\n\t\"startTime\": global.get(\"StartTime_50\"),\n\t\"endTime\": global.get(\"EndTime_50\")\n};\n\nmsg.url = global.get(\"LCS\")+\"actionCompletedSignal\";\n//msg.method = \"POST\";\nreturn msg;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 860,
    "y": 720,
    "wires": [
      [
        "44d4e7db3305d62e"
      ]
    ]
  },
  {
    "id": "c494ac7f58b40cf2",
    "type": "function",
    "z": "b60c316ff0a6b6c0",
    "name": "function 32",
    "func": "var ErrorMap_60 = global.get(\"ErrorMap_50\");\nmsg.payload ={\t\t\t\t\n\tEquipmentCode: \"OP50\",\t\t\t\n\tEquipmentName: \"泛在控制器\",\t\t\t\n\tStatus: 0,\n    WarnContent: ErrorMap_50[msg.payload]\t\t\n};\nmsg.url = global.get(\"LCS\")+\"receiveUbiquitousWarn\";\n\nreturn msg;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 660,
    "y": 800,
    "wires": [
      [
        "f25ba9e302a386fd"
      ]
    ]
  },
  {
    "id": "d63158632bc80206",
    "type": "function",
    "z": "b60c316ff0a6b6c0",
    "name": "开始生产",
    "func": "\nvar t = (new Date()).toISOString();\nglobal.set(\"StartTime_50\", t);\n\n",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 660,
    "y": 740,
    "wires": [
      []
    ]
  },
  {
    "id": "de27a252b48ff1b5",
    "type": "function",
    "z": "b60c316ff0a6b6c0",
    "name": "生产完成",
    "func": "\nvar t = (new Date()).toISOString();\nglobal.set(\"EndTime_50\", t);\nglobal.set(\"RequestID_50\", \"-\");\n\n\n\nreturn msg;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 660,
    "y": 680,
    "wires": [
      [
        "ede19c1dd1a48804"
      ]
    ]
  },
  {
    "id": "fbf2750d95e5d960",
    "type": "inject",
    "z": "b60c316ff0a6b6c0",
    "name": "",
    "props": [
      {
        "p": "payload"
      },
      {
        "p": "topic",
        "vt": "str"
      }
    ],
    "repeat": "",
    "crontab": "",
    "once": false,
    "onceDelay": 0.1,
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 490,
    "y": 680,
    "wires": [
      [
        "de27a252b48ff1b5"
      ]
    ]
  },
  {
    "id": "fb27549faaf4df38",
    "type": "http response",
    "z": "b60c316ff0a6b6c0",
    "name": "",
    "statusCode": "",
    "headers": {},
    "x": 1090,
    "y": 220,
    "wires": []
  },
  {
    "id": "4a2521e0cea6f181",
    "type": "http in",
    "z": "b60c316ff0a6b6c0",
    "name": "工位任务接收",
    "url": "/50/ReceiveStationTask",
    "method": "post",
    "upload": false,
    "swaggerDoc": "",
    "x": 110,
    "y": 240,
    "wires": [
      [
        "249c501a144c7661"
      ]
    ]
  },
  {
    "id": "6a4c6646110d08c5",
    "type": "http in",
    "z": "b60c316ff0a6b6c0",
    "name": "泛在通用写多个接口",
    "url": "/50/WriteValue",
    "method": "post",
    "upload": false,
    "swaggerDoc": "",
    "x": 130,
    "y": 440,
    "wires": [
      [
        "728d158acf67d988"
      ]
    ]
  },
  {
    "id": "728d158acf67d988",
    "type": "function",
    "z": "b60c316ff0a6b6c0",
    "name": "modbus 报文拆分",
    "func": "var arr = msg.payload;\nfor(var i=0;i<arr.length;i++){\n    var t = arr[i];\n    msg.payload = { value: parseInt(t.Value), 'fc': 6, 'unitid': 1, 'address': parseInt(t.Address), 'quantity': 1 } \n    node.send(msg);\n}",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 350,
    "y": 440,
    "wires": [
      [
        "f6cce74e561807da"
      ]
    ]
  },
  {
    "id": "f6cce74e561807da",
    "type": "modbus-flex-write",
    "z": "b60c316ff0a6b6c0",
    "name": "批量修改modbus值",
    "showStatusActivities": false,
    "showErrors": false,
    "showWarnings": true,
    "server": "f45c8577844ced46",
    "emptyMsgOnFail": false,
    "keepMsgProperties": false,
    "delayOnStart": false,
    "startDelayTime": "",
    "x": 830,
    "y": 440,
    "wires": [
      [],
      []
    ]
  },
  {
    "id": "4b08f8c03e37af75",
    "type": "change",
    "z": "b60c316ff0a6b6c0",
    "name": "",
    "rules": [
      {
        "t": "set",
        "p": "StationTask_50",
        "pt": "global",
        "to": "payload",
        "tot": "msg"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 680,
    "y": 240,
    "wires": [
      [
        "5422fe3beb921c6c"
      ]
    ]
  },
  {
    "id": "5422fe3beb921c6c",
    "type": "function",
    "z": "b60c316ff0a6b6c0",
    "name": "反馈",
    "func": "msg.payload = {\n    Code: 0,\n    Msg:\"操作成功\"\n};\nreturn msg;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 930,
    "y": 240,
    "wires": [
      [
        "fb27549faaf4df38"
      ]
    ]
  },
  {
    "id": "5f2d50fe11da5433",
    "type": "http in",
    "z": "b60c316ff0a6b6c0",
    "name": "ReceiveEndSignal",
    "url": "/50/ReceiveEndSignal",
    "method": "post",
    "upload": false,
    "swaggerDoc": "",
    "x": 130,
    "y": 120,
    "wires": [
      [
        "aa38984a734507e1"
      ]
    ]
  },
  {
    "id": "13f19cbb678fecfc",
    "type": "http response",
    "z": "b60c316ff0a6b6c0",
    "name": "",
    "statusCode": "",
    "headers": {},
    "x": 750,
    "y": 140,
    "wires": []
  },
  {
    "id": "a87a85b7794a1a6e",
    "type": "function",
    "z": "b60c316ff0a6b6c0",
    "name": "反馈",
    "func": "msg.payload = {\n    Code: 0,\n    Msg: \"操作成功\"\n};\nreturn msg;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 610,
    "y": 120,
    "wires": [
      [
        "13f19cbb678fecfc"
      ]
    ]
  },
  {
    "id": "aa38984a734507e1",
    "type": "switch",
    "z": "b60c316ff0a6b6c0",
    "name": "",
    "property": "payload.BillCode",
    "propertyType": "msg",
    "rules": [
      {
        "t": "eq",
        "v": "StationTask_50.BillCode",
        "vt": "global"
      },
      {
        "t": "else"
      }
    ],
    "checkall": "true",
    "repair": false,
    "outputs": 2,
    "x": 350,
    "y": 120,
    "wires": [
      [
        "410e90894f9b82f8",
        "a87a85b7794a1a6e",
        "168aa29d0a82a483"
      ],
      [
        "649e5fadeb818fa6"
      ]
    ]
  },
  {
    "id": "410e90894f9b82f8",
    "type": "change",
    "z": "b60c316ff0a6b6c0",
    "name": "",
    "rules": [
      {
        "t": "set",
        "p": "IO_50.AO.production",
        "pt": "global",
        "to": "0",
        "tot": "num"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 700,
    "y": 80,
    "wires": [
      []
    ]
  },
  {
    "id": "649e5fadeb818fa6",
    "type": "function",
    "z": "b60c316ff0a6b6c0",
    "name": "反馈",
    "func": "msg.payload = {\n    Code: 1,\n    Msg: \"操作失败,当前设备执行的工单和下发的结束工单不一致\"\n};\nreturn msg;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 610,
    "y": 160,
    "wires": [
      [
        "13f19cbb678fecfc"
      ]
    ]
  },
  {
    "id": "1d0ee5f6d13974f7",
    "type": "http response",
    "z": "b60c316ff0a6b6c0",
    "name": "",
    "statusCode": "",
    "headers": {},
    "x": 750,
    "y": 280,
    "wires": []
  },
  {
    "id": "b24efc27b16de1e8",
    "type": "http in",
    "z": "b60c316ff0a6b6c0",
    "name": "工位状态-轮询",
    "url": "/50/GetStationState",
    "method": "post",
    "upload": false,
    "swaggerDoc": "",
    "x": 110,
    "y": 280,
    "wires": [
      [
        "a02d16b74ebe1b1d"
      ]
    ]
  },
  {
    "id": "a02d16b74ebe1b1d",
    "type": "function",
    "z": "b60c316ff0a6b6c0",
    "name": "反馈",
    "func": "var IO_50 = global.get(\"IO_50\");\nmsg.payload = {\n\t\"Code\": 0,\n\t\"Msg\": \"操作成功\",\n\t\"Data\": [{\n\t\t\"StationCode\": \"OP50\",\n\t\t\"StationName\": \"阀串拧紧\",\n\t\t\"Status\": IO_50.AI.status\n\t}]\n};\nreturn msg;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 610,
    "y": 280,
    "wires": [
      [
        "1d0ee5f6d13974f7"
      ]
    ]
  },
  {
    "id": "a28f18a533722341",
    "type": "http in",
    "z": "b60c316ff0a6b6c0",
    "name": "动作执行",
    "url": "/50/DoAction",
    "method": "post",
    "upload": false,
    "swaggerDoc": "",
    "x": 100,
    "y": 400,
    "wires": [
      [
        "b3b717bf872f4930"
      ]
    ]
  },
  {
    "id": "cd601a9f82909663",
    "type": "function",
    "z": "b60c316ff0a6b6c0",
    "name": "modbus 报文拆分",
    "func": "var t = msg.payload;\nvar RequestID = t.RequestID;\nglobal.set(\"RequestID_90\",RequestID);\nmsg.payload = { value: parseInt(t.Value), 'fc': 6, 'unitid': 1, 'address': parseInt(t.Address), 'quantity': 1 } \nnode.send(msg);",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 490,
    "y": 360,
    "wires": [
      [
        "f6cce74e561807da"
      ]
    ]
  },
  {
    "id": "b3b717bf872f4930",
    "type": "switch",
    "z": "b60c316ff0a6b6c0",
    "name": "",
    "property": "RequestID_90",
    "propertyType": "global",
    "rules": [
      {
        "t": "eq",
        "v": "-",
        "vt": "str"
      },
      {
        "t": "else"
      }
    ],
    "checkall": "true",
    "repair": false,
    "outputs": 2,
    "x": 310,
    "y": 400,
    "wires": [
      [
        "cd601a9f82909663",
        "67c0b81032f7cf6e"
      ],
      [
        "d16be92a0471a0e4"
      ]
    ]
  },
  {
    "id": "67c0b81032f7cf6e",
    "type": "function",
    "z": "b60c316ff0a6b6c0",
    "name": "反馈",
    "func": "msg.payload = {\n    Code: 0,\n    Msg: \"操作成功\"\n};\nreturn msg;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 450,
    "y": 320,
    "wires": [
      [
        "2c21729d8f477c36"
      ]
    ]
  },
  {
    "id": "2c21729d8f477c36",
    "type": "http response",
    "z": "b60c316ff0a6b6c0",
    "name": "",
    "statusCode": "",
    "headers": {},
    "x": 610,
    "y": 320,
    "wires": []
  },
  {
    "id": "d16be92a0471a0e4",
    "type": "function",
    "z": "b60c316ff0a6b6c0",
    "name": "反馈",
    "func": "msg.payload = {\n    Code: 1,\n    Msg: \"上一个动作还未完成\"\n};\nreturn msg;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 450,
    "y": 400,
    "wires": [
      [
        "2c21729d8f477c36"
      ]
    ]
  },
  {
    "id": "249c501a144c7661",
    "type": "function",
    "z": "b60c316ff0a6b6c0",
    "name": "格式解析",
    "func": "msg.error = 0;\n\nvar task = global.get(\"StationTask_50\");\nif(task.BillCode!='-'){\n    msg.error = 1;\n    msg.errorMsg = \"previese task is on going\";\n    return msg;\n}\n\nconst data = msg.payload;\nif((typeof(data)!='object')){\n    msg.error = 2;\n    msg.errorMsg = \"format wrong\";\n    return msg;\n}\n\nif (!('BillCode' in data)){\n    msg.error = 3;\n    msg.errorMsg = \"no BillCode\";\n    return msg;\n}\nif (!('ProductCode' in data)){\n    msg.error = 4;\n    msg.errorMsg = \"no ProductCode\";\n    return msg;\n}\n\nif (!('ProcessDetail' in data)){\n    msg.error = 5;\n    msg.errorMsg = \"no ProcessDetail\";\n    return msg;\n}\n\nif(data.ProcessDetail.length==1){\n    const data2 = data.ProcessDetail[0];\n    if (!('EquipmentCode' in data2)){\n        msg.error = 6;\n        msg.errorMsg = \"no EquipmentCode\";\n        return msg;\n    }\n    if(data2.EquipmentCode!='OP50'){\n        msg.error = 7;\n        msg.errorMsg = \"no OP50\";\n        return msg;\n    }\n    if (!('Num' in data2)){\n        msg.error = 8;\n        msg.errorMsg = \"no Num\";\n        return msg;\n    }\n    data2.done = 0\n}\nelse{\n    msg.error = 13;\n    msg.errorMsg = \"ProcessDetail.length should be 1\";\n    return msg;\n}\n\n\n\nreturn msg;\n",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 280,
    "y": 240,
    "wires": [
      [
        "7450e7532a9133c3",
        "1426ab1e430853ca"
      ]
    ]
  },
  {
    "id": "7450e7532a9133c3",
    "type": "switch",
    "z": "b60c316ff0a6b6c0",
    "name": "",
    "property": "error",
    "propertyType": "msg",
    "rules": [
      {
        "t": "eq",
        "v": "0",
        "vt": "num"
      },
      {
        "t": "else"
      }
    ],
    "checkall": "true",
    "repair": false,
    "outputs": 2,
    "x": 450,
    "y": 240,
    "wires": [
      [
        "4b08f8c03e37af75"
      ],
      [
        "6b55599cd966446c"
      ]
    ]
  },
  {
    "id": "6b55599cd966446c",
    "type": "function",
    "z": "b60c316ff0a6b6c0",
    "name": "反馈",
    "func": "msg.payload = {\n    Code: 1,\n    Msg:\"失败\"+msg.errorMsg\n};\nreturn msg;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 610,
    "y": 200,
    "wires": [
      [
        "fb27549faaf4df38"
      ]
    ]
  },
  {
    "id": "1426ab1e430853ca",
    "type": "debug",
    "z": "b60c316ff0a6b6c0",
    "name": "debug 31",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "targetType": "full",
    "statusVal": "",
    "statusType": "auto",
    "x": 320,
    "y": 180,
    "wires": []
  },
  {
    "id": "168aa29d0a82a483",
    "type": "change",
    "z": "b60c316ff0a6b6c0",
    "name": "",
    "rules": [
      {
        "t": "set",
        "p": "StationTask_50.BillCode",
        "pt": "global",
        "to": "-",
        "tot": "str"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 710,
    "y": 40,
    "wires": [
      []
    ]
  }
]